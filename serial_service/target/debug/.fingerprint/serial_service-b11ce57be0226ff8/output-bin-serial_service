{"message":"unresolved import `rust_uart`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018, paths in `use` statements are relative to the current module\nunless they begin with the name of a crate or a literal `crate::`, in which\ncase they start from the crate root. As in Rust 2015 code, the `self::` and\n`super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nIn Rust 2018 the `extern crate` declaration is not required and you can instead\njust `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/model.rs","byte_start":80,"byte_end":89,"line_start":5,"line_end":5,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"use rust_uart::*;","highlight_start":5,"highlight_end":14}],"label":"use of undeclared crate or module `rust_uart`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `rust_uart`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/model.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse rust_uart::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `rust_uart`\u001b[0m\n\n"}
{"message":"cannot find type `Connection` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/model.rs","byte_start":268,"byte_end":278,"line_start":15,"line_end":15,"column_start":23,"column_end":33,"is_primary":true,"text":[{"text":"    device: Arc<Mutex<Connection>>,","highlight_start":23,"highlight_end":33}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might be missing a type parameter","code":null,"level":"help","spans":[{"file_name":"src/model.rs","byte_start":243,"byte_end":243,"line_start":14,"line_end":14,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"pub struct Subsystem {","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"<Connection>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Connection` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/model.rs:15:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct Subsystem {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: you might be missing a type parameter: `<Connection>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    device: Arc<Mutex<Connection>>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `Connection` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/model.rs","byte_start":335,"byte_end":345,"line_start":19,"line_end":19,"column_start":34,"column_end":44,"is_primary":true,"text":[{"text":"    pub fn new(device: Arc<Mutex<Connection>>) -> Subsystem {","highlight_start":34,"highlight_end":44}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might be missing a type parameter","code":null,"level":"help","spans":[{"file_name":"src/model.rs","byte_start":289,"byte_end":289,"line_start":18,"line_end":18,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"impl Subsystem {","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"<Connection>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Connection` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/model.rs:19:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl Subsystem {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: you might be missing a type parameter: `<Connection>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn new(device: Arc<Mutex<Connection>>) -> Subsystem {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `RxReading` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/model.rs","byte_start":977,"byte_end":986,"line_start":40,"line_end":40,"column_start":37,"column_end":46,"is_primary":true,"text":[{"text":"    pub fn uart_rx(&self) -> Result<RxReading, Error> {","highlight_start":37,"highlight_end":46}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might be missing a type parameter","code":null,"level":"help","spans":[{"file_name":"src/model.rs","byte_start":289,"byte_end":289,"line_start":18,"line_end":18,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"impl Subsystem {","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"<RxReading>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `RxReading` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/model.rs:40:37\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl Subsystem {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: you might be missing a type parameter: `<RxReading>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn uart_rx(&self) -> Result<RxReading, Error> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find value `conn` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/model.rs","byte_start":1288,"byte_end":1292,"line_start":46,"line_end":46,"column_start":34,"column_end":38,"is_primary":true,"text":[{"text":"                let conn = match conn.lock() {","highlight_start":34,"highlight_end":38}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `conn` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/model.rs:46:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                let conn = match conn.lock() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find value `MAX_READ` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/model.rs","byte_start":1833,"byte_end":1841,"line_start":59,"line_end":59,"column_start":55,"column_end":63,"is_primary":true,"text":[{"text":"                    let mut buffer: Vec<u8> = vec![0; MAX_READ];","highlight_start":55,"highlight_end":63}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `MAX_READ` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/model.rs:59:55\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    let mut buffer: Vec<u8> = vec![0; MAX_READ];\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find value `MAX_READ` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/model.rs","byte_start":2163,"byte_end":2171,"line_start":67,"line_end":67,"column_start":58,"column_end":66,"is_primary":true,"text":[{"text":"                            if num == 0 || totalbytes >= MAX_READ {","highlight_start":58,"highlight_end":66}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `MAX_READ` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/model.rs:67:58\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| ...\u001b[0m\u001b[0m                   if num == 0 || totalbytes >= MAX_READ {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `UartRX` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/schema.rs","byte_start":452,"byte_end":458,"line_start":20,"line_end":20,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"graphql_object!(UartRX: Context as \"UartRX\" |&self| {","highlight_start":17,"highlight_end":23}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `UartRX` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/schema.rs:20:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mgraphql_object!(UartRX: Context as \"UartRX\" |&self| {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"this function takes 1 argument but 0 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":509,"byte_end":511,"line_start":24,"line_end":24,"column_start":23,"column_end":25,"is_primary":false,"text":[{"text":"        Subsystem::new(),","highlight_start":23,"highlight_end":25}],"label":"supplied 0 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":495,"byte_end":509,"line_start":24,"line_end":24,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        Subsystem::new(),","highlight_start":9,"highlight_end":23}],"label":"expected 1 argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src/model.rs","byte_start":317,"byte_end":347,"line_start":19,"line_end":19,"column_start":16,"column_end":46,"is_primary":false,"text":[{"text":"    pub fn new(device: Arc<Mutex<Connection>>) -> Subsystem {","highlight_start":16,"highlight_end":46}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/model.rs","byte_start":313,"byte_end":316,"line_start":19,"line_end":19,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(device: Arc<Mutex<Connection>>) -> Subsystem {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 1 argument but 0 arguments were supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:24:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        Subsystem::new(),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msupplied 0 arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 1 argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/model.rs:19:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn new(device: Arc<Mutex<Connection>>) -> Subsystem {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\n\n"}
{"message":"the trait bound `Result<Vec<u8>, FieldError>: IntoResolvable<'_, DefaultScalarValue, _, kubos_service::Context<Subsystem>>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":10639,"byte_end":10652,"line_start":363,"line_end":363,"column_start":34,"column_end":47,"is_primary":true,"text":[{"text":"                        registry.field_convert::<$return_ty, _, Self::Context>(","highlight_start":34,"highlight_end":47}],"label":"the trait `IntoResolvable<'_, DefaultScalarValue, _, kubos_service::Context<Subsystem>>` is not implemented for `Result<Vec<u8>, FieldError>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":8610,"byte_end":8743,"line_start":324,"line_end":328,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::$success_callback!(","highlight_start":9,"highlight_end":36},{"text":"            @generate,","highlight_start":1,"highlight_end":23},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":15306,"byte_end":16046,"line_start":515,"line_end":535,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":9,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":9852,"byte_end":10440,"line_start":365,"line_end":381,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":9,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                $(lifetimes = [$($lifetime,)*],)*","highlight_start":1,"highlight_end":50},{"text":"                $(name = $name,)*","highlight_start":1,"highlight_end":34},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                $(outname = {$($outname)*},)*","highlight_start":1,"highlight_end":46},{"text":"                $(scalar = {$($scalar)*},)*","highlight_start":1,"highlight_end":44},{"text":"                description = $desc,","highlight_start":1,"highlight_end":37},{"text":"                $(additional = {$($other)*},)*","highlight_start":1,"highlight_end":47},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":10692,"byte_end":10973,"line_start":390,"line_end":397,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":9,"highlight_end":45},{"text":"            @parse_description,","highlight_start":1,"highlight_end":32},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":16217,"byte_end":16534,"line_start":504,"line_end":513,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":9,"highlight_end":45},{"text":"            success_callback = graphql_object,","highlight_start":1,"highlight_end":47},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = graphql_object,","highlight_start":1,"highlight_end":43},{"text":"                header = {@parse_interfaces,},","highlight_start":1,"highlight_end":47},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [],","highlight_start":1,"highlight_end":24},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":4424,"byte_end":4764,"line_start":168,"line_end":179,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::$callback!(","highlight_start":9,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":16688,"byte_end":16805,"line_start":523,"line_end":526,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__juniper_parse_object_header!(","highlight_start":9,"highlight_end":48},{"text":"            callback = graphql_object,","highlight_start":1,"highlight_end":39},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/schema.rs","byte_start":185,"byte_end":396,"line_start":9,"line_end":15,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"graphql_object!(Subsystem: Context as \"Subsystem\" |&self| {","highlight_start":1,"highlight_end":60},{"text":"    description: \"Service subsystem\"","highlight_start":1,"highlight_end":37},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    field uart_rx() -> FieldResult<Vec<u8>> as \"Reading of subsystem uart\" {","highlight_start":1,"highlight_end":77},{"text":"        Ok(self.uart_rx()?)","highlight_start":1,"highlight_end":28},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"});","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"graphql_object!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":8678,"byte_end":16815,"line_start":314,"line_end":529,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! graphql_object {","highlight_start":1,"highlight_end":30},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @generate,","highlight_start":1,"highlight_end":19},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetimes:tt,)*],","highlight_start":1,"highlight_end":46},{"text":"            name = $name: ty,","highlight_start":1,"highlight_end":30},{"text":"            ctx = $ctx: ty,","highlight_start":1,"highlight_end":28},{"text":"            main_self = $main_self: ident,","highlight_start":1,"highlight_end":43},{"text":"            outname = {$($outname: tt)*},","highlight_start":1,"highlight_end":42},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: expr,)*","highlight_start":1,"highlight_end":49},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($interface:ty,)*],)*","highlight_start":1,"highlight_end":55},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({","highlight_start":1,"highlight_end":21},{"text":"            name = $fn_name: ident,","highlight_start":1,"highlight_end":36},{"text":"            body = $body: block,","highlight_start":1,"highlight_end":33},{"text":"            return_ty = $return_ty: ty,","highlight_start":1,"highlight_end":40},{"text":"            args = [$({","highlight_start":1,"highlight_end":24},{"text":"                arg_name = $arg_name : ident,","highlight_start":1,"highlight_end":46},{"text":"                arg_ty = $arg_ty: ty,","highlight_start":1,"highlight_end":38},{"text":"                $(arg_default = $arg_default: expr,)*","highlight_start":1,"highlight_end":54},{"text":"                $(arg_description = $arg_description: expr,)*","highlight_start":1,"highlight_end":62},{"text":"                $(arg_docstring = $arg_docstring: expr,)*","highlight_start":1,"highlight_end":58},{"text":"            },)*],","highlight_start":1,"highlight_end":19},{"text":"            $(decs = $fn_description: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(docstring = $docstring: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(deprecated = $deprecated: expr,)*","highlight_start":1,"highlight_end":48},{"text":"            $(executor_var = $executor: ident,)*","highlight_start":1,"highlight_end":49},{"text":"        },)*],","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_impl_trait!(","highlight_start":1,"highlight_end":39},{"text":"            impl<$($scalar)* $(, $lifetimes)* > GraphQLType for $name {","highlight_start":1,"highlight_end":72},{"text":"                type Context = $ctx;","highlight_start":1,"highlight_end":37},{"text":"                type TypeInfo = ();","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn name(_ : &Self::TypeInfo) -> Option<&str> {","highlight_start":1,"highlight_end":63},{"text":"                    Some($($outname)*)","highlight_start":1,"highlight_end":39},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn meta<'r>(","highlight_start":1,"highlight_end":29},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    registry: &mut $crate::Registry<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":104},{"text":"                ) -> $crate::meta::MetaType<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":96},{"text":"                where for<'__b> &'__b $crate::__juniper_insert_generic!($($scalar)+): $crate::ScalarRefValue<'__b>,","highlight_start":1,"highlight_end":116},{"text":"                    $crate::__juniper_insert_generic!($($scalar)+): 'r","highlight_start":1,"highlight_end":71},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    let fields = &[$(","highlight_start":1,"highlight_end":38},{"text":"                        registry.field_convert::<$return_ty, _, Self::Context>(","highlight_start":1,"highlight_end":80},{"text":"                            &$crate::to_camel_case(stringify!($fn_name)),","highlight_start":1,"highlight_end":74},{"text":"                            info","highlight_start":1,"highlight_end":33},{"text":"                        )","highlight_start":1,"highlight_end":26},{"text":"                            $(.description($fn_description))*","highlight_start":1,"highlight_end":62},{"text":"                            .push_docstring(&[$($docstring,)*])","highlight_start":1,"highlight_end":64},{"text":"                            $(.deprecated($deprecated))*","highlight_start":1,"highlight_end":57},{"text":"                            $(.argument(","highlight_start":1,"highlight_end":41},{"text":"                                $crate::__juniper_create_arg!(","highlight_start":1,"highlight_end":63},{"text":"                                    registry = registry,","highlight_start":1,"highlight_end":57},{"text":"                                    info = info,","highlight_start":1,"highlight_end":49},{"text":"                                    arg_ty = $arg_ty,","highlight_start":1,"highlight_end":54},{"text":"                                    arg_name = $arg_name,","highlight_start":1,"highlight_end":58},{"text":"                                    $(default = $arg_default,)*","highlight_start":1,"highlight_end":64},{"text":"                                    $(description = $arg_description,)*","highlight_start":1,"highlight_end":72},{"text":"                                    $(docstring = $arg_docstring,)*","highlight_start":1,"highlight_end":68},{"text":"                                )","highlight_start":1,"highlight_end":34},{"text":"                            ))*,","highlight_start":1,"highlight_end":33},{"text":"                    )*];","highlight_start":1,"highlight_end":25},{"text":"                    registry.build_object_type::<$name>(","highlight_start":1,"highlight_end":57},{"text":"                        info, fields","highlight_start":1,"highlight_end":37},{"text":"                    )","highlight_start":1,"highlight_end":22},{"text":"                        $(.description($desciption))*","highlight_start":1,"highlight_end":54},{"text":"                        $($(.interfaces(&[","highlight_start":1,"highlight_end":43},{"text":"                           $(registry.get_type::<$interface>(&()),)*","highlight_start":1,"highlight_end":69},{"text":"                        ]))*)*","highlight_start":1,"highlight_end":31},{"text":"                        .into_meta()","highlight_start":1,"highlight_end":37},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn concrete_type_name(&self, _: &Self::Context, _: &Self::TypeInfo) -> String {","highlight_start":1,"highlight_end":96},{"text":"                    $($outname)*.to_owned()","highlight_start":1,"highlight_end":44},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[allow(unused_variables)]","highlight_start":1,"highlight_end":43},{"text":"                fn resolve_field(","highlight_start":1,"highlight_end":34},{"text":"                    &$main_self,","highlight_start":1,"highlight_end":33},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    field: &str,","highlight_start":1,"highlight_end":33},{"text":"                    args: &$crate::Arguments<$crate::__juniper_insert_generic!($($scalar)+)>,","highlight_start":1,"highlight_end":94},{"text":"                    executor: &$crate::Executor<Self::Context, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":111},{"text":"                ) -> $crate::ExecutionResult<$crate::__juniper_insert_generic!($($scalar)+)> {","highlight_start":1,"highlight_end":95},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        if field == &$crate::to_camel_case(stringify!($fn_name)) {","highlight_start":1,"highlight_end":83},{"text":"                            let result: $return_ty = (|| {","highlight_start":1,"highlight_end":59},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $arg_name: $arg_ty = args.get(&$crate::to_camel_case(stringify!($arg_name)))","highlight_start":1,"highlight_end":117},{"text":"                                        .expect(concat!(","highlight_start":1,"highlight_end":57},{"text":"                                            \"Argument \",","highlight_start":1,"highlight_end":57},{"text":"                                            stringify!($arg_name),","highlight_start":1,"highlight_end":67},{"text":"                                            \" missing - validation must have failed\"","highlight_start":1,"highlight_end":85},{"text":"                                        ));","highlight_start":1,"highlight_end":44},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $executor = &executor;","highlight_start":1,"highlight_end":63},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $body","highlight_start":1,"highlight_end":38},{"text":"                            })();","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                            return $crate::IntoResolvable::into(result, executor.context())","highlight_start":1,"highlight_end":92},{"text":"                                .and_then(|res| {","highlight_start":1,"highlight_end":50},{"text":"                                    match res {","highlight_start":1,"highlight_end":48},{"text":"                                        Some((ctx, r)) => {","highlight_start":1,"highlight_end":60},{"text":"                                            executor.replaced_context(ctx)","highlight_start":1,"highlight_end":75},{"text":"                                                .resolve_with_ctx(&(), &r)","highlight_start":1,"highlight_end":75},{"text":"                                        }","highlight_start":1,"highlight_end":42},{"text":"                                        None => Ok($crate::Value::null())","highlight_start":1,"highlight_end":74},{"text":"                                    }","highlight_start":1,"highlight_end":38},{"text":"                                });","highlight_start":1,"highlight_end":36},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    panic!(\"Field {} not found on type {}\", field, $($outname)*);","highlight_start":1,"highlight_end":82},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetime:tt,)*],","highlight_start":1,"highlight_end":45},{"text":"            name = $name:ty,","highlight_start":1,"highlight_end":29},{"text":"            ctx = $ctxt: ty,","highlight_start":1,"highlight_end":29},{"text":"            main_self = $mainself: ident,","highlight_start":1,"highlight_end":42},{"text":"            outname = {$($outname:tt)*},","highlight_start":1,"highlight_end":41},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: tt,)*","highlight_start":1,"highlight_end":47},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($_interface:ty,)*],)*","highlight_start":1,"highlight_end":56},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = [$($interface: ty),+]  $($rest:tt)*","highlight_start":1,"highlight_end":51},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                ctx = $ctxt,","highlight_start":1,"highlight_end":29},{"text":"                main_self = $mainself,","highlight_start":1,"highlight_end":39},{"text":"                outname = {$($outname)*},","highlight_start":1,"highlight_end":42},{"text":"                scalar = {$($scalar)*},","highlight_start":1,"highlight_end":40},{"text":"                $(description = $desciption,)*","highlight_start":1,"highlight_end":47},{"text":"                additional = {","highlight_start":1,"highlight_end":31},{"text":"                        interfaces = [$($interface,)*],","highlight_start":1,"highlight_end":56},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)* },","highlight_start":1,"highlight_end":33},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = interfaces: $($rest:tt)*","highlight_start":1,"highlight_end":40},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::graphql_object!(","highlight_start":1,"highlight_end":33},{"text":"            @parse_interfaces,","highlight_start":1,"highlight_end":31},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = { $($meta)* },","highlight_start":1,"highlight_end":34},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse,","highlight_start":1,"highlight_end":16},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = graphql_object,","highlight_start":1,"highlight_end":47},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = graphql_object,","highlight_start":1,"highlight_end":43},{"text":"                header = {@parse_interfaces,},","highlight_start":1,"highlight_end":47},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [],","highlight_start":1,"highlight_end":24},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@$($stuff:tt)*) => {","highlight_start":1,"highlight_end":26},{"text":"        compile_error!(\"Invalid syntax for `graphql_object!`\");","highlight_start":1,"highlight_end":64},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $($rest:tt)*","highlight_start":1,"highlight_end":21},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_object_header!(","highlight_start":1,"highlight_end":48},{"text":"            callback = graphql_object,","highlight_start":1,"highlight_end":39},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__juniper_parse_object_header!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":1275,"byte_end":8320,"line_start":56,"line_end":312,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! __juniper_parse_object_header {","highlight_start":1,"highlight_end":45},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback:ident,","highlight_start":1,"highlight_end":36},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)* as $outname: tt","highlight_start":1,"highlight_end":77},{"text":"        where Scalar = <$generic:tt $(: $bound:tt)*> $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":80},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<$generic $(: $bound)*>},","highlight_start":1,"highlight_end":52},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback:ident,","highlight_start":1,"highlight_end":36},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)* as $outname: tt","highlight_start":1,"highlight_end":77},{"text":"        where Scalar = $scalar: ty $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":62},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {$scalar},","highlight_start":1,"highlight_end":36},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)* as $outname: tt $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":104},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* as $outname: tt","highlight_start":1,"highlight_end":57},{"text":"        where Scalar = <$generic:tt $(: $bound:tt)*> $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":80},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<$generic $(:$bound)*>},","highlight_start":1,"highlight_end":51},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* as $outname: tt","highlight_start":1,"highlight_end":57},{"text":"        where Scalar = $scalar: ty $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":62},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {$scalar},","highlight_start":1,"highlight_end":36},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* as $outname: tt $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":84},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)*","highlight_start":1,"highlight_end":61},{"text":"        where Scalar = <$generic:tt $(: $bound:tt)*> $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":80},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {<$generic $(:$bounds)*>},","highlight_start":1,"highlight_end":52},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)*","highlight_start":1,"highlight_end":61},{"text":"        where Scalar = $scalar: ty $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":62},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {$scalar},","highlight_start":1,"highlight_end":36},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)* $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":88},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)*","highlight_start":1,"highlight_end":41},{"text":"        where Scalar = <$generic:tt $(: $bound:tt)*> $(| &$mainself:ident |)*","highlight_start":1,"highlight_end":78},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {<$generic $(: $bound)*>},","highlight_start":1,"highlight_end":52},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* where Scalar = $scalar: ty $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":95},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {$scalar},","highlight_start":1,"highlight_end":36},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":68},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        compile_error!(\"Invalid syntax\");","highlight_start":1,"highlight_end":42},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::graphql_object!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":8678,"byte_end":16815,"line_start":314,"line_end":529,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! graphql_object {","highlight_start":1,"highlight_end":30},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @generate,","highlight_start":1,"highlight_end":19},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetimes:tt,)*],","highlight_start":1,"highlight_end":46},{"text":"            name = $name: ty,","highlight_start":1,"highlight_end":30},{"text":"            ctx = $ctx: ty,","highlight_start":1,"highlight_end":28},{"text":"            main_self = $main_self: ident,","highlight_start":1,"highlight_end":43},{"text":"            outname = {$($outname: tt)*},","highlight_start":1,"highlight_end":42},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: expr,)*","highlight_start":1,"highlight_end":49},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($interface:ty,)*],)*","highlight_start":1,"highlight_end":55},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({","highlight_start":1,"highlight_end":21},{"text":"            name = $fn_name: ident,","highlight_start":1,"highlight_end":36},{"text":"            body = $body: block,","highlight_start":1,"highlight_end":33},{"text":"            return_ty = $return_ty: ty,","highlight_start":1,"highlight_end":40},{"text":"            args = [$({","highlight_start":1,"highlight_end":24},{"text":"                arg_name = $arg_name : ident,","highlight_start":1,"highlight_end":46},{"text":"                arg_ty = $arg_ty: ty,","highlight_start":1,"highlight_end":38},{"text":"                $(arg_default = $arg_default: expr,)*","highlight_start":1,"highlight_end":54},{"text":"                $(arg_description = $arg_description: expr,)*","highlight_start":1,"highlight_end":62},{"text":"                $(arg_docstring = $arg_docstring: expr,)*","highlight_start":1,"highlight_end":58},{"text":"            },)*],","highlight_start":1,"highlight_end":19},{"text":"            $(decs = $fn_description: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(docstring = $docstring: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(deprecated = $deprecated: expr,)*","highlight_start":1,"highlight_end":48},{"text":"            $(executor_var = $executor: ident,)*","highlight_start":1,"highlight_end":49},{"text":"        },)*],","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_impl_trait!(","highlight_start":1,"highlight_end":39},{"text":"            impl<$($scalar)* $(, $lifetimes)* > GraphQLType for $name {","highlight_start":1,"highlight_end":72},{"text":"                type Context = $ctx;","highlight_start":1,"highlight_end":37},{"text":"                type TypeInfo = ();","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn name(_ : &Self::TypeInfo) -> Option<&str> {","highlight_start":1,"highlight_end":63},{"text":"                    Some($($outname)*)","highlight_start":1,"highlight_end":39},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn meta<'r>(","highlight_start":1,"highlight_end":29},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    registry: &mut $crate::Registry<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":104},{"text":"                ) -> $crate::meta::MetaType<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":96},{"text":"                where for<'__b> &'__b $crate::__juniper_insert_generic!($($scalar)+): $crate::ScalarRefValue<'__b>,","highlight_start":1,"highlight_end":116},{"text":"                    $crate::__juniper_insert_generic!($($scalar)+): 'r","highlight_start":1,"highlight_end":71},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    let fields = &[$(","highlight_start":1,"highlight_end":38},{"text":"                        registry.field_convert::<$return_ty, _, Self::Context>(","highlight_start":1,"highlight_end":80},{"text":"                            &$crate::to_camel_case(stringify!($fn_name)),","highlight_start":1,"highlight_end":74},{"text":"                            info","highlight_start":1,"highlight_end":33},{"text":"                        )","highlight_start":1,"highlight_end":26},{"text":"                            $(.description($fn_description))*","highlight_start":1,"highlight_end":62},{"text":"                            .push_docstring(&[$($docstring,)*])","highlight_start":1,"highlight_end":64},{"text":"                            $(.deprecated($deprecated))*","highlight_start":1,"highlight_end":57},{"text":"                            $(.argument(","highlight_start":1,"highlight_end":41},{"text":"                                $crate::__juniper_create_arg!(","highlight_start":1,"highlight_end":63},{"text":"                                    registry = registry,","highlight_start":1,"highlight_end":57},{"text":"                                    info = info,","highlight_start":1,"highlight_end":49},{"text":"                                    arg_ty = $arg_ty,","highlight_start":1,"highlight_end":54},{"text":"                                    arg_name = $arg_name,","highlight_start":1,"highlight_end":58},{"text":"                                    $(default = $arg_default,)*","highlight_start":1,"highlight_end":64},{"text":"                                    $(description = $arg_description,)*","highlight_start":1,"highlight_end":72},{"text":"                                    $(docstring = $arg_docstring,)*","highlight_start":1,"highlight_end":68},{"text":"                                )","highlight_start":1,"highlight_end":34},{"text":"                            ))*,","highlight_start":1,"highlight_end":33},{"text":"                    )*];","highlight_start":1,"highlight_end":25},{"text":"                    registry.build_object_type::<$name>(","highlight_start":1,"highlight_end":57},{"text":"                        info, fields","highlight_start":1,"highlight_end":37},{"text":"                    )","highlight_start":1,"highlight_end":22},{"text":"                        $(.description($desciption))*","highlight_start":1,"highlight_end":54},{"text":"                        $($(.interfaces(&[","highlight_start":1,"highlight_end":43},{"text":"                           $(registry.get_type::<$interface>(&()),)*","highlight_start":1,"highlight_end":69},{"text":"                        ]))*)*","highlight_start":1,"highlight_end":31},{"text":"                        .into_meta()","highlight_start":1,"highlight_end":37},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn concrete_type_name(&self, _: &Self::Context, _: &Self::TypeInfo) -> String {","highlight_start":1,"highlight_end":96},{"text":"                    $($outname)*.to_owned()","highlight_start":1,"highlight_end":44},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[allow(unused_variables)]","highlight_start":1,"highlight_end":43},{"text":"                fn resolve_field(","highlight_start":1,"highlight_end":34},{"text":"                    &$main_self,","highlight_start":1,"highlight_end":33},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    field: &str,","highlight_start":1,"highlight_end":33},{"text":"                    args: &$crate::Arguments<$crate::__juniper_insert_generic!($($scalar)+)>,","highlight_start":1,"highlight_end":94},{"text":"                    executor: &$crate::Executor<Self::Context, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":111},{"text":"                ) -> $crate::ExecutionResult<$crate::__juniper_insert_generic!($($scalar)+)> {","highlight_start":1,"highlight_end":95},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        if field == &$crate::to_camel_case(stringify!($fn_name)) {","highlight_start":1,"highlight_end":83},{"text":"                            let result: $return_ty = (|| {","highlight_start":1,"highlight_end":59},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $arg_name: $arg_ty = args.get(&$crate::to_camel_case(stringify!($arg_name)))","highlight_start":1,"highlight_end":117},{"text":"                                        .expect(concat!(","highlight_start":1,"highlight_end":57},{"text":"                                            \"Argument \",","highlight_start":1,"highlight_end":57},{"text":"                                            stringify!($arg_name),","highlight_start":1,"highlight_end":67},{"text":"                                            \" missing - validation must have failed\"","highlight_start":1,"highlight_end":85},{"text":"                                        ));","highlight_start":1,"highlight_end":44},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $executor = &executor;","highlight_start":1,"highlight_end":63},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $body","highlight_start":1,"highlight_end":38},{"text":"                            })();","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                            return $crate::IntoResolvable::into(result, executor.context())","highlight_start":1,"highlight_end":92},{"text":"                                .and_then(|res| {","highlight_start":1,"highlight_end":50},{"text":"                                    match res {","highlight_start":1,"highlight_end":48},{"text":"                                        Some((ctx, r)) => {","highlight_start":1,"highlight_end":60},{"text":"                                            executor.replaced_context(ctx)","highlight_start":1,"highlight_end":75},{"text":"                                                .resolve_with_ctx(&(), &r)","highlight_start":1,"highlight_end":75},{"text":"                                        }","highlight_start":1,"highlight_end":42},{"text":"                                        None => Ok($crate::Value::null())","highlight_start":1,"highlight_end":74},{"text":"                                    }","highlight_start":1,"highlight_end":38},{"text":"                                });","highlight_start":1,"highlight_end":36},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    panic!(\"Field {} not found on type {}\", field, $($outname)*);","highlight_start":1,"highlight_end":82},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetime:tt,)*],","highlight_start":1,"highlight_end":45},{"text":"            name = $name:ty,","highlight_start":1,"highlight_end":29},{"text":"            ctx = $ctxt: ty,","highlight_start":1,"highlight_end":29},{"text":"            main_self = $mainself: ident,","highlight_start":1,"highlight_end":42},{"text":"            outname = {$($outname:tt)*},","highlight_start":1,"highlight_end":41},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: tt,)*","highlight_start":1,"highlight_end":47},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($_interface:ty,)*],)*","highlight_start":1,"highlight_end":56},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = [$($interface: ty),+]  $($rest:tt)*","highlight_start":1,"highlight_end":51},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                ctx = $ctxt,","highlight_start":1,"highlight_end":29},{"text":"                main_self = $mainself,","highlight_start":1,"highlight_end":39},{"text":"                outname = {$($outname)*},","highlight_start":1,"highlight_end":42},{"text":"                scalar = {$($scalar)*},","highlight_start":1,"highlight_end":40},{"text":"                $(description = $desciption,)*","highlight_start":1,"highlight_end":47},{"text":"                additional = {","highlight_start":1,"highlight_end":31},{"text":"                        interfaces = [$($interface,)*],","highlight_start":1,"highlight_end":56},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)* },","highlight_start":1,"highlight_end":33},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = interfaces: $($rest:tt)*","highlight_start":1,"highlight_end":40},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::graphql_object!(","highlight_start":1,"highlight_end":33},{"text":"            @parse_interfaces,","highlight_start":1,"highlight_end":31},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = { $($meta)* },","highlight_start":1,"highlight_end":34},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse,","highlight_start":1,"highlight_end":16},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = graphql_object,","highlight_start":1,"highlight_end":47},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = graphql_object,","highlight_start":1,"highlight_end":43},{"text":"                header = {@parse_interfaces,},","highlight_start":1,"highlight_end":47},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [],","highlight_start":1,"highlight_end":24},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@$($stuff:tt)*) => {","highlight_start":1,"highlight_end":26},{"text":"        compile_error!(\"Invalid syntax for `graphql_object!`\");","highlight_start":1,"highlight_end":64},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $($rest:tt)*","highlight_start":1,"highlight_end":21},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_object_header!(","highlight_start":1,"highlight_end":48},{"text":"            callback = graphql_object,","highlight_start":1,"highlight_end":39},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__juniper_parse_field_list!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":8353,"byte_end":16697,"line_start":316,"line_end":561,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! __juniper_parse_field_list {","highlight_start":1,"highlight_end":42},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest =","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$success_callback!(","highlight_start":1,"highlight_end":36},{"text":"            @generate,","highlight_start":1,"highlight_end":23},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = , $($rest: tt)*","highlight_start":1,"highlight_end":31},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_description,","highlight_start":1,"highlight_end":28},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            $(lifetimes = [$($lifetime:tt,)*],)*","highlight_start":1,"highlight_end":49},{"text":"            $(name = $name:ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(ctx = $ctxt: ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(main_self = $mainself: ident,)*","highlight_start":1,"highlight_end":46},{"text":"            $(outname = {$($outname:tt)*},)*","highlight_start":1,"highlight_end":45},{"text":"            $(scalar = {$($scalar:tt)*},)*","highlight_start":1,"highlight_end":43},{"text":"            $(description = $_desciption: tt,)*","highlight_start":1,"highlight_end":48},{"text":"            $(additional = {$($other: tt)*},)*","highlight_start":1,"highlight_end":47},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $desc: tt  $($rest:tt)*","highlight_start":1,"highlight_end":39},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                $(lifetimes = [$($lifetime,)*],)*","highlight_start":1,"highlight_end":50},{"text":"                $(name = $name,)*","highlight_start":1,"highlight_end":34},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                $(outname = {$($outname)*},)*","highlight_start":1,"highlight_end":46},{"text":"                $(scalar = {$($scalar)*},)*","highlight_start":1,"highlight_end":44},{"text":"                description = $desc,","highlight_start":1,"highlight_end":37},{"text":"                $(additional = {$($other)*},)*","highlight_start":1,"highlight_end":47},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)*},","highlight_start":1,"highlight_end":32},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = description:  $($rest:tt)*","highlight_start":1,"highlight_end":42},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            @parse_description,","highlight_start":1,"highlight_end":32},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        #[deprecated $(( $(since = $since: tt,)* note = $reason: tt ))* ]","highlight_start":1,"highlight_end":74},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                deprecated = None$(.unwrap_or(Some($reason)))*,","highlight_start":1,"highlight_end":64},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field deprecated $reason:tt $name: ident (","highlight_start":1,"highlight_end":58},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                deprecated = Some($reason),","highlight_start":1,"highlight_end":44},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field $name: ident (","highlight_start":1,"highlight_end":36},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {","highlight_start":1,"highlight_end":30},{"text":"            callback = $callback: ident,","highlight_start":1,"highlight_end":41},{"text":"            header = {$($header:tt)*},","highlight_start":1,"highlight_end":39},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            $($header)*","highlight_start":1,"highlight_end":24},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = $callback,","highlight_start":1,"highlight_end":38},{"text":"                header = {$($header)*},","highlight_start":1,"highlight_end":40},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__juniper_parse_field_list!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":8353,"byte_end":16697,"line_start":316,"line_end":561,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! __juniper_parse_field_list {","highlight_start":1,"highlight_end":42},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest =","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$success_callback!(","highlight_start":1,"highlight_end":36},{"text":"            @generate,","highlight_start":1,"highlight_end":23},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = , $($rest: tt)*","highlight_start":1,"highlight_end":31},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_description,","highlight_start":1,"highlight_end":28},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            $(lifetimes = [$($lifetime:tt,)*],)*","highlight_start":1,"highlight_end":49},{"text":"            $(name = $name:ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(ctx = $ctxt: ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(main_self = $mainself: ident,)*","highlight_start":1,"highlight_end":46},{"text":"            $(outname = {$($outname:tt)*},)*","highlight_start":1,"highlight_end":45},{"text":"            $(scalar = {$($scalar:tt)*},)*","highlight_start":1,"highlight_end":43},{"text":"            $(description = $_desciption: tt,)*","highlight_start":1,"highlight_end":48},{"text":"            $(additional = {$($other: tt)*},)*","highlight_start":1,"highlight_end":47},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $desc: tt  $($rest:tt)*","highlight_start":1,"highlight_end":39},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                $(lifetimes = [$($lifetime,)*],)*","highlight_start":1,"highlight_end":50},{"text":"                $(name = $name,)*","highlight_start":1,"highlight_end":34},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                $(outname = {$($outname)*},)*","highlight_start":1,"highlight_end":46},{"text":"                $(scalar = {$($scalar)*},)*","highlight_start":1,"highlight_end":44},{"text":"                description = $desc,","highlight_start":1,"highlight_end":37},{"text":"                $(additional = {$($other)*},)*","highlight_start":1,"highlight_end":47},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)*},","highlight_start":1,"highlight_end":32},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = description:  $($rest:tt)*","highlight_start":1,"highlight_end":42},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            @parse_description,","highlight_start":1,"highlight_end":32},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        #[deprecated $(( $(since = $since: tt,)* note = $reason: tt ))* ]","highlight_start":1,"highlight_end":74},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                deprecated = None$(.unwrap_or(Some($reason)))*,","highlight_start":1,"highlight_end":64},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field deprecated $reason:tt $name: ident (","highlight_start":1,"highlight_end":58},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                deprecated = Some($reason),","highlight_start":1,"highlight_end":44},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field $name: ident (","highlight_start":1,"highlight_end":36},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {","highlight_start":1,"highlight_end":30},{"text":"            callback = $callback: ident,","highlight_start":1,"highlight_end":41},{"text":"            header = {$($header:tt)*},","highlight_start":1,"highlight_end":39},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            $($header)*","highlight_start":1,"highlight_end":24},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = $callback,","highlight_start":1,"highlight_end":38},{"text":"                header = {$($header)*},","highlight_start":1,"highlight_end":40},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__juniper_parse_field_list!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":8353,"byte_end":16697,"line_start":316,"line_end":561,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! __juniper_parse_field_list {","highlight_start":1,"highlight_end":42},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest =","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$success_callback!(","highlight_start":1,"highlight_end":36},{"text":"            @generate,","highlight_start":1,"highlight_end":23},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = , $($rest: tt)*","highlight_start":1,"highlight_end":31},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_description,","highlight_start":1,"highlight_end":28},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            $(lifetimes = [$($lifetime:tt,)*],)*","highlight_start":1,"highlight_end":49},{"text":"            $(name = $name:ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(ctx = $ctxt: ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(main_self = $mainself: ident,)*","highlight_start":1,"highlight_end":46},{"text":"            $(outname = {$($outname:tt)*},)*","highlight_start":1,"highlight_end":45},{"text":"            $(scalar = {$($scalar:tt)*},)*","highlight_start":1,"highlight_end":43},{"text":"            $(description = $_desciption: tt,)*","highlight_start":1,"highlight_end":48},{"text":"            $(additional = {$($other: tt)*},)*","highlight_start":1,"highlight_end":47},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $desc: tt  $($rest:tt)*","highlight_start":1,"highlight_end":39},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                $(lifetimes = [$($lifetime,)*],)*","highlight_start":1,"highlight_end":50},{"text":"                $(name = $name,)*","highlight_start":1,"highlight_end":34},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                $(outname = {$($outname)*},)*","highlight_start":1,"highlight_end":46},{"text":"                $(scalar = {$($scalar)*},)*","highlight_start":1,"highlight_end":44},{"text":"                description = $desc,","highlight_start":1,"highlight_end":37},{"text":"                $(additional = {$($other)*},)*","highlight_start":1,"highlight_end":47},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)*},","highlight_start":1,"highlight_end":32},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = description:  $($rest:tt)*","highlight_start":1,"highlight_end":42},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            @parse_description,","highlight_start":1,"highlight_end":32},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        #[deprecated $(( $(since = $since: tt,)* note = $reason: tt ))* ]","highlight_start":1,"highlight_end":74},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                deprecated = None$(.unwrap_or(Some($reason)))*,","highlight_start":1,"highlight_end":64},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field deprecated $reason:tt $name: ident (","highlight_start":1,"highlight_end":58},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                deprecated = Some($reason),","highlight_start":1,"highlight_end":44},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field $name: ident (","highlight_start":1,"highlight_end":36},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {","highlight_start":1,"highlight_end":30},{"text":"            callback = $callback: ident,","highlight_start":1,"highlight_end":41},{"text":"            header = {$($header:tt)*},","highlight_start":1,"highlight_end":39},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            $($header)*","highlight_start":1,"highlight_end":24},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = $callback,","highlight_start":1,"highlight_end":38},{"text":"                header = {$($header)*},","highlight_start":1,"highlight_end":40},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__juniper_parse_field_list!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":8353,"byte_end":16697,"line_start":316,"line_end":561,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! __juniper_parse_field_list {","highlight_start":1,"highlight_end":42},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest =","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$success_callback!(","highlight_start":1,"highlight_end":36},{"text":"            @generate,","highlight_start":1,"highlight_end":23},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = , $($rest: tt)*","highlight_start":1,"highlight_end":31},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_description,","highlight_start":1,"highlight_end":28},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            $(lifetimes = [$($lifetime:tt,)*],)*","highlight_start":1,"highlight_end":49},{"text":"            $(name = $name:ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(ctx = $ctxt: ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(main_self = $mainself: ident,)*","highlight_start":1,"highlight_end":46},{"text":"            $(outname = {$($outname:tt)*},)*","highlight_start":1,"highlight_end":45},{"text":"            $(scalar = {$($scalar:tt)*},)*","highlight_start":1,"highlight_end":43},{"text":"            $(description = $_desciption: tt,)*","highlight_start":1,"highlight_end":48},{"text":"            $(additional = {$($other: tt)*},)*","highlight_start":1,"highlight_end":47},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $desc: tt  $($rest:tt)*","highlight_start":1,"highlight_end":39},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                $(lifetimes = [$($lifetime,)*],)*","highlight_start":1,"highlight_end":50},{"text":"                $(name = $name,)*","highlight_start":1,"highlight_end":34},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                $(outname = {$($outname)*},)*","highlight_start":1,"highlight_end":46},{"text":"                $(scalar = {$($scalar)*},)*","highlight_start":1,"highlight_end":44},{"text":"                description = $desc,","highlight_start":1,"highlight_end":37},{"text":"                $(additional = {$($other)*},)*","highlight_start":1,"highlight_end":47},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)*},","highlight_start":1,"highlight_end":32},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = description:  $($rest:tt)*","highlight_start":1,"highlight_end":42},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            @parse_description,","highlight_start":1,"highlight_end":32},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        #[deprecated $(( $(since = $since: tt,)* note = $reason: tt ))* ]","highlight_start":1,"highlight_end":74},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                deprecated = None$(.unwrap_or(Some($reason)))*,","highlight_start":1,"highlight_end":64},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field deprecated $reason:tt $name: ident (","highlight_start":1,"highlight_end":58},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                deprecated = Some($reason),","highlight_start":1,"highlight_end":44},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field $name: ident (","highlight_start":1,"highlight_end":36},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {","highlight_start":1,"highlight_end":30},{"text":"            callback = $callback: ident,","highlight_start":1,"highlight_end":41},{"text":"            header = {$($header:tt)*},","highlight_start":1,"highlight_end":39},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            $($header)*","highlight_start":1,"highlight_end":24},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = $callback,","highlight_start":1,"highlight_end":38},{"text":"                header = {$($header)*},","highlight_start":1,"highlight_end":40},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::graphql_object!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":8678,"byte_end":16815,"line_start":314,"line_end":529,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! graphql_object {","highlight_start":1,"highlight_end":30},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @generate,","highlight_start":1,"highlight_end":19},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetimes:tt,)*],","highlight_start":1,"highlight_end":46},{"text":"            name = $name: ty,","highlight_start":1,"highlight_end":30},{"text":"            ctx = $ctx: ty,","highlight_start":1,"highlight_end":28},{"text":"            main_self = $main_self: ident,","highlight_start":1,"highlight_end":43},{"text":"            outname = {$($outname: tt)*},","highlight_start":1,"highlight_end":42},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: expr,)*","highlight_start":1,"highlight_end":49},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($interface:ty,)*],)*","highlight_start":1,"highlight_end":55},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({","highlight_start":1,"highlight_end":21},{"text":"            name = $fn_name: ident,","highlight_start":1,"highlight_end":36},{"text":"            body = $body: block,","highlight_start":1,"highlight_end":33},{"text":"            return_ty = $return_ty: ty,","highlight_start":1,"highlight_end":40},{"text":"            args = [$({","highlight_start":1,"highlight_end":24},{"text":"                arg_name = $arg_name : ident,","highlight_start":1,"highlight_end":46},{"text":"                arg_ty = $arg_ty: ty,","highlight_start":1,"highlight_end":38},{"text":"                $(arg_default = $arg_default: expr,)*","highlight_start":1,"highlight_end":54},{"text":"                $(arg_description = $arg_description: expr,)*","highlight_start":1,"highlight_end":62},{"text":"                $(arg_docstring = $arg_docstring: expr,)*","highlight_start":1,"highlight_end":58},{"text":"            },)*],","highlight_start":1,"highlight_end":19},{"text":"            $(decs = $fn_description: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(docstring = $docstring: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(deprecated = $deprecated: expr,)*","highlight_start":1,"highlight_end":48},{"text":"            $(executor_var = $executor: ident,)*","highlight_start":1,"highlight_end":49},{"text":"        },)*],","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_impl_trait!(","highlight_start":1,"highlight_end":39},{"text":"            impl<$($scalar)* $(, $lifetimes)* > GraphQLType for $name {","highlight_start":1,"highlight_end":72},{"text":"                type Context = $ctx;","highlight_start":1,"highlight_end":37},{"text":"                type TypeInfo = ();","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn name(_ : &Self::TypeInfo) -> Option<&str> {","highlight_start":1,"highlight_end":63},{"text":"                    Some($($outname)*)","highlight_start":1,"highlight_end":39},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn meta<'r>(","highlight_start":1,"highlight_end":29},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    registry: &mut $crate::Registry<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":104},{"text":"                ) -> $crate::meta::MetaType<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":96},{"text":"                where for<'__b> &'__b $crate::__juniper_insert_generic!($($scalar)+): $crate::ScalarRefValue<'__b>,","highlight_start":1,"highlight_end":116},{"text":"                    $crate::__juniper_insert_generic!($($scalar)+): 'r","highlight_start":1,"highlight_end":71},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    let fields = &[$(","highlight_start":1,"highlight_end":38},{"text":"                        registry.field_convert::<$return_ty, _, Self::Context>(","highlight_start":1,"highlight_end":80},{"text":"                            &$crate::to_camel_case(stringify!($fn_name)),","highlight_start":1,"highlight_end":74},{"text":"                            info","highlight_start":1,"highlight_end":33},{"text":"                        )","highlight_start":1,"highlight_end":26},{"text":"                            $(.description($fn_description))*","highlight_start":1,"highlight_end":62},{"text":"                            .push_docstring(&[$($docstring,)*])","highlight_start":1,"highlight_end":64},{"text":"                            $(.deprecated($deprecated))*","highlight_start":1,"highlight_end":57},{"text":"                            $(.argument(","highlight_start":1,"highlight_end":41},{"text":"                                $crate::__juniper_create_arg!(","highlight_start":1,"highlight_end":63},{"text":"                                    registry = registry,","highlight_start":1,"highlight_end":57},{"text":"                                    info = info,","highlight_start":1,"highlight_end":49},{"text":"                                    arg_ty = $arg_ty,","highlight_start":1,"highlight_end":54},{"text":"                                    arg_name = $arg_name,","highlight_start":1,"highlight_end":58},{"text":"                                    $(default = $arg_default,)*","highlight_start":1,"highlight_end":64},{"text":"                                    $(description = $arg_description,)*","highlight_start":1,"highlight_end":72},{"text":"                                    $(docstring = $arg_docstring,)*","highlight_start":1,"highlight_end":68},{"text":"                                )","highlight_start":1,"highlight_end":34},{"text":"                            ))*,","highlight_start":1,"highlight_end":33},{"text":"                    )*];","highlight_start":1,"highlight_end":25},{"text":"                    registry.build_object_type::<$name>(","highlight_start":1,"highlight_end":57},{"text":"                        info, fields","highlight_start":1,"highlight_end":37},{"text":"                    )","highlight_start":1,"highlight_end":22},{"text":"                        $(.description($desciption))*","highlight_start":1,"highlight_end":54},{"text":"                        $($(.interfaces(&[","highlight_start":1,"highlight_end":43},{"text":"                           $(registry.get_type::<$interface>(&()),)*","highlight_start":1,"highlight_end":69},{"text":"                        ]))*)*","highlight_start":1,"highlight_end":31},{"text":"                        .into_meta()","highlight_start":1,"highlight_end":37},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn concrete_type_name(&self, _: &Self::Context, _: &Self::TypeInfo) -> String {","highlight_start":1,"highlight_end":96},{"text":"                    $($outname)*.to_owned()","highlight_start":1,"highlight_end":44},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[allow(unused_variables)]","highlight_start":1,"highlight_end":43},{"text":"                fn resolve_field(","highlight_start":1,"highlight_end":34},{"text":"                    &$main_self,","highlight_start":1,"highlight_end":33},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    field: &str,","highlight_start":1,"highlight_end":33},{"text":"                    args: &$crate::Arguments<$crate::__juniper_insert_generic!($($scalar)+)>,","highlight_start":1,"highlight_end":94},{"text":"                    executor: &$crate::Executor<Self::Context, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":111},{"text":"                ) -> $crate::ExecutionResult<$crate::__juniper_insert_generic!($($scalar)+)> {","highlight_start":1,"highlight_end":95},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        if field == &$crate::to_camel_case(stringify!($fn_name)) {","highlight_start":1,"highlight_end":83},{"text":"                            let result: $return_ty = (|| {","highlight_start":1,"highlight_end":59},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $arg_name: $arg_ty = args.get(&$crate::to_camel_case(stringify!($arg_name)))","highlight_start":1,"highlight_end":117},{"text":"                                        .expect(concat!(","highlight_start":1,"highlight_end":57},{"text":"                                            \"Argument \",","highlight_start":1,"highlight_end":57},{"text":"                                            stringify!($arg_name),","highlight_start":1,"highlight_end":67},{"text":"                                            \" missing - validation must have failed\"","highlight_start":1,"highlight_end":85},{"text":"                                        ));","highlight_start":1,"highlight_end":44},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $executor = &executor;","highlight_start":1,"highlight_end":63},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $body","highlight_start":1,"highlight_end":38},{"text":"                            })();","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                            return $crate::IntoResolvable::into(result, executor.context())","highlight_start":1,"highlight_end":92},{"text":"                                .and_then(|res| {","highlight_start":1,"highlight_end":50},{"text":"                                    match res {","highlight_start":1,"highlight_end":48},{"text":"                                        Some((ctx, r)) => {","highlight_start":1,"highlight_end":60},{"text":"                                            executor.replaced_context(ctx)","highlight_start":1,"highlight_end":75},{"text":"                                                .resolve_with_ctx(&(), &r)","highlight_start":1,"highlight_end":75},{"text":"                                        }","highlight_start":1,"highlight_end":42},{"text":"                                        None => Ok($crate::Value::null())","highlight_start":1,"highlight_end":74},{"text":"                                    }","highlight_start":1,"highlight_end":38},{"text":"                                });","highlight_start":1,"highlight_end":36},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    panic!(\"Field {} not found on type {}\", field, $($outname)*);","highlight_start":1,"highlight_end":82},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetime:tt,)*],","highlight_start":1,"highlight_end":45},{"text":"            name = $name:ty,","highlight_start":1,"highlight_end":29},{"text":"            ctx = $ctxt: ty,","highlight_start":1,"highlight_end":29},{"text":"            main_self = $mainself: ident,","highlight_start":1,"highlight_end":42},{"text":"            outname = {$($outname:tt)*},","highlight_start":1,"highlight_end":41},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: tt,)*","highlight_start":1,"highlight_end":47},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($_interface:ty,)*],)*","highlight_start":1,"highlight_end":56},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = [$($interface: ty),+]  $($rest:tt)*","highlight_start":1,"highlight_end":51},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                ctx = $ctxt,","highlight_start":1,"highlight_end":29},{"text":"                main_self = $mainself,","highlight_start":1,"highlight_end":39},{"text":"                outname = {$($outname)*},","highlight_start":1,"highlight_end":42},{"text":"                scalar = {$($scalar)*},","highlight_start":1,"highlight_end":40},{"text":"                $(description = $desciption,)*","highlight_start":1,"highlight_end":47},{"text":"                additional = {","highlight_start":1,"highlight_end":31},{"text":"                        interfaces = [$($interface,)*],","highlight_start":1,"highlight_end":56},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)* },","highlight_start":1,"highlight_end":33},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = interfaces: $($rest:tt)*","highlight_start":1,"highlight_end":40},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::graphql_object!(","highlight_start":1,"highlight_end":33},{"text":"            @parse_interfaces,","highlight_start":1,"highlight_end":31},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = { $($meta)* },","highlight_start":1,"highlight_end":34},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse,","highlight_start":1,"highlight_end":16},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = graphql_object,","highlight_start":1,"highlight_end":47},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = graphql_object,","highlight_start":1,"highlight_end":43},{"text":"                header = {@parse_interfaces,},","highlight_start":1,"highlight_end":47},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [],","highlight_start":1,"highlight_end":24},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@$($stuff:tt)*) => {","highlight_start":1,"highlight_end":26},{"text":"        compile_error!(\"Invalid syntax for `graphql_object!`\");","highlight_start":1,"highlight_end":64},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $($rest:tt)*","highlight_start":1,"highlight_end":21},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_object_header!(","highlight_start":1,"highlight_end":48},{"text":"            callback = graphql_object,","highlight_start":1,"highlight_end":39},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following implementations were found:\n  <Result<(&'a <T as GraphQLType<S>>::Context, T), FieldError<S>> as IntoResolvable<'a, S, T, C>>\n  <Result<T, E> as IntoResolvable<'a, S, T, C>>\n  <Result<std::option::Option<(&'a <T as GraphQLType<S>>::Context, T)>, FieldError<S>> as IntoResolvable<'a, S, std::option::Option<T>, C>>","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `Registry::<'r, S>::field_convert`","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/executor/mod.rs","byte_start":22294,"byte_end":22321,"line_start":737,"line_end":737,"column_start":33,"column_end":60,"is_primary":true,"text":[{"text":"    pub fn field_convert<'a, T: IntoResolvable<'a, S, I, C>, I, C>(","highlight_start":33,"highlight_end":60}],"label":"required by this bound in `Registry::<'r, S>::field_convert`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Result<Vec<u8>, FieldError>: IntoResolvable<'_, DefaultScalarValue, _, kubos_service::Context<Subsystem>>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/schema.rs:9:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mgraphql_object!(Subsystem: Context as \"Subsystem\" |&self| {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    description: \"Service subsystem\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    field uart_rx() -> FieldResult<Vec<u8>> as \"Reading of subsystem uart\" {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Ok(self.uart_rx()?)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m});\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|__^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `IntoResolvable<'_, DefaultScalarValue, _, kubos_service::Context<Subsystem>>` is not implemented for `Result<Vec<u8>, FieldError>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following implementations were found:\u001b[0m\n\u001b[0m              <Result<(&'a <T as GraphQLType<S>>::Context, T), FieldError<S>> as IntoResolvable<'a, S, T, C>>\u001b[0m\n\u001b[0m              <Result<T, E> as IntoResolvable<'a, S, T, C>>\u001b[0m\n\u001b[0m              <Result<std::option::Option<(&'a <T as GraphQLType<S>>::Context, T)>, FieldError<S>> as IntoResolvable<'a, S, std::option::Option<T>, C>>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `Registry::<'r, S>::field_convert`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/executor/mod.rs:737:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m737\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn field_convert<'a, T: IntoResolvable<'a, S, I, C>, I, C>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Registry::<'r, S>::field_convert`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::graphql_object` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Result<Vec<u8>, FieldError>: IntoResolvable<'_, _, _, _>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":13537,"byte_end":13565,"line_start":421,"line_end":421,"column_start":36,"column_end":64,"is_primary":true,"text":[{"text":"                            return $crate::IntoResolvable::into(result, executor.context())","highlight_start":36,"highlight_end":64}],"label":"the trait `IntoResolvable<'_, _, _, _>` is not implemented for `Result<Vec<u8>, FieldError>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":8610,"byte_end":8743,"line_start":324,"line_end":328,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::$success_callback!(","highlight_start":9,"highlight_end":36},{"text":"            @generate,","highlight_start":1,"highlight_end":23},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":15306,"byte_end":16046,"line_start":515,"line_end":535,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":9,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":9852,"byte_end":10440,"line_start":365,"line_end":381,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":9,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                $(lifetimes = [$($lifetime,)*],)*","highlight_start":1,"highlight_end":50},{"text":"                $(name = $name,)*","highlight_start":1,"highlight_end":34},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                $(outname = {$($outname)*},)*","highlight_start":1,"highlight_end":46},{"text":"                $(scalar = {$($scalar)*},)*","highlight_start":1,"highlight_end":44},{"text":"                description = $desc,","highlight_start":1,"highlight_end":37},{"text":"                $(additional = {$($other)*},)*","highlight_start":1,"highlight_end":47},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":10692,"byte_end":10973,"line_start":390,"line_end":397,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":9,"highlight_end":45},{"text":"            @parse_description,","highlight_start":1,"highlight_end":32},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":16217,"byte_end":16534,"line_start":504,"line_end":513,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":9,"highlight_end":45},{"text":"            success_callback = graphql_object,","highlight_start":1,"highlight_end":47},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = graphql_object,","highlight_start":1,"highlight_end":43},{"text":"                header = {@parse_interfaces,},","highlight_start":1,"highlight_end":47},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [],","highlight_start":1,"highlight_end":24},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":4424,"byte_end":4764,"line_start":168,"line_end":179,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::$callback!(","highlight_start":9,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":16688,"byte_end":16805,"line_start":523,"line_end":526,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__juniper_parse_object_header!(","highlight_start":9,"highlight_end":48},{"text":"            callback = graphql_object,","highlight_start":1,"highlight_end":39},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/schema.rs","byte_start":185,"byte_end":396,"line_start":9,"line_end":15,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"graphql_object!(Subsystem: Context as \"Subsystem\" |&self| {","highlight_start":1,"highlight_end":60},{"text":"    description: \"Service subsystem\"","highlight_start":1,"highlight_end":37},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    field uart_rx() -> FieldResult<Vec<u8>> as \"Reading of subsystem uart\" {","highlight_start":1,"highlight_end":77},{"text":"        Ok(self.uart_rx()?)","highlight_start":1,"highlight_end":28},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"});","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"graphql_object!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":8678,"byte_end":16815,"line_start":314,"line_end":529,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! graphql_object {","highlight_start":1,"highlight_end":30},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @generate,","highlight_start":1,"highlight_end":19},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetimes:tt,)*],","highlight_start":1,"highlight_end":46},{"text":"            name = $name: ty,","highlight_start":1,"highlight_end":30},{"text":"            ctx = $ctx: ty,","highlight_start":1,"highlight_end":28},{"text":"            main_self = $main_self: ident,","highlight_start":1,"highlight_end":43},{"text":"            outname = {$($outname: tt)*},","highlight_start":1,"highlight_end":42},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: expr,)*","highlight_start":1,"highlight_end":49},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($interface:ty,)*],)*","highlight_start":1,"highlight_end":55},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({","highlight_start":1,"highlight_end":21},{"text":"            name = $fn_name: ident,","highlight_start":1,"highlight_end":36},{"text":"            body = $body: block,","highlight_start":1,"highlight_end":33},{"text":"            return_ty = $return_ty: ty,","highlight_start":1,"highlight_end":40},{"text":"            args = [$({","highlight_start":1,"highlight_end":24},{"text":"                arg_name = $arg_name : ident,","highlight_start":1,"highlight_end":46},{"text":"                arg_ty = $arg_ty: ty,","highlight_start":1,"highlight_end":38},{"text":"                $(arg_default = $arg_default: expr,)*","highlight_start":1,"highlight_end":54},{"text":"                $(arg_description = $arg_description: expr,)*","highlight_start":1,"highlight_end":62},{"text":"                $(arg_docstring = $arg_docstring: expr,)*","highlight_start":1,"highlight_end":58},{"text":"            },)*],","highlight_start":1,"highlight_end":19},{"text":"            $(decs = $fn_description: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(docstring = $docstring: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(deprecated = $deprecated: expr,)*","highlight_start":1,"highlight_end":48},{"text":"            $(executor_var = $executor: ident,)*","highlight_start":1,"highlight_end":49},{"text":"        },)*],","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_impl_trait!(","highlight_start":1,"highlight_end":39},{"text":"            impl<$($scalar)* $(, $lifetimes)* > GraphQLType for $name {","highlight_start":1,"highlight_end":72},{"text":"                type Context = $ctx;","highlight_start":1,"highlight_end":37},{"text":"                type TypeInfo = ();","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn name(_ : &Self::TypeInfo) -> Option<&str> {","highlight_start":1,"highlight_end":63},{"text":"                    Some($($outname)*)","highlight_start":1,"highlight_end":39},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn meta<'r>(","highlight_start":1,"highlight_end":29},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    registry: &mut $crate::Registry<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":104},{"text":"                ) -> $crate::meta::MetaType<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":96},{"text":"                where for<'__b> &'__b $crate::__juniper_insert_generic!($($scalar)+): $crate::ScalarRefValue<'__b>,","highlight_start":1,"highlight_end":116},{"text":"                    $crate::__juniper_insert_generic!($($scalar)+): 'r","highlight_start":1,"highlight_end":71},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    let fields = &[$(","highlight_start":1,"highlight_end":38},{"text":"                        registry.field_convert::<$return_ty, _, Self::Context>(","highlight_start":1,"highlight_end":80},{"text":"                            &$crate::to_camel_case(stringify!($fn_name)),","highlight_start":1,"highlight_end":74},{"text":"                            info","highlight_start":1,"highlight_end":33},{"text":"                        )","highlight_start":1,"highlight_end":26},{"text":"                            $(.description($fn_description))*","highlight_start":1,"highlight_end":62},{"text":"                            .push_docstring(&[$($docstring,)*])","highlight_start":1,"highlight_end":64},{"text":"                            $(.deprecated($deprecated))*","highlight_start":1,"highlight_end":57},{"text":"                            $(.argument(","highlight_start":1,"highlight_end":41},{"text":"                                $crate::__juniper_create_arg!(","highlight_start":1,"highlight_end":63},{"text":"                                    registry = registry,","highlight_start":1,"highlight_end":57},{"text":"                                    info = info,","highlight_start":1,"highlight_end":49},{"text":"                                    arg_ty = $arg_ty,","highlight_start":1,"highlight_end":54},{"text":"                                    arg_name = $arg_name,","highlight_start":1,"highlight_end":58},{"text":"                                    $(default = $arg_default,)*","highlight_start":1,"highlight_end":64},{"text":"                                    $(description = $arg_description,)*","highlight_start":1,"highlight_end":72},{"text":"                                    $(docstring = $arg_docstring,)*","highlight_start":1,"highlight_end":68},{"text":"                                )","highlight_start":1,"highlight_end":34},{"text":"                            ))*,","highlight_start":1,"highlight_end":33},{"text":"                    )*];","highlight_start":1,"highlight_end":25},{"text":"                    registry.build_object_type::<$name>(","highlight_start":1,"highlight_end":57},{"text":"                        info, fields","highlight_start":1,"highlight_end":37},{"text":"                    )","highlight_start":1,"highlight_end":22},{"text":"                        $(.description($desciption))*","highlight_start":1,"highlight_end":54},{"text":"                        $($(.interfaces(&[","highlight_start":1,"highlight_end":43},{"text":"                           $(registry.get_type::<$interface>(&()),)*","highlight_start":1,"highlight_end":69},{"text":"                        ]))*)*","highlight_start":1,"highlight_end":31},{"text":"                        .into_meta()","highlight_start":1,"highlight_end":37},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn concrete_type_name(&self, _: &Self::Context, _: &Self::TypeInfo) -> String {","highlight_start":1,"highlight_end":96},{"text":"                    $($outname)*.to_owned()","highlight_start":1,"highlight_end":44},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[allow(unused_variables)]","highlight_start":1,"highlight_end":43},{"text":"                fn resolve_field(","highlight_start":1,"highlight_end":34},{"text":"                    &$main_self,","highlight_start":1,"highlight_end":33},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    field: &str,","highlight_start":1,"highlight_end":33},{"text":"                    args: &$crate::Arguments<$crate::__juniper_insert_generic!($($scalar)+)>,","highlight_start":1,"highlight_end":94},{"text":"                    executor: &$crate::Executor<Self::Context, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":111},{"text":"                ) -> $crate::ExecutionResult<$crate::__juniper_insert_generic!($($scalar)+)> {","highlight_start":1,"highlight_end":95},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        if field == &$crate::to_camel_case(stringify!($fn_name)) {","highlight_start":1,"highlight_end":83},{"text":"                            let result: $return_ty = (|| {","highlight_start":1,"highlight_end":59},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $arg_name: $arg_ty = args.get(&$crate::to_camel_case(stringify!($arg_name)))","highlight_start":1,"highlight_end":117},{"text":"                                        .expect(concat!(","highlight_start":1,"highlight_end":57},{"text":"                                            \"Argument \",","highlight_start":1,"highlight_end":57},{"text":"                                            stringify!($arg_name),","highlight_start":1,"highlight_end":67},{"text":"                                            \" missing - validation must have failed\"","highlight_start":1,"highlight_end":85},{"text":"                                        ));","highlight_start":1,"highlight_end":44},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $executor = &executor;","highlight_start":1,"highlight_end":63},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $body","highlight_start":1,"highlight_end":38},{"text":"                            })();","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                            return $crate::IntoResolvable::into(result, executor.context())","highlight_start":1,"highlight_end":92},{"text":"                                .and_then(|res| {","highlight_start":1,"highlight_end":50},{"text":"                                    match res {","highlight_start":1,"highlight_end":48},{"text":"                                        Some((ctx, r)) => {","highlight_start":1,"highlight_end":60},{"text":"                                            executor.replaced_context(ctx)","highlight_start":1,"highlight_end":75},{"text":"                                                .resolve_with_ctx(&(), &r)","highlight_start":1,"highlight_end":75},{"text":"                                        }","highlight_start":1,"highlight_end":42},{"text":"                                        None => Ok($crate::Value::null())","highlight_start":1,"highlight_end":74},{"text":"                                    }","highlight_start":1,"highlight_end":38},{"text":"                                });","highlight_start":1,"highlight_end":36},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    panic!(\"Field {} not found on type {}\", field, $($outname)*);","highlight_start":1,"highlight_end":82},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetime:tt,)*],","highlight_start":1,"highlight_end":45},{"text":"            name = $name:ty,","highlight_start":1,"highlight_end":29},{"text":"            ctx = $ctxt: ty,","highlight_start":1,"highlight_end":29},{"text":"            main_self = $mainself: ident,","highlight_start":1,"highlight_end":42},{"text":"            outname = {$($outname:tt)*},","highlight_start":1,"highlight_end":41},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: tt,)*","highlight_start":1,"highlight_end":47},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($_interface:ty,)*],)*","highlight_start":1,"highlight_end":56},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = [$($interface: ty),+]  $($rest:tt)*","highlight_start":1,"highlight_end":51},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                ctx = $ctxt,","highlight_start":1,"highlight_end":29},{"text":"                main_self = $mainself,","highlight_start":1,"highlight_end":39},{"text":"                outname = {$($outname)*},","highlight_start":1,"highlight_end":42},{"text":"                scalar = {$($scalar)*},","highlight_start":1,"highlight_end":40},{"text":"                $(description = $desciption,)*","highlight_start":1,"highlight_end":47},{"text":"                additional = {","highlight_start":1,"highlight_end":31},{"text":"                        interfaces = [$($interface,)*],","highlight_start":1,"highlight_end":56},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)* },","highlight_start":1,"highlight_end":33},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = interfaces: $($rest:tt)*","highlight_start":1,"highlight_end":40},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::graphql_object!(","highlight_start":1,"highlight_end":33},{"text":"            @parse_interfaces,","highlight_start":1,"highlight_end":31},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = { $($meta)* },","highlight_start":1,"highlight_end":34},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse,","highlight_start":1,"highlight_end":16},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = graphql_object,","highlight_start":1,"highlight_end":47},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = graphql_object,","highlight_start":1,"highlight_end":43},{"text":"                header = {@parse_interfaces,},","highlight_start":1,"highlight_end":47},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [],","highlight_start":1,"highlight_end":24},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@$($stuff:tt)*) => {","highlight_start":1,"highlight_end":26},{"text":"        compile_error!(\"Invalid syntax for `graphql_object!`\");","highlight_start":1,"highlight_end":64},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $($rest:tt)*","highlight_start":1,"highlight_end":21},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_object_header!(","highlight_start":1,"highlight_end":48},{"text":"            callback = graphql_object,","highlight_start":1,"highlight_end":39},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__juniper_parse_object_header!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":1275,"byte_end":8320,"line_start":56,"line_end":312,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! __juniper_parse_object_header {","highlight_start":1,"highlight_end":45},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback:ident,","highlight_start":1,"highlight_end":36},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)* as $outname: tt","highlight_start":1,"highlight_end":77},{"text":"        where Scalar = <$generic:tt $(: $bound:tt)*> $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":80},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<$generic $(: $bound)*>},","highlight_start":1,"highlight_end":52},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback:ident,","highlight_start":1,"highlight_end":36},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)* as $outname: tt","highlight_start":1,"highlight_end":77},{"text":"        where Scalar = $scalar: ty $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":62},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {$scalar},","highlight_start":1,"highlight_end":36},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)* as $outname: tt $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":104},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* as $outname: tt","highlight_start":1,"highlight_end":57},{"text":"        where Scalar = <$generic:tt $(: $bound:tt)*> $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":80},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<$generic $(:$bound)*>},","highlight_start":1,"highlight_end":51},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* as $outname: tt","highlight_start":1,"highlight_end":57},{"text":"        where Scalar = $scalar: ty $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":62},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {$scalar},","highlight_start":1,"highlight_end":36},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* as $outname: tt $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":84},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)*","highlight_start":1,"highlight_end":61},{"text":"        where Scalar = <$generic:tt $(: $bound:tt)*> $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":80},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {<$generic $(:$bounds)*>},","highlight_start":1,"highlight_end":52},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)*","highlight_start":1,"highlight_end":61},{"text":"        where Scalar = $scalar: ty $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":62},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {$scalar},","highlight_start":1,"highlight_end":36},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)* $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":88},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)*","highlight_start":1,"highlight_end":41},{"text":"        where Scalar = <$generic:tt $(: $bound:tt)*> $(| &$mainself:ident |)*","highlight_start":1,"highlight_end":78},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {<$generic $(: $bound)*>},","highlight_start":1,"highlight_end":52},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* where Scalar = $scalar: ty $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":95},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {$scalar},","highlight_start":1,"highlight_end":36},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":68},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        compile_error!(\"Invalid syntax\");","highlight_start":1,"highlight_end":42},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::graphql_object!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":8678,"byte_end":16815,"line_start":314,"line_end":529,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! graphql_object {","highlight_start":1,"highlight_end":30},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @generate,","highlight_start":1,"highlight_end":19},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetimes:tt,)*],","highlight_start":1,"highlight_end":46},{"text":"            name = $name: ty,","highlight_start":1,"highlight_end":30},{"text":"            ctx = $ctx: ty,","highlight_start":1,"highlight_end":28},{"text":"            main_self = $main_self: ident,","highlight_start":1,"highlight_end":43},{"text":"            outname = {$($outname: tt)*},","highlight_start":1,"highlight_end":42},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: expr,)*","highlight_start":1,"highlight_end":49},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($interface:ty,)*],)*","highlight_start":1,"highlight_end":55},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({","highlight_start":1,"highlight_end":21},{"text":"            name = $fn_name: ident,","highlight_start":1,"highlight_end":36},{"text":"            body = $body: block,","highlight_start":1,"highlight_end":33},{"text":"            return_ty = $return_ty: ty,","highlight_start":1,"highlight_end":40},{"text":"            args = [$({","highlight_start":1,"highlight_end":24},{"text":"                arg_name = $arg_name : ident,","highlight_start":1,"highlight_end":46},{"text":"                arg_ty = $arg_ty: ty,","highlight_start":1,"highlight_end":38},{"text":"                $(arg_default = $arg_default: expr,)*","highlight_start":1,"highlight_end":54},{"text":"                $(arg_description = $arg_description: expr,)*","highlight_start":1,"highlight_end":62},{"text":"                $(arg_docstring = $arg_docstring: expr,)*","highlight_start":1,"highlight_end":58},{"text":"            },)*],","highlight_start":1,"highlight_end":19},{"text":"            $(decs = $fn_description: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(docstring = $docstring: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(deprecated = $deprecated: expr,)*","highlight_start":1,"highlight_end":48},{"text":"            $(executor_var = $executor: ident,)*","highlight_start":1,"highlight_end":49},{"text":"        },)*],","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_impl_trait!(","highlight_start":1,"highlight_end":39},{"text":"            impl<$($scalar)* $(, $lifetimes)* > GraphQLType for $name {","highlight_start":1,"highlight_end":72},{"text":"                type Context = $ctx;","highlight_start":1,"highlight_end":37},{"text":"                type TypeInfo = ();","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn name(_ : &Self::TypeInfo) -> Option<&str> {","highlight_start":1,"highlight_end":63},{"text":"                    Some($($outname)*)","highlight_start":1,"highlight_end":39},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn meta<'r>(","highlight_start":1,"highlight_end":29},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    registry: &mut $crate::Registry<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":104},{"text":"                ) -> $crate::meta::MetaType<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":96},{"text":"                where for<'__b> &'__b $crate::__juniper_insert_generic!($($scalar)+): $crate::ScalarRefValue<'__b>,","highlight_start":1,"highlight_end":116},{"text":"                    $crate::__juniper_insert_generic!($($scalar)+): 'r","highlight_start":1,"highlight_end":71},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    let fields = &[$(","highlight_start":1,"highlight_end":38},{"text":"                        registry.field_convert::<$return_ty, _, Self::Context>(","highlight_start":1,"highlight_end":80},{"text":"                            &$crate::to_camel_case(stringify!($fn_name)),","highlight_start":1,"highlight_end":74},{"text":"                            info","highlight_start":1,"highlight_end":33},{"text":"                        )","highlight_start":1,"highlight_end":26},{"text":"                            $(.description($fn_description))*","highlight_start":1,"highlight_end":62},{"text":"                            .push_docstring(&[$($docstring,)*])","highlight_start":1,"highlight_end":64},{"text":"                            $(.deprecated($deprecated))*","highlight_start":1,"highlight_end":57},{"text":"                            $(.argument(","highlight_start":1,"highlight_end":41},{"text":"                                $crate::__juniper_create_arg!(","highlight_start":1,"highlight_end":63},{"text":"                                    registry = registry,","highlight_start":1,"highlight_end":57},{"text":"                                    info = info,","highlight_start":1,"highlight_end":49},{"text":"                                    arg_ty = $arg_ty,","highlight_start":1,"highlight_end":54},{"text":"                                    arg_name = $arg_name,","highlight_start":1,"highlight_end":58},{"text":"                                    $(default = $arg_default,)*","highlight_start":1,"highlight_end":64},{"text":"                                    $(description = $arg_description,)*","highlight_start":1,"highlight_end":72},{"text":"                                    $(docstring = $arg_docstring,)*","highlight_start":1,"highlight_end":68},{"text":"                                )","highlight_start":1,"highlight_end":34},{"text":"                            ))*,","highlight_start":1,"highlight_end":33},{"text":"                    )*];","highlight_start":1,"highlight_end":25},{"text":"                    registry.build_object_type::<$name>(","highlight_start":1,"highlight_end":57},{"text":"                        info, fields","highlight_start":1,"highlight_end":37},{"text":"                    )","highlight_start":1,"highlight_end":22},{"text":"                        $(.description($desciption))*","highlight_start":1,"highlight_end":54},{"text":"                        $($(.interfaces(&[","highlight_start":1,"highlight_end":43},{"text":"                           $(registry.get_type::<$interface>(&()),)*","highlight_start":1,"highlight_end":69},{"text":"                        ]))*)*","highlight_start":1,"highlight_end":31},{"text":"                        .into_meta()","highlight_start":1,"highlight_end":37},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn concrete_type_name(&self, _: &Self::Context, _: &Self::TypeInfo) -> String {","highlight_start":1,"highlight_end":96},{"text":"                    $($outname)*.to_owned()","highlight_start":1,"highlight_end":44},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[allow(unused_variables)]","highlight_start":1,"highlight_end":43},{"text":"                fn resolve_field(","highlight_start":1,"highlight_end":34},{"text":"                    &$main_self,","highlight_start":1,"highlight_end":33},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    field: &str,","highlight_start":1,"highlight_end":33},{"text":"                    args: &$crate::Arguments<$crate::__juniper_insert_generic!($($scalar)+)>,","highlight_start":1,"highlight_end":94},{"text":"                    executor: &$crate::Executor<Self::Context, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":111},{"text":"                ) -> $crate::ExecutionResult<$crate::__juniper_insert_generic!($($scalar)+)> {","highlight_start":1,"highlight_end":95},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        if field == &$crate::to_camel_case(stringify!($fn_name)) {","highlight_start":1,"highlight_end":83},{"text":"                            let result: $return_ty = (|| {","highlight_start":1,"highlight_end":59},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $arg_name: $arg_ty = args.get(&$crate::to_camel_case(stringify!($arg_name)))","highlight_start":1,"highlight_end":117},{"text":"                                        .expect(concat!(","highlight_start":1,"highlight_end":57},{"text":"                                            \"Argument \",","highlight_start":1,"highlight_end":57},{"text":"                                            stringify!($arg_name),","highlight_start":1,"highlight_end":67},{"text":"                                            \" missing - validation must have failed\"","highlight_start":1,"highlight_end":85},{"text":"                                        ));","highlight_start":1,"highlight_end":44},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $executor = &executor;","highlight_start":1,"highlight_end":63},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $body","highlight_start":1,"highlight_end":38},{"text":"                            })();","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                            return $crate::IntoResolvable::into(result, executor.context())","highlight_start":1,"highlight_end":92},{"text":"                                .and_then(|res| {","highlight_start":1,"highlight_end":50},{"text":"                                    match res {","highlight_start":1,"highlight_end":48},{"text":"                                        Some((ctx, r)) => {","highlight_start":1,"highlight_end":60},{"text":"                                            executor.replaced_context(ctx)","highlight_start":1,"highlight_end":75},{"text":"                                                .resolve_with_ctx(&(), &r)","highlight_start":1,"highlight_end":75},{"text":"                                        }","highlight_start":1,"highlight_end":42},{"text":"                                        None => Ok($crate::Value::null())","highlight_start":1,"highlight_end":74},{"text":"                                    }","highlight_start":1,"highlight_end":38},{"text":"                                });","highlight_start":1,"highlight_end":36},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    panic!(\"Field {} not found on type {}\", field, $($outname)*);","highlight_start":1,"highlight_end":82},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetime:tt,)*],","highlight_start":1,"highlight_end":45},{"text":"            name = $name:ty,","highlight_start":1,"highlight_end":29},{"text":"            ctx = $ctxt: ty,","highlight_start":1,"highlight_end":29},{"text":"            main_self = $mainself: ident,","highlight_start":1,"highlight_end":42},{"text":"            outname = {$($outname:tt)*},","highlight_start":1,"highlight_end":41},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: tt,)*","highlight_start":1,"highlight_end":47},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($_interface:ty,)*],)*","highlight_start":1,"highlight_end":56},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = [$($interface: ty),+]  $($rest:tt)*","highlight_start":1,"highlight_end":51},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                ctx = $ctxt,","highlight_start":1,"highlight_end":29},{"text":"                main_self = $mainself,","highlight_start":1,"highlight_end":39},{"text":"                outname = {$($outname)*},","highlight_start":1,"highlight_end":42},{"text":"                scalar = {$($scalar)*},","highlight_start":1,"highlight_end":40},{"text":"                $(description = $desciption,)*","highlight_start":1,"highlight_end":47},{"text":"                additional = {","highlight_start":1,"highlight_end":31},{"text":"                        interfaces = [$($interface,)*],","highlight_start":1,"highlight_end":56},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)* },","highlight_start":1,"highlight_end":33},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = interfaces: $($rest:tt)*","highlight_start":1,"highlight_end":40},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::graphql_object!(","highlight_start":1,"highlight_end":33},{"text":"            @parse_interfaces,","highlight_start":1,"highlight_end":31},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = { $($meta)* },","highlight_start":1,"highlight_end":34},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse,","highlight_start":1,"highlight_end":16},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = graphql_object,","highlight_start":1,"highlight_end":47},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = graphql_object,","highlight_start":1,"highlight_end":43},{"text":"                header = {@parse_interfaces,},","highlight_start":1,"highlight_end":47},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [],","highlight_start":1,"highlight_end":24},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@$($stuff:tt)*) => {","highlight_start":1,"highlight_end":26},{"text":"        compile_error!(\"Invalid syntax for `graphql_object!`\");","highlight_start":1,"highlight_end":64},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $($rest:tt)*","highlight_start":1,"highlight_end":21},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_object_header!(","highlight_start":1,"highlight_end":48},{"text":"            callback = graphql_object,","highlight_start":1,"highlight_end":39},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__juniper_parse_field_list!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":8353,"byte_end":16697,"line_start":316,"line_end":561,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! __juniper_parse_field_list {","highlight_start":1,"highlight_end":42},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest =","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$success_callback!(","highlight_start":1,"highlight_end":36},{"text":"            @generate,","highlight_start":1,"highlight_end":23},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = , $($rest: tt)*","highlight_start":1,"highlight_end":31},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_description,","highlight_start":1,"highlight_end":28},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            $(lifetimes = [$($lifetime:tt,)*],)*","highlight_start":1,"highlight_end":49},{"text":"            $(name = $name:ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(ctx = $ctxt: ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(main_self = $mainself: ident,)*","highlight_start":1,"highlight_end":46},{"text":"            $(outname = {$($outname:tt)*},)*","highlight_start":1,"highlight_end":45},{"text":"            $(scalar = {$($scalar:tt)*},)*","highlight_start":1,"highlight_end":43},{"text":"            $(description = $_desciption: tt,)*","highlight_start":1,"highlight_end":48},{"text":"            $(additional = {$($other: tt)*},)*","highlight_start":1,"highlight_end":47},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $desc: tt  $($rest:tt)*","highlight_start":1,"highlight_end":39},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                $(lifetimes = [$($lifetime,)*],)*","highlight_start":1,"highlight_end":50},{"text":"                $(name = $name,)*","highlight_start":1,"highlight_end":34},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                $(outname = {$($outname)*},)*","highlight_start":1,"highlight_end":46},{"text":"                $(scalar = {$($scalar)*},)*","highlight_start":1,"highlight_end":44},{"text":"                description = $desc,","highlight_start":1,"highlight_end":37},{"text":"                $(additional = {$($other)*},)*","highlight_start":1,"highlight_end":47},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)*},","highlight_start":1,"highlight_end":32},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = description:  $($rest:tt)*","highlight_start":1,"highlight_end":42},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            @parse_description,","highlight_start":1,"highlight_end":32},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        #[deprecated $(( $(since = $since: tt,)* note = $reason: tt ))* ]","highlight_start":1,"highlight_end":74},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                deprecated = None$(.unwrap_or(Some($reason)))*,","highlight_start":1,"highlight_end":64},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field deprecated $reason:tt $name: ident (","highlight_start":1,"highlight_end":58},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                deprecated = Some($reason),","highlight_start":1,"highlight_end":44},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field $name: ident (","highlight_start":1,"highlight_end":36},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {","highlight_start":1,"highlight_end":30},{"text":"            callback = $callback: ident,","highlight_start":1,"highlight_end":41},{"text":"            header = {$($header:tt)*},","highlight_start":1,"highlight_end":39},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            $($header)*","highlight_start":1,"highlight_end":24},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = $callback,","highlight_start":1,"highlight_end":38},{"text":"                header = {$($header)*},","highlight_start":1,"highlight_end":40},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__juniper_parse_field_list!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":8353,"byte_end":16697,"line_start":316,"line_end":561,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! __juniper_parse_field_list {","highlight_start":1,"highlight_end":42},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest =","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$success_callback!(","highlight_start":1,"highlight_end":36},{"text":"            @generate,","highlight_start":1,"highlight_end":23},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = , $($rest: tt)*","highlight_start":1,"highlight_end":31},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_description,","highlight_start":1,"highlight_end":28},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            $(lifetimes = [$($lifetime:tt,)*],)*","highlight_start":1,"highlight_end":49},{"text":"            $(name = $name:ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(ctx = $ctxt: ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(main_self = $mainself: ident,)*","highlight_start":1,"highlight_end":46},{"text":"            $(outname = {$($outname:tt)*},)*","highlight_start":1,"highlight_end":45},{"text":"            $(scalar = {$($scalar:tt)*},)*","highlight_start":1,"highlight_end":43},{"text":"            $(description = $_desciption: tt,)*","highlight_start":1,"highlight_end":48},{"text":"            $(additional = {$($other: tt)*},)*","highlight_start":1,"highlight_end":47},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $desc: tt  $($rest:tt)*","highlight_start":1,"highlight_end":39},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                $(lifetimes = [$($lifetime,)*],)*","highlight_start":1,"highlight_end":50},{"text":"                $(name = $name,)*","highlight_start":1,"highlight_end":34},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                $(outname = {$($outname)*},)*","highlight_start":1,"highlight_end":46},{"text":"                $(scalar = {$($scalar)*},)*","highlight_start":1,"highlight_end":44},{"text":"                description = $desc,","highlight_start":1,"highlight_end":37},{"text":"                $(additional = {$($other)*},)*","highlight_start":1,"highlight_end":47},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)*},","highlight_start":1,"highlight_end":32},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = description:  $($rest:tt)*","highlight_start":1,"highlight_end":42},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            @parse_description,","highlight_start":1,"highlight_end":32},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        #[deprecated $(( $(since = $since: tt,)* note = $reason: tt ))* ]","highlight_start":1,"highlight_end":74},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                deprecated = None$(.unwrap_or(Some($reason)))*,","highlight_start":1,"highlight_end":64},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field deprecated $reason:tt $name: ident (","highlight_start":1,"highlight_end":58},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                deprecated = Some($reason),","highlight_start":1,"highlight_end":44},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field $name: ident (","highlight_start":1,"highlight_end":36},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {","highlight_start":1,"highlight_end":30},{"text":"            callback = $callback: ident,","highlight_start":1,"highlight_end":41},{"text":"            header = {$($header:tt)*},","highlight_start":1,"highlight_end":39},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            $($header)*","highlight_start":1,"highlight_end":24},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = $callback,","highlight_start":1,"highlight_end":38},{"text":"                header = {$($header)*},","highlight_start":1,"highlight_end":40},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__juniper_parse_field_list!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":8353,"byte_end":16697,"line_start":316,"line_end":561,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! __juniper_parse_field_list {","highlight_start":1,"highlight_end":42},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest =","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$success_callback!(","highlight_start":1,"highlight_end":36},{"text":"            @generate,","highlight_start":1,"highlight_end":23},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = , $($rest: tt)*","highlight_start":1,"highlight_end":31},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_description,","highlight_start":1,"highlight_end":28},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            $(lifetimes = [$($lifetime:tt,)*],)*","highlight_start":1,"highlight_end":49},{"text":"            $(name = $name:ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(ctx = $ctxt: ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(main_self = $mainself: ident,)*","highlight_start":1,"highlight_end":46},{"text":"            $(outname = {$($outname:tt)*},)*","highlight_start":1,"highlight_end":45},{"text":"            $(scalar = {$($scalar:tt)*},)*","highlight_start":1,"highlight_end":43},{"text":"            $(description = $_desciption: tt,)*","highlight_start":1,"highlight_end":48},{"text":"            $(additional = {$($other: tt)*},)*","highlight_start":1,"highlight_end":47},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $desc: tt  $($rest:tt)*","highlight_start":1,"highlight_end":39},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                $(lifetimes = [$($lifetime,)*],)*","highlight_start":1,"highlight_end":50},{"text":"                $(name = $name,)*","highlight_start":1,"highlight_end":34},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                $(outname = {$($outname)*},)*","highlight_start":1,"highlight_end":46},{"text":"                $(scalar = {$($scalar)*},)*","highlight_start":1,"highlight_end":44},{"text":"                description = $desc,","highlight_start":1,"highlight_end":37},{"text":"                $(additional = {$($other)*},)*","highlight_start":1,"highlight_end":47},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)*},","highlight_start":1,"highlight_end":32},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = description:  $($rest:tt)*","highlight_start":1,"highlight_end":42},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            @parse_description,","highlight_start":1,"highlight_end":32},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        #[deprecated $(( $(since = $since: tt,)* note = $reason: tt ))* ]","highlight_start":1,"highlight_end":74},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                deprecated = None$(.unwrap_or(Some($reason)))*,","highlight_start":1,"highlight_end":64},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field deprecated $reason:tt $name: ident (","highlight_start":1,"highlight_end":58},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                deprecated = Some($reason),","highlight_start":1,"highlight_end":44},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field $name: ident (","highlight_start":1,"highlight_end":36},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {","highlight_start":1,"highlight_end":30},{"text":"            callback = $callback: ident,","highlight_start":1,"highlight_end":41},{"text":"            header = {$($header:tt)*},","highlight_start":1,"highlight_end":39},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            $($header)*","highlight_start":1,"highlight_end":24},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = $callback,","highlight_start":1,"highlight_end":38},{"text":"                header = {$($header)*},","highlight_start":1,"highlight_end":40},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__juniper_parse_field_list!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":8353,"byte_end":16697,"line_start":316,"line_end":561,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! __juniper_parse_field_list {","highlight_start":1,"highlight_end":42},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest =","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$success_callback!(","highlight_start":1,"highlight_end":36},{"text":"            @generate,","highlight_start":1,"highlight_end":23},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = , $($rest: tt)*","highlight_start":1,"highlight_end":31},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_description,","highlight_start":1,"highlight_end":28},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            $(lifetimes = [$($lifetime:tt,)*],)*","highlight_start":1,"highlight_end":49},{"text":"            $(name = $name:ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(ctx = $ctxt: ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(main_self = $mainself: ident,)*","highlight_start":1,"highlight_end":46},{"text":"            $(outname = {$($outname:tt)*},)*","highlight_start":1,"highlight_end":45},{"text":"            $(scalar = {$($scalar:tt)*},)*","highlight_start":1,"highlight_end":43},{"text":"            $(description = $_desciption: tt,)*","highlight_start":1,"highlight_end":48},{"text":"            $(additional = {$($other: tt)*},)*","highlight_start":1,"highlight_end":47},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $desc: tt  $($rest:tt)*","highlight_start":1,"highlight_end":39},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                $(lifetimes = [$($lifetime,)*],)*","highlight_start":1,"highlight_end":50},{"text":"                $(name = $name,)*","highlight_start":1,"highlight_end":34},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                $(outname = {$($outname)*},)*","highlight_start":1,"highlight_end":46},{"text":"                $(scalar = {$($scalar)*},)*","highlight_start":1,"highlight_end":44},{"text":"                description = $desc,","highlight_start":1,"highlight_end":37},{"text":"                $(additional = {$($other)*},)*","highlight_start":1,"highlight_end":47},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)*},","highlight_start":1,"highlight_end":32},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = description:  $($rest:tt)*","highlight_start":1,"highlight_end":42},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            @parse_description,","highlight_start":1,"highlight_end":32},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        #[deprecated $(( $(since = $since: tt,)* note = $reason: tt ))* ]","highlight_start":1,"highlight_end":74},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                deprecated = None$(.unwrap_or(Some($reason)))*,","highlight_start":1,"highlight_end":64},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field deprecated $reason:tt $name: ident (","highlight_start":1,"highlight_end":58},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                deprecated = Some($reason),","highlight_start":1,"highlight_end":44},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field $name: ident (","highlight_start":1,"highlight_end":36},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {","highlight_start":1,"highlight_end":30},{"text":"            callback = $callback: ident,","highlight_start":1,"highlight_end":41},{"text":"            header = {$($header:tt)*},","highlight_start":1,"highlight_end":39},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            $($header)*","highlight_start":1,"highlight_end":24},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = $callback,","highlight_start":1,"highlight_end":38},{"text":"                header = {$($header)*},","highlight_start":1,"highlight_end":40},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::graphql_object!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":8678,"byte_end":16815,"line_start":314,"line_end":529,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! graphql_object {","highlight_start":1,"highlight_end":30},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @generate,","highlight_start":1,"highlight_end":19},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetimes:tt,)*],","highlight_start":1,"highlight_end":46},{"text":"            name = $name: ty,","highlight_start":1,"highlight_end":30},{"text":"            ctx = $ctx: ty,","highlight_start":1,"highlight_end":28},{"text":"            main_self = $main_self: ident,","highlight_start":1,"highlight_end":43},{"text":"            outname = {$($outname: tt)*},","highlight_start":1,"highlight_end":42},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: expr,)*","highlight_start":1,"highlight_end":49},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($interface:ty,)*],)*","highlight_start":1,"highlight_end":55},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({","highlight_start":1,"highlight_end":21},{"text":"            name = $fn_name: ident,","highlight_start":1,"highlight_end":36},{"text":"            body = $body: block,","highlight_start":1,"highlight_end":33},{"text":"            return_ty = $return_ty: ty,","highlight_start":1,"highlight_end":40},{"text":"            args = [$({","highlight_start":1,"highlight_end":24},{"text":"                arg_name = $arg_name : ident,","highlight_start":1,"highlight_end":46},{"text":"                arg_ty = $arg_ty: ty,","highlight_start":1,"highlight_end":38},{"text":"                $(arg_default = $arg_default: expr,)*","highlight_start":1,"highlight_end":54},{"text":"                $(arg_description = $arg_description: expr,)*","highlight_start":1,"highlight_end":62},{"text":"                $(arg_docstring = $arg_docstring: expr,)*","highlight_start":1,"highlight_end":58},{"text":"            },)*],","highlight_start":1,"highlight_end":19},{"text":"            $(decs = $fn_description: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(docstring = $docstring: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(deprecated = $deprecated: expr,)*","highlight_start":1,"highlight_end":48},{"text":"            $(executor_var = $executor: ident,)*","highlight_start":1,"highlight_end":49},{"text":"        },)*],","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_impl_trait!(","highlight_start":1,"highlight_end":39},{"text":"            impl<$($scalar)* $(, $lifetimes)* > GraphQLType for $name {","highlight_start":1,"highlight_end":72},{"text":"                type Context = $ctx;","highlight_start":1,"highlight_end":37},{"text":"                type TypeInfo = ();","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn name(_ : &Self::TypeInfo) -> Option<&str> {","highlight_start":1,"highlight_end":63},{"text":"                    Some($($outname)*)","highlight_start":1,"highlight_end":39},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn meta<'r>(","highlight_start":1,"highlight_end":29},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    registry: &mut $crate::Registry<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":104},{"text":"                ) -> $crate::meta::MetaType<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":96},{"text":"                where for<'__b> &'__b $crate::__juniper_insert_generic!($($scalar)+): $crate::ScalarRefValue<'__b>,","highlight_start":1,"highlight_end":116},{"text":"                    $crate::__juniper_insert_generic!($($scalar)+): 'r","highlight_start":1,"highlight_end":71},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    let fields = &[$(","highlight_start":1,"highlight_end":38},{"text":"                        registry.field_convert::<$return_ty, _, Self::Context>(","highlight_start":1,"highlight_end":80},{"text":"                            &$crate::to_camel_case(stringify!($fn_name)),","highlight_start":1,"highlight_end":74},{"text":"                            info","highlight_start":1,"highlight_end":33},{"text":"                        )","highlight_start":1,"highlight_end":26},{"text":"                            $(.description($fn_description))*","highlight_start":1,"highlight_end":62},{"text":"                            .push_docstring(&[$($docstring,)*])","highlight_start":1,"highlight_end":64},{"text":"                            $(.deprecated($deprecated))*","highlight_start":1,"highlight_end":57},{"text":"                            $(.argument(","highlight_start":1,"highlight_end":41},{"text":"                                $crate::__juniper_create_arg!(","highlight_start":1,"highlight_end":63},{"text":"                                    registry = registry,","highlight_start":1,"highlight_end":57},{"text":"                                    info = info,","highlight_start":1,"highlight_end":49},{"text":"                                    arg_ty = $arg_ty,","highlight_start":1,"highlight_end":54},{"text":"                                    arg_name = $arg_name,","highlight_start":1,"highlight_end":58},{"text":"                                    $(default = $arg_default,)*","highlight_start":1,"highlight_end":64},{"text":"                                    $(description = $arg_description,)*","highlight_start":1,"highlight_end":72},{"text":"                                    $(docstring = $arg_docstring,)*","highlight_start":1,"highlight_end":68},{"text":"                                )","highlight_start":1,"highlight_end":34},{"text":"                            ))*,","highlight_start":1,"highlight_end":33},{"text":"                    )*];","highlight_start":1,"highlight_end":25},{"text":"                    registry.build_object_type::<$name>(","highlight_start":1,"highlight_end":57},{"text":"                        info, fields","highlight_start":1,"highlight_end":37},{"text":"                    )","highlight_start":1,"highlight_end":22},{"text":"                        $(.description($desciption))*","highlight_start":1,"highlight_end":54},{"text":"                        $($(.interfaces(&[","highlight_start":1,"highlight_end":43},{"text":"                           $(registry.get_type::<$interface>(&()),)*","highlight_start":1,"highlight_end":69},{"text":"                        ]))*)*","highlight_start":1,"highlight_end":31},{"text":"                        .into_meta()","highlight_start":1,"highlight_end":37},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn concrete_type_name(&self, _: &Self::Context, _: &Self::TypeInfo) -> String {","highlight_start":1,"highlight_end":96},{"text":"                    $($outname)*.to_owned()","highlight_start":1,"highlight_end":44},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[allow(unused_variables)]","highlight_start":1,"highlight_end":43},{"text":"                fn resolve_field(","highlight_start":1,"highlight_end":34},{"text":"                    &$main_self,","highlight_start":1,"highlight_end":33},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    field: &str,","highlight_start":1,"highlight_end":33},{"text":"                    args: &$crate::Arguments<$crate::__juniper_insert_generic!($($scalar)+)>,","highlight_start":1,"highlight_end":94},{"text":"                    executor: &$crate::Executor<Self::Context, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":111},{"text":"                ) -> $crate::ExecutionResult<$crate::__juniper_insert_generic!($($scalar)+)> {","highlight_start":1,"highlight_end":95},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        if field == &$crate::to_camel_case(stringify!($fn_name)) {","highlight_start":1,"highlight_end":83},{"text":"                            let result: $return_ty = (|| {","highlight_start":1,"highlight_end":59},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $arg_name: $arg_ty = args.get(&$crate::to_camel_case(stringify!($arg_name)))","highlight_start":1,"highlight_end":117},{"text":"                                        .expect(concat!(","highlight_start":1,"highlight_end":57},{"text":"                                            \"Argument \",","highlight_start":1,"highlight_end":57},{"text":"                                            stringify!($arg_name),","highlight_start":1,"highlight_end":67},{"text":"                                            \" missing - validation must have failed\"","highlight_start":1,"highlight_end":85},{"text":"                                        ));","highlight_start":1,"highlight_end":44},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $executor = &executor;","highlight_start":1,"highlight_end":63},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $body","highlight_start":1,"highlight_end":38},{"text":"                            })();","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                            return $crate::IntoResolvable::into(result, executor.context())","highlight_start":1,"highlight_end":92},{"text":"                                .and_then(|res| {","highlight_start":1,"highlight_end":50},{"text":"                                    match res {","highlight_start":1,"highlight_end":48},{"text":"                                        Some((ctx, r)) => {","highlight_start":1,"highlight_end":60},{"text":"                                            executor.replaced_context(ctx)","highlight_start":1,"highlight_end":75},{"text":"                                                .resolve_with_ctx(&(), &r)","highlight_start":1,"highlight_end":75},{"text":"                                        }","highlight_start":1,"highlight_end":42},{"text":"                                        None => Ok($crate::Value::null())","highlight_start":1,"highlight_end":74},{"text":"                                    }","highlight_start":1,"highlight_end":38},{"text":"                                });","highlight_start":1,"highlight_end":36},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    panic!(\"Field {} not found on type {}\", field, $($outname)*);","highlight_start":1,"highlight_end":82},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetime:tt,)*],","highlight_start":1,"highlight_end":45},{"text":"            name = $name:ty,","highlight_start":1,"highlight_end":29},{"text":"            ctx = $ctxt: ty,","highlight_start":1,"highlight_end":29},{"text":"            main_self = $mainself: ident,","highlight_start":1,"highlight_end":42},{"text":"            outname = {$($outname:tt)*},","highlight_start":1,"highlight_end":41},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: tt,)*","highlight_start":1,"highlight_end":47},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($_interface:ty,)*],)*","highlight_start":1,"highlight_end":56},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = [$($interface: ty),+]  $($rest:tt)*","highlight_start":1,"highlight_end":51},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                ctx = $ctxt,","highlight_start":1,"highlight_end":29},{"text":"                main_self = $mainself,","highlight_start":1,"highlight_end":39},{"text":"                outname = {$($outname)*},","highlight_start":1,"highlight_end":42},{"text":"                scalar = {$($scalar)*},","highlight_start":1,"highlight_end":40},{"text":"                $(description = $desciption,)*","highlight_start":1,"highlight_end":47},{"text":"                additional = {","highlight_start":1,"highlight_end":31},{"text":"                        interfaces = [$($interface,)*],","highlight_start":1,"highlight_end":56},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)* },","highlight_start":1,"highlight_end":33},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = interfaces: $($rest:tt)*","highlight_start":1,"highlight_end":40},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::graphql_object!(","highlight_start":1,"highlight_end":33},{"text":"            @parse_interfaces,","highlight_start":1,"highlight_end":31},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = { $($meta)* },","highlight_start":1,"highlight_end":34},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse,","highlight_start":1,"highlight_end":16},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = graphql_object,","highlight_start":1,"highlight_end":47},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = graphql_object,","highlight_start":1,"highlight_end":43},{"text":"                header = {@parse_interfaces,},","highlight_start":1,"highlight_end":47},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [],","highlight_start":1,"highlight_end":24},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@$($stuff:tt)*) => {","highlight_start":1,"highlight_end":26},{"text":"        compile_error!(\"Invalid syntax for `graphql_object!`\");","highlight_start":1,"highlight_end":64},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $($rest:tt)*","highlight_start":1,"highlight_end":21},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_object_header!(","highlight_start":1,"highlight_end":48},{"text":"            callback = graphql_object,","highlight_start":1,"highlight_end":39},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following implementations were found:\n  <Result<(&'a <T as GraphQLType<S>>::Context, T), FieldError<S>> as IntoResolvable<'a, S, T, C>>\n  <Result<T, E> as IntoResolvable<'a, S, T, C>>\n  <Result<std::option::Option<(&'a <T as GraphQLType<S>>::Context, T)>, FieldError<S>> as IntoResolvable<'a, S, std::option::Option<T>, C>>","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Result<Vec<u8>, FieldError>: IntoResolvable<'_, _, _, _>` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/schema.rs:9:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mgraphql_object!(Subsystem: Context as \"Subsystem\" |&self| {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    description: \"Service subsystem\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    field uart_rx() -> FieldResult<Vec<u8>> as \"Reading of subsystem uart\" {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Ok(self.uart_rx()?)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m});\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|__^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `IntoResolvable<'_, _, _, _>` is not implemented for `Result<Vec<u8>, FieldError>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following implementations were found:\u001b[0m\n\u001b[0m             <Result<(&'a <T as GraphQLType<S>>::Context, T), FieldError<S>> as IntoResolvable<'a, S, T, C>>\u001b[0m\n\u001b[0m             <Result<T, E> as IntoResolvable<'a, S, T, C>>\u001b[0m\n\u001b[0m             <Result<std::option::Option<(&'a <T as GraphQLType<S>>::Context, T)>, FieldError<S>> as IntoResolvable<'a, S, std::option::Option<T>, C>>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::graphql_object` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Result<Vec<u8>, FieldError>: IntoResolvable<'_, _, _, _>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":13537,"byte_end":13565,"line_start":421,"line_end":421,"column_start":36,"column_end":64,"is_primary":true,"text":[{"text":"                            return $crate::IntoResolvable::into(result, executor.context())","highlight_start":36,"highlight_end":64}],"label":"the trait `IntoResolvable<'_, _, _, _>` is not implemented for `Result<Vec<u8>, FieldError>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":8610,"byte_end":8743,"line_start":324,"line_end":328,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::$success_callback!(","highlight_start":9,"highlight_end":36},{"text":"            @generate,","highlight_start":1,"highlight_end":23},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":15306,"byte_end":16046,"line_start":515,"line_end":535,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":9,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":9852,"byte_end":10440,"line_start":365,"line_end":381,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":9,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                $(lifetimes = [$($lifetime,)*],)*","highlight_start":1,"highlight_end":50},{"text":"                $(name = $name,)*","highlight_start":1,"highlight_end":34},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                $(outname = {$($outname)*},)*","highlight_start":1,"highlight_end":46},{"text":"                $(scalar = {$($scalar)*},)*","highlight_start":1,"highlight_end":44},{"text":"                description = $desc,","highlight_start":1,"highlight_end":37},{"text":"                $(additional = {$($other)*},)*","highlight_start":1,"highlight_end":47},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":10692,"byte_end":10973,"line_start":390,"line_end":397,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":9,"highlight_end":45},{"text":"            @parse_description,","highlight_start":1,"highlight_end":32},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":16217,"byte_end":16534,"line_start":504,"line_end":513,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":9,"highlight_end":45},{"text":"            success_callback = graphql_object,","highlight_start":1,"highlight_end":47},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = graphql_object,","highlight_start":1,"highlight_end":43},{"text":"                header = {@parse_interfaces,},","highlight_start":1,"highlight_end":47},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [],","highlight_start":1,"highlight_end":24},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":4424,"byte_end":4764,"line_start":168,"line_end":179,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::$callback!(","highlight_start":9,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":16688,"byte_end":16805,"line_start":523,"line_end":526,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__juniper_parse_object_header!(","highlight_start":9,"highlight_end":48},{"text":"            callback = graphql_object,","highlight_start":1,"highlight_end":39},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/schema.rs","byte_start":436,"byte_end":637,"line_start":20,"line_end":26,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"graphql_object!(UartRX: Context as \"UartRX\" |&self| {","highlight_start":1,"highlight_end":54},{"text":"    description: \"Read from UART\"","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    field uart_rx() -> FieldResult<Vec<u8>> as \"Reading of subsystem uart\" {","highlight_start":1,"highlight_end":77},{"text":"        Ok(self.uart_rx())","highlight_start":1,"highlight_end":27},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"});","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"graphql_object!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":8678,"byte_end":16815,"line_start":314,"line_end":529,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! graphql_object {","highlight_start":1,"highlight_end":30},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @generate,","highlight_start":1,"highlight_end":19},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetimes:tt,)*],","highlight_start":1,"highlight_end":46},{"text":"            name = $name: ty,","highlight_start":1,"highlight_end":30},{"text":"            ctx = $ctx: ty,","highlight_start":1,"highlight_end":28},{"text":"            main_self = $main_self: ident,","highlight_start":1,"highlight_end":43},{"text":"            outname = {$($outname: tt)*},","highlight_start":1,"highlight_end":42},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: expr,)*","highlight_start":1,"highlight_end":49},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($interface:ty,)*],)*","highlight_start":1,"highlight_end":55},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({","highlight_start":1,"highlight_end":21},{"text":"            name = $fn_name: ident,","highlight_start":1,"highlight_end":36},{"text":"            body = $body: block,","highlight_start":1,"highlight_end":33},{"text":"            return_ty = $return_ty: ty,","highlight_start":1,"highlight_end":40},{"text":"            args = [$({","highlight_start":1,"highlight_end":24},{"text":"                arg_name = $arg_name : ident,","highlight_start":1,"highlight_end":46},{"text":"                arg_ty = $arg_ty: ty,","highlight_start":1,"highlight_end":38},{"text":"                $(arg_default = $arg_default: expr,)*","highlight_start":1,"highlight_end":54},{"text":"                $(arg_description = $arg_description: expr,)*","highlight_start":1,"highlight_end":62},{"text":"                $(arg_docstring = $arg_docstring: expr,)*","highlight_start":1,"highlight_end":58},{"text":"            },)*],","highlight_start":1,"highlight_end":19},{"text":"            $(decs = $fn_description: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(docstring = $docstring: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(deprecated = $deprecated: expr,)*","highlight_start":1,"highlight_end":48},{"text":"            $(executor_var = $executor: ident,)*","highlight_start":1,"highlight_end":49},{"text":"        },)*],","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_impl_trait!(","highlight_start":1,"highlight_end":39},{"text":"            impl<$($scalar)* $(, $lifetimes)* > GraphQLType for $name {","highlight_start":1,"highlight_end":72},{"text":"                type Context = $ctx;","highlight_start":1,"highlight_end":37},{"text":"                type TypeInfo = ();","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn name(_ : &Self::TypeInfo) -> Option<&str> {","highlight_start":1,"highlight_end":63},{"text":"                    Some($($outname)*)","highlight_start":1,"highlight_end":39},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn meta<'r>(","highlight_start":1,"highlight_end":29},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    registry: &mut $crate::Registry<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":104},{"text":"                ) -> $crate::meta::MetaType<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":96},{"text":"                where for<'__b> &'__b $crate::__juniper_insert_generic!($($scalar)+): $crate::ScalarRefValue<'__b>,","highlight_start":1,"highlight_end":116},{"text":"                    $crate::__juniper_insert_generic!($($scalar)+): 'r","highlight_start":1,"highlight_end":71},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    let fields = &[$(","highlight_start":1,"highlight_end":38},{"text":"                        registry.field_convert::<$return_ty, _, Self::Context>(","highlight_start":1,"highlight_end":80},{"text":"                            &$crate::to_camel_case(stringify!($fn_name)),","highlight_start":1,"highlight_end":74},{"text":"                            info","highlight_start":1,"highlight_end":33},{"text":"                        )","highlight_start":1,"highlight_end":26},{"text":"                            $(.description($fn_description))*","highlight_start":1,"highlight_end":62},{"text":"                            .push_docstring(&[$($docstring,)*])","highlight_start":1,"highlight_end":64},{"text":"                            $(.deprecated($deprecated))*","highlight_start":1,"highlight_end":57},{"text":"                            $(.argument(","highlight_start":1,"highlight_end":41},{"text":"                                $crate::__juniper_create_arg!(","highlight_start":1,"highlight_end":63},{"text":"                                    registry = registry,","highlight_start":1,"highlight_end":57},{"text":"                                    info = info,","highlight_start":1,"highlight_end":49},{"text":"                                    arg_ty = $arg_ty,","highlight_start":1,"highlight_end":54},{"text":"                                    arg_name = $arg_name,","highlight_start":1,"highlight_end":58},{"text":"                                    $(default = $arg_default,)*","highlight_start":1,"highlight_end":64},{"text":"                                    $(description = $arg_description,)*","highlight_start":1,"highlight_end":72},{"text":"                                    $(docstring = $arg_docstring,)*","highlight_start":1,"highlight_end":68},{"text":"                                )","highlight_start":1,"highlight_end":34},{"text":"                            ))*,","highlight_start":1,"highlight_end":33},{"text":"                    )*];","highlight_start":1,"highlight_end":25},{"text":"                    registry.build_object_type::<$name>(","highlight_start":1,"highlight_end":57},{"text":"                        info, fields","highlight_start":1,"highlight_end":37},{"text":"                    )","highlight_start":1,"highlight_end":22},{"text":"                        $(.description($desciption))*","highlight_start":1,"highlight_end":54},{"text":"                        $($(.interfaces(&[","highlight_start":1,"highlight_end":43},{"text":"                           $(registry.get_type::<$interface>(&()),)*","highlight_start":1,"highlight_end":69},{"text":"                        ]))*)*","highlight_start":1,"highlight_end":31},{"text":"                        .into_meta()","highlight_start":1,"highlight_end":37},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn concrete_type_name(&self, _: &Self::Context, _: &Self::TypeInfo) -> String {","highlight_start":1,"highlight_end":96},{"text":"                    $($outname)*.to_owned()","highlight_start":1,"highlight_end":44},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[allow(unused_variables)]","highlight_start":1,"highlight_end":43},{"text":"                fn resolve_field(","highlight_start":1,"highlight_end":34},{"text":"                    &$main_self,","highlight_start":1,"highlight_end":33},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    field: &str,","highlight_start":1,"highlight_end":33},{"text":"                    args: &$crate::Arguments<$crate::__juniper_insert_generic!($($scalar)+)>,","highlight_start":1,"highlight_end":94},{"text":"                    executor: &$crate::Executor<Self::Context, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":111},{"text":"                ) -> $crate::ExecutionResult<$crate::__juniper_insert_generic!($($scalar)+)> {","highlight_start":1,"highlight_end":95},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        if field == &$crate::to_camel_case(stringify!($fn_name)) {","highlight_start":1,"highlight_end":83},{"text":"                            let result: $return_ty = (|| {","highlight_start":1,"highlight_end":59},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $arg_name: $arg_ty = args.get(&$crate::to_camel_case(stringify!($arg_name)))","highlight_start":1,"highlight_end":117},{"text":"                                        .expect(concat!(","highlight_start":1,"highlight_end":57},{"text":"                                            \"Argument \",","highlight_start":1,"highlight_end":57},{"text":"                                            stringify!($arg_name),","highlight_start":1,"highlight_end":67},{"text":"                                            \" missing - validation must have failed\"","highlight_start":1,"highlight_end":85},{"text":"                                        ));","highlight_start":1,"highlight_end":44},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $executor = &executor;","highlight_start":1,"highlight_end":63},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $body","highlight_start":1,"highlight_end":38},{"text":"                            })();","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                            return $crate::IntoResolvable::into(result, executor.context())","highlight_start":1,"highlight_end":92},{"text":"                                .and_then(|res| {","highlight_start":1,"highlight_end":50},{"text":"                                    match res {","highlight_start":1,"highlight_end":48},{"text":"                                        Some((ctx, r)) => {","highlight_start":1,"highlight_end":60},{"text":"                                            executor.replaced_context(ctx)","highlight_start":1,"highlight_end":75},{"text":"                                                .resolve_with_ctx(&(), &r)","highlight_start":1,"highlight_end":75},{"text":"                                        }","highlight_start":1,"highlight_end":42},{"text":"                                        None => Ok($crate::Value::null())","highlight_start":1,"highlight_end":74},{"text":"                                    }","highlight_start":1,"highlight_end":38},{"text":"                                });","highlight_start":1,"highlight_end":36},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    panic!(\"Field {} not found on type {}\", field, $($outname)*);","highlight_start":1,"highlight_end":82},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetime:tt,)*],","highlight_start":1,"highlight_end":45},{"text":"            name = $name:ty,","highlight_start":1,"highlight_end":29},{"text":"            ctx = $ctxt: ty,","highlight_start":1,"highlight_end":29},{"text":"            main_self = $mainself: ident,","highlight_start":1,"highlight_end":42},{"text":"            outname = {$($outname:tt)*},","highlight_start":1,"highlight_end":41},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: tt,)*","highlight_start":1,"highlight_end":47},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($_interface:ty,)*],)*","highlight_start":1,"highlight_end":56},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = [$($interface: ty),+]  $($rest:tt)*","highlight_start":1,"highlight_end":51},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                ctx = $ctxt,","highlight_start":1,"highlight_end":29},{"text":"                main_self = $mainself,","highlight_start":1,"highlight_end":39},{"text":"                outname = {$($outname)*},","highlight_start":1,"highlight_end":42},{"text":"                scalar = {$($scalar)*},","highlight_start":1,"highlight_end":40},{"text":"                $(description = $desciption,)*","highlight_start":1,"highlight_end":47},{"text":"                additional = {","highlight_start":1,"highlight_end":31},{"text":"                        interfaces = [$($interface,)*],","highlight_start":1,"highlight_end":56},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)* },","highlight_start":1,"highlight_end":33},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = interfaces: $($rest:tt)*","highlight_start":1,"highlight_end":40},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::graphql_object!(","highlight_start":1,"highlight_end":33},{"text":"            @parse_interfaces,","highlight_start":1,"highlight_end":31},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = { $($meta)* },","highlight_start":1,"highlight_end":34},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse,","highlight_start":1,"highlight_end":16},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = graphql_object,","highlight_start":1,"highlight_end":47},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = graphql_object,","highlight_start":1,"highlight_end":43},{"text":"                header = {@parse_interfaces,},","highlight_start":1,"highlight_end":47},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [],","highlight_start":1,"highlight_end":24},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@$($stuff:tt)*) => {","highlight_start":1,"highlight_end":26},{"text":"        compile_error!(\"Invalid syntax for `graphql_object!`\");","highlight_start":1,"highlight_end":64},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $($rest:tt)*","highlight_start":1,"highlight_end":21},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_object_header!(","highlight_start":1,"highlight_end":48},{"text":"            callback = graphql_object,","highlight_start":1,"highlight_end":39},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__juniper_parse_object_header!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":1275,"byte_end":8320,"line_start":56,"line_end":312,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! __juniper_parse_object_header {","highlight_start":1,"highlight_end":45},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback:ident,","highlight_start":1,"highlight_end":36},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)* as $outname: tt","highlight_start":1,"highlight_end":77},{"text":"        where Scalar = <$generic:tt $(: $bound:tt)*> $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":80},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<$generic $(: $bound)*>},","highlight_start":1,"highlight_end":52},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback:ident,","highlight_start":1,"highlight_end":36},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)* as $outname: tt","highlight_start":1,"highlight_end":77},{"text":"        where Scalar = $scalar: ty $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":62},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {$scalar},","highlight_start":1,"highlight_end":36},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)* as $outname: tt $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":104},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* as $outname: tt","highlight_start":1,"highlight_end":57},{"text":"        where Scalar = <$generic:tt $(: $bound:tt)*> $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":80},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<$generic $(:$bound)*>},","highlight_start":1,"highlight_end":51},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* as $outname: tt","highlight_start":1,"highlight_end":57},{"text":"        where Scalar = $scalar: ty $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":62},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {$scalar},","highlight_start":1,"highlight_end":36},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* as $outname: tt $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":84},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)*","highlight_start":1,"highlight_end":61},{"text":"        where Scalar = <$generic:tt $(: $bound:tt)*> $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":80},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {<$generic $(:$bounds)*>},","highlight_start":1,"highlight_end":52},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)*","highlight_start":1,"highlight_end":61},{"text":"        where Scalar = $scalar: ty $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":62},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {$scalar},","highlight_start":1,"highlight_end":36},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)* $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":88},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)*","highlight_start":1,"highlight_end":41},{"text":"        where Scalar = <$generic:tt $(: $bound:tt)*> $(| &$mainself:ident |)*","highlight_start":1,"highlight_end":78},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {<$generic $(: $bound)*>},","highlight_start":1,"highlight_end":52},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* where Scalar = $scalar: ty $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":95},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {$scalar},","highlight_start":1,"highlight_end":36},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":68},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        compile_error!(\"Invalid syntax\");","highlight_start":1,"highlight_end":42},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::graphql_object!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":8678,"byte_end":16815,"line_start":314,"line_end":529,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! graphql_object {","highlight_start":1,"highlight_end":30},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @generate,","highlight_start":1,"highlight_end":19},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetimes:tt,)*],","highlight_start":1,"highlight_end":46},{"text":"            name = $name: ty,","highlight_start":1,"highlight_end":30},{"text":"            ctx = $ctx: ty,","highlight_start":1,"highlight_end":28},{"text":"            main_self = $main_self: ident,","highlight_start":1,"highlight_end":43},{"text":"            outname = {$($outname: tt)*},","highlight_start":1,"highlight_end":42},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: expr,)*","highlight_start":1,"highlight_end":49},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($interface:ty,)*],)*","highlight_start":1,"highlight_end":55},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({","highlight_start":1,"highlight_end":21},{"text":"            name = $fn_name: ident,","highlight_start":1,"highlight_end":36},{"text":"            body = $body: block,","highlight_start":1,"highlight_end":33},{"text":"            return_ty = $return_ty: ty,","highlight_start":1,"highlight_end":40},{"text":"            args = [$({","highlight_start":1,"highlight_end":24},{"text":"                arg_name = $arg_name : ident,","highlight_start":1,"highlight_end":46},{"text":"                arg_ty = $arg_ty: ty,","highlight_start":1,"highlight_end":38},{"text":"                $(arg_default = $arg_default: expr,)*","highlight_start":1,"highlight_end":54},{"text":"                $(arg_description = $arg_description: expr,)*","highlight_start":1,"highlight_end":62},{"text":"                $(arg_docstring = $arg_docstring: expr,)*","highlight_start":1,"highlight_end":58},{"text":"            },)*],","highlight_start":1,"highlight_end":19},{"text":"            $(decs = $fn_description: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(docstring = $docstring: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(deprecated = $deprecated: expr,)*","highlight_start":1,"highlight_end":48},{"text":"            $(executor_var = $executor: ident,)*","highlight_start":1,"highlight_end":49},{"text":"        },)*],","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_impl_trait!(","highlight_start":1,"highlight_end":39},{"text":"            impl<$($scalar)* $(, $lifetimes)* > GraphQLType for $name {","highlight_start":1,"highlight_end":72},{"text":"                type Context = $ctx;","highlight_start":1,"highlight_end":37},{"text":"                type TypeInfo = ();","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn name(_ : &Self::TypeInfo) -> Option<&str> {","highlight_start":1,"highlight_end":63},{"text":"                    Some($($outname)*)","highlight_start":1,"highlight_end":39},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn meta<'r>(","highlight_start":1,"highlight_end":29},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    registry: &mut $crate::Registry<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":104},{"text":"                ) -> $crate::meta::MetaType<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":96},{"text":"                where for<'__b> &'__b $crate::__juniper_insert_generic!($($scalar)+): $crate::ScalarRefValue<'__b>,","highlight_start":1,"highlight_end":116},{"text":"                    $crate::__juniper_insert_generic!($($scalar)+): 'r","highlight_start":1,"highlight_end":71},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    let fields = &[$(","highlight_start":1,"highlight_end":38},{"text":"                        registry.field_convert::<$return_ty, _, Self::Context>(","highlight_start":1,"highlight_end":80},{"text":"                            &$crate::to_camel_case(stringify!($fn_name)),","highlight_start":1,"highlight_end":74},{"text":"                            info","highlight_start":1,"highlight_end":33},{"text":"                        )","highlight_start":1,"highlight_end":26},{"text":"                            $(.description($fn_description))*","highlight_start":1,"highlight_end":62},{"text":"                            .push_docstring(&[$($docstring,)*])","highlight_start":1,"highlight_end":64},{"text":"                            $(.deprecated($deprecated))*","highlight_start":1,"highlight_end":57},{"text":"                            $(.argument(","highlight_start":1,"highlight_end":41},{"text":"                                $crate::__juniper_create_arg!(","highlight_start":1,"highlight_end":63},{"text":"                                    registry = registry,","highlight_start":1,"highlight_end":57},{"text":"                                    info = info,","highlight_start":1,"highlight_end":49},{"text":"                                    arg_ty = $arg_ty,","highlight_start":1,"highlight_end":54},{"text":"                                    arg_name = $arg_name,","highlight_start":1,"highlight_end":58},{"text":"                                    $(default = $arg_default,)*","highlight_start":1,"highlight_end":64},{"text":"                                    $(description = $arg_description,)*","highlight_start":1,"highlight_end":72},{"text":"                                    $(docstring = $arg_docstring,)*","highlight_start":1,"highlight_end":68},{"text":"                                )","highlight_start":1,"highlight_end":34},{"text":"                            ))*,","highlight_start":1,"highlight_end":33},{"text":"                    )*];","highlight_start":1,"highlight_end":25},{"text":"                    registry.build_object_type::<$name>(","highlight_start":1,"highlight_end":57},{"text":"                        info, fields","highlight_start":1,"highlight_end":37},{"text":"                    )","highlight_start":1,"highlight_end":22},{"text":"                        $(.description($desciption))*","highlight_start":1,"highlight_end":54},{"text":"                        $($(.interfaces(&[","highlight_start":1,"highlight_end":43},{"text":"                           $(registry.get_type::<$interface>(&()),)*","highlight_start":1,"highlight_end":69},{"text":"                        ]))*)*","highlight_start":1,"highlight_end":31},{"text":"                        .into_meta()","highlight_start":1,"highlight_end":37},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn concrete_type_name(&self, _: &Self::Context, _: &Self::TypeInfo) -> String {","highlight_start":1,"highlight_end":96},{"text":"                    $($outname)*.to_owned()","highlight_start":1,"highlight_end":44},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[allow(unused_variables)]","highlight_start":1,"highlight_end":43},{"text":"                fn resolve_field(","highlight_start":1,"highlight_end":34},{"text":"                    &$main_self,","highlight_start":1,"highlight_end":33},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    field: &str,","highlight_start":1,"highlight_end":33},{"text":"                    args: &$crate::Arguments<$crate::__juniper_insert_generic!($($scalar)+)>,","highlight_start":1,"highlight_end":94},{"text":"                    executor: &$crate::Executor<Self::Context, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":111},{"text":"                ) -> $crate::ExecutionResult<$crate::__juniper_insert_generic!($($scalar)+)> {","highlight_start":1,"highlight_end":95},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        if field == &$crate::to_camel_case(stringify!($fn_name)) {","highlight_start":1,"highlight_end":83},{"text":"                            let result: $return_ty = (|| {","highlight_start":1,"highlight_end":59},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $arg_name: $arg_ty = args.get(&$crate::to_camel_case(stringify!($arg_name)))","highlight_start":1,"highlight_end":117},{"text":"                                        .expect(concat!(","highlight_start":1,"highlight_end":57},{"text":"                                            \"Argument \",","highlight_start":1,"highlight_end":57},{"text":"                                            stringify!($arg_name),","highlight_start":1,"highlight_end":67},{"text":"                                            \" missing - validation must have failed\"","highlight_start":1,"highlight_end":85},{"text":"                                        ));","highlight_start":1,"highlight_end":44},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $executor = &executor;","highlight_start":1,"highlight_end":63},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $body","highlight_start":1,"highlight_end":38},{"text":"                            })();","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                            return $crate::IntoResolvable::into(result, executor.context())","highlight_start":1,"highlight_end":92},{"text":"                                .and_then(|res| {","highlight_start":1,"highlight_end":50},{"text":"                                    match res {","highlight_start":1,"highlight_end":48},{"text":"                                        Some((ctx, r)) => {","highlight_start":1,"highlight_end":60},{"text":"                                            executor.replaced_context(ctx)","highlight_start":1,"highlight_end":75},{"text":"                                                .resolve_with_ctx(&(), &r)","highlight_start":1,"highlight_end":75},{"text":"                                        }","highlight_start":1,"highlight_end":42},{"text":"                                        None => Ok($crate::Value::null())","highlight_start":1,"highlight_end":74},{"text":"                                    }","highlight_start":1,"highlight_end":38},{"text":"                                });","highlight_start":1,"highlight_end":36},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    panic!(\"Field {} not found on type {}\", field, $($outname)*);","highlight_start":1,"highlight_end":82},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetime:tt,)*],","highlight_start":1,"highlight_end":45},{"text":"            name = $name:ty,","highlight_start":1,"highlight_end":29},{"text":"            ctx = $ctxt: ty,","highlight_start":1,"highlight_end":29},{"text":"            main_self = $mainself: ident,","highlight_start":1,"highlight_end":42},{"text":"            outname = {$($outname:tt)*},","highlight_start":1,"highlight_end":41},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: tt,)*","highlight_start":1,"highlight_end":47},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($_interface:ty,)*],)*","highlight_start":1,"highlight_end":56},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = [$($interface: ty),+]  $($rest:tt)*","highlight_start":1,"highlight_end":51},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                ctx = $ctxt,","highlight_start":1,"highlight_end":29},{"text":"                main_self = $mainself,","highlight_start":1,"highlight_end":39},{"text":"                outname = {$($outname)*},","highlight_start":1,"highlight_end":42},{"text":"                scalar = {$($scalar)*},","highlight_start":1,"highlight_end":40},{"text":"                $(description = $desciption,)*","highlight_start":1,"highlight_end":47},{"text":"                additional = {","highlight_start":1,"highlight_end":31},{"text":"                        interfaces = [$($interface,)*],","highlight_start":1,"highlight_end":56},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)* },","highlight_start":1,"highlight_end":33},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = interfaces: $($rest:tt)*","highlight_start":1,"highlight_end":40},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::graphql_object!(","highlight_start":1,"highlight_end":33},{"text":"            @parse_interfaces,","highlight_start":1,"highlight_end":31},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = { $($meta)* },","highlight_start":1,"highlight_end":34},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse,","highlight_start":1,"highlight_end":16},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = graphql_object,","highlight_start":1,"highlight_end":47},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = graphql_object,","highlight_start":1,"highlight_end":43},{"text":"                header = {@parse_interfaces,},","highlight_start":1,"highlight_end":47},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [],","highlight_start":1,"highlight_end":24},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@$($stuff:tt)*) => {","highlight_start":1,"highlight_end":26},{"text":"        compile_error!(\"Invalid syntax for `graphql_object!`\");","highlight_start":1,"highlight_end":64},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $($rest:tt)*","highlight_start":1,"highlight_end":21},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_object_header!(","highlight_start":1,"highlight_end":48},{"text":"            callback = graphql_object,","highlight_start":1,"highlight_end":39},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__juniper_parse_field_list!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":8353,"byte_end":16697,"line_start":316,"line_end":561,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! __juniper_parse_field_list {","highlight_start":1,"highlight_end":42},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest =","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$success_callback!(","highlight_start":1,"highlight_end":36},{"text":"            @generate,","highlight_start":1,"highlight_end":23},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = , $($rest: tt)*","highlight_start":1,"highlight_end":31},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_description,","highlight_start":1,"highlight_end":28},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            $(lifetimes = [$($lifetime:tt,)*],)*","highlight_start":1,"highlight_end":49},{"text":"            $(name = $name:ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(ctx = $ctxt: ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(main_self = $mainself: ident,)*","highlight_start":1,"highlight_end":46},{"text":"            $(outname = {$($outname:tt)*},)*","highlight_start":1,"highlight_end":45},{"text":"            $(scalar = {$($scalar:tt)*},)*","highlight_start":1,"highlight_end":43},{"text":"            $(description = $_desciption: tt,)*","highlight_start":1,"highlight_end":48},{"text":"            $(additional = {$($other: tt)*},)*","highlight_start":1,"highlight_end":47},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $desc: tt  $($rest:tt)*","highlight_start":1,"highlight_end":39},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                $(lifetimes = [$($lifetime,)*],)*","highlight_start":1,"highlight_end":50},{"text":"                $(name = $name,)*","highlight_start":1,"highlight_end":34},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                $(outname = {$($outname)*},)*","highlight_start":1,"highlight_end":46},{"text":"                $(scalar = {$($scalar)*},)*","highlight_start":1,"highlight_end":44},{"text":"                description = $desc,","highlight_start":1,"highlight_end":37},{"text":"                $(additional = {$($other)*},)*","highlight_start":1,"highlight_end":47},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)*},","highlight_start":1,"highlight_end":32},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = description:  $($rest:tt)*","highlight_start":1,"highlight_end":42},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            @parse_description,","highlight_start":1,"highlight_end":32},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        #[deprecated $(( $(since = $since: tt,)* note = $reason: tt ))* ]","highlight_start":1,"highlight_end":74},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                deprecated = None$(.unwrap_or(Some($reason)))*,","highlight_start":1,"highlight_end":64},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field deprecated $reason:tt $name: ident (","highlight_start":1,"highlight_end":58},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                deprecated = Some($reason),","highlight_start":1,"highlight_end":44},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field $name: ident (","highlight_start":1,"highlight_end":36},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {","highlight_start":1,"highlight_end":30},{"text":"            callback = $callback: ident,","highlight_start":1,"highlight_end":41},{"text":"            header = {$($header:tt)*},","highlight_start":1,"highlight_end":39},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            $($header)*","highlight_start":1,"highlight_end":24},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = $callback,","highlight_start":1,"highlight_end":38},{"text":"                header = {$($header)*},","highlight_start":1,"highlight_end":40},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__juniper_parse_field_list!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":8353,"byte_end":16697,"line_start":316,"line_end":561,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! __juniper_parse_field_list {","highlight_start":1,"highlight_end":42},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest =","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$success_callback!(","highlight_start":1,"highlight_end":36},{"text":"            @generate,","highlight_start":1,"highlight_end":23},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = , $($rest: tt)*","highlight_start":1,"highlight_end":31},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_description,","highlight_start":1,"highlight_end":28},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            $(lifetimes = [$($lifetime:tt,)*],)*","highlight_start":1,"highlight_end":49},{"text":"            $(name = $name:ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(ctx = $ctxt: ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(main_self = $mainself: ident,)*","highlight_start":1,"highlight_end":46},{"text":"            $(outname = {$($outname:tt)*},)*","highlight_start":1,"highlight_end":45},{"text":"            $(scalar = {$($scalar:tt)*},)*","highlight_start":1,"highlight_end":43},{"text":"            $(description = $_desciption: tt,)*","highlight_start":1,"highlight_end":48},{"text":"            $(additional = {$($other: tt)*},)*","highlight_start":1,"highlight_end":47},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $desc: tt  $($rest:tt)*","highlight_start":1,"highlight_end":39},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                $(lifetimes = [$($lifetime,)*],)*","highlight_start":1,"highlight_end":50},{"text":"                $(name = $name,)*","highlight_start":1,"highlight_end":34},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                $(outname = {$($outname)*},)*","highlight_start":1,"highlight_end":46},{"text":"                $(scalar = {$($scalar)*},)*","highlight_start":1,"highlight_end":44},{"text":"                description = $desc,","highlight_start":1,"highlight_end":37},{"text":"                $(additional = {$($other)*},)*","highlight_start":1,"highlight_end":47},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)*},","highlight_start":1,"highlight_end":32},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = description:  $($rest:tt)*","highlight_start":1,"highlight_end":42},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            @parse_description,","highlight_start":1,"highlight_end":32},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        #[deprecated $(( $(since = $since: tt,)* note = $reason: tt ))* ]","highlight_start":1,"highlight_end":74},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                deprecated = None$(.unwrap_or(Some($reason)))*,","highlight_start":1,"highlight_end":64},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field deprecated $reason:tt $name: ident (","highlight_start":1,"highlight_end":58},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                deprecated = Some($reason),","highlight_start":1,"highlight_end":44},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field $name: ident (","highlight_start":1,"highlight_end":36},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {","highlight_start":1,"highlight_end":30},{"text":"            callback = $callback: ident,","highlight_start":1,"highlight_end":41},{"text":"            header = {$($header:tt)*},","highlight_start":1,"highlight_end":39},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            $($header)*","highlight_start":1,"highlight_end":24},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = $callback,","highlight_start":1,"highlight_end":38},{"text":"                header = {$($header)*},","highlight_start":1,"highlight_end":40},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__juniper_parse_field_list!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":8353,"byte_end":16697,"line_start":316,"line_end":561,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! __juniper_parse_field_list {","highlight_start":1,"highlight_end":42},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest =","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$success_callback!(","highlight_start":1,"highlight_end":36},{"text":"            @generate,","highlight_start":1,"highlight_end":23},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = , $($rest: tt)*","highlight_start":1,"highlight_end":31},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_description,","highlight_start":1,"highlight_end":28},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            $(lifetimes = [$($lifetime:tt,)*],)*","highlight_start":1,"highlight_end":49},{"text":"            $(name = $name:ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(ctx = $ctxt: ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(main_self = $mainself: ident,)*","highlight_start":1,"highlight_end":46},{"text":"            $(outname = {$($outname:tt)*},)*","highlight_start":1,"highlight_end":45},{"text":"            $(scalar = {$($scalar:tt)*},)*","highlight_start":1,"highlight_end":43},{"text":"            $(description = $_desciption: tt,)*","highlight_start":1,"highlight_end":48},{"text":"            $(additional = {$($other: tt)*},)*","highlight_start":1,"highlight_end":47},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $desc: tt  $($rest:tt)*","highlight_start":1,"highlight_end":39},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                $(lifetimes = [$($lifetime,)*],)*","highlight_start":1,"highlight_end":50},{"text":"                $(name = $name,)*","highlight_start":1,"highlight_end":34},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                $(outname = {$($outname)*},)*","highlight_start":1,"highlight_end":46},{"text":"                $(scalar = {$($scalar)*},)*","highlight_start":1,"highlight_end":44},{"text":"                description = $desc,","highlight_start":1,"highlight_end":37},{"text":"                $(additional = {$($other)*},)*","highlight_start":1,"highlight_end":47},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)*},","highlight_start":1,"highlight_end":32},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = description:  $($rest:tt)*","highlight_start":1,"highlight_end":42},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            @parse_description,","highlight_start":1,"highlight_end":32},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        #[deprecated $(( $(since = $since: tt,)* note = $reason: tt ))* ]","highlight_start":1,"highlight_end":74},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                deprecated = None$(.unwrap_or(Some($reason)))*,","highlight_start":1,"highlight_end":64},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field deprecated $reason:tt $name: ident (","highlight_start":1,"highlight_end":58},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                deprecated = Some($reason),","highlight_start":1,"highlight_end":44},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field $name: ident (","highlight_start":1,"highlight_end":36},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {","highlight_start":1,"highlight_end":30},{"text":"            callback = $callback: ident,","highlight_start":1,"highlight_end":41},{"text":"            header = {$($header:tt)*},","highlight_start":1,"highlight_end":39},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            $($header)*","highlight_start":1,"highlight_end":24},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = $callback,","highlight_start":1,"highlight_end":38},{"text":"                header = {$($header)*},","highlight_start":1,"highlight_end":40},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__juniper_parse_field_list!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":8353,"byte_end":16697,"line_start":316,"line_end":561,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! __juniper_parse_field_list {","highlight_start":1,"highlight_end":42},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest =","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$success_callback!(","highlight_start":1,"highlight_end":36},{"text":"            @generate,","highlight_start":1,"highlight_end":23},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = , $($rest: tt)*","highlight_start":1,"highlight_end":31},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_description,","highlight_start":1,"highlight_end":28},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            $(lifetimes = [$($lifetime:tt,)*],)*","highlight_start":1,"highlight_end":49},{"text":"            $(name = $name:ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(ctx = $ctxt: ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(main_self = $mainself: ident,)*","highlight_start":1,"highlight_end":46},{"text":"            $(outname = {$($outname:tt)*},)*","highlight_start":1,"highlight_end":45},{"text":"            $(scalar = {$($scalar:tt)*},)*","highlight_start":1,"highlight_end":43},{"text":"            $(description = $_desciption: tt,)*","highlight_start":1,"highlight_end":48},{"text":"            $(additional = {$($other: tt)*},)*","highlight_start":1,"highlight_end":47},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $desc: tt  $($rest:tt)*","highlight_start":1,"highlight_end":39},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                $(lifetimes = [$($lifetime,)*],)*","highlight_start":1,"highlight_end":50},{"text":"                $(name = $name,)*","highlight_start":1,"highlight_end":34},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                $(outname = {$($outname)*},)*","highlight_start":1,"highlight_end":46},{"text":"                $(scalar = {$($scalar)*},)*","highlight_start":1,"highlight_end":44},{"text":"                description = $desc,","highlight_start":1,"highlight_end":37},{"text":"                $(additional = {$($other)*},)*","highlight_start":1,"highlight_end":47},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)*},","highlight_start":1,"highlight_end":32},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = description:  $($rest:tt)*","highlight_start":1,"highlight_end":42},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            @parse_description,","highlight_start":1,"highlight_end":32},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        #[deprecated $(( $(since = $since: tt,)* note = $reason: tt ))* ]","highlight_start":1,"highlight_end":74},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                deprecated = None$(.unwrap_or(Some($reason)))*,","highlight_start":1,"highlight_end":64},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field deprecated $reason:tt $name: ident (","highlight_start":1,"highlight_end":58},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                deprecated = Some($reason),","highlight_start":1,"highlight_end":44},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field $name: ident (","highlight_start":1,"highlight_end":36},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {","highlight_start":1,"highlight_end":30},{"text":"            callback = $callback: ident,","highlight_start":1,"highlight_end":41},{"text":"            header = {$($header:tt)*},","highlight_start":1,"highlight_end":39},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            $($header)*","highlight_start":1,"highlight_end":24},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = $callback,","highlight_start":1,"highlight_end":38},{"text":"                header = {$($header)*},","highlight_start":1,"highlight_end":40},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::graphql_object!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":8678,"byte_end":16815,"line_start":314,"line_end":529,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! graphql_object {","highlight_start":1,"highlight_end":30},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @generate,","highlight_start":1,"highlight_end":19},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetimes:tt,)*],","highlight_start":1,"highlight_end":46},{"text":"            name = $name: ty,","highlight_start":1,"highlight_end":30},{"text":"            ctx = $ctx: ty,","highlight_start":1,"highlight_end":28},{"text":"            main_self = $main_self: ident,","highlight_start":1,"highlight_end":43},{"text":"            outname = {$($outname: tt)*},","highlight_start":1,"highlight_end":42},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: expr,)*","highlight_start":1,"highlight_end":49},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($interface:ty,)*],)*","highlight_start":1,"highlight_end":55},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({","highlight_start":1,"highlight_end":21},{"text":"            name = $fn_name: ident,","highlight_start":1,"highlight_end":36},{"text":"            body = $body: block,","highlight_start":1,"highlight_end":33},{"text":"            return_ty = $return_ty: ty,","highlight_start":1,"highlight_end":40},{"text":"            args = [$({","highlight_start":1,"highlight_end":24},{"text":"                arg_name = $arg_name : ident,","highlight_start":1,"highlight_end":46},{"text":"                arg_ty = $arg_ty: ty,","highlight_start":1,"highlight_end":38},{"text":"                $(arg_default = $arg_default: expr,)*","highlight_start":1,"highlight_end":54},{"text":"                $(arg_description = $arg_description: expr,)*","highlight_start":1,"highlight_end":62},{"text":"                $(arg_docstring = $arg_docstring: expr,)*","highlight_start":1,"highlight_end":58},{"text":"            },)*],","highlight_start":1,"highlight_end":19},{"text":"            $(decs = $fn_description: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(docstring = $docstring: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(deprecated = $deprecated: expr,)*","highlight_start":1,"highlight_end":48},{"text":"            $(executor_var = $executor: ident,)*","highlight_start":1,"highlight_end":49},{"text":"        },)*],","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_impl_trait!(","highlight_start":1,"highlight_end":39},{"text":"            impl<$($scalar)* $(, $lifetimes)* > GraphQLType for $name {","highlight_start":1,"highlight_end":72},{"text":"                type Context = $ctx;","highlight_start":1,"highlight_end":37},{"text":"                type TypeInfo = ();","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn name(_ : &Self::TypeInfo) -> Option<&str> {","highlight_start":1,"highlight_end":63},{"text":"                    Some($($outname)*)","highlight_start":1,"highlight_end":39},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn meta<'r>(","highlight_start":1,"highlight_end":29},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    registry: &mut $crate::Registry<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":104},{"text":"                ) -> $crate::meta::MetaType<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":96},{"text":"                where for<'__b> &'__b $crate::__juniper_insert_generic!($($scalar)+): $crate::ScalarRefValue<'__b>,","highlight_start":1,"highlight_end":116},{"text":"                    $crate::__juniper_insert_generic!($($scalar)+): 'r","highlight_start":1,"highlight_end":71},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    let fields = &[$(","highlight_start":1,"highlight_end":38},{"text":"                        registry.field_convert::<$return_ty, _, Self::Context>(","highlight_start":1,"highlight_end":80},{"text":"                            &$crate::to_camel_case(stringify!($fn_name)),","highlight_start":1,"highlight_end":74},{"text":"                            info","highlight_start":1,"highlight_end":33},{"text":"                        )","highlight_start":1,"highlight_end":26},{"text":"                            $(.description($fn_description))*","highlight_start":1,"highlight_end":62},{"text":"                            .push_docstring(&[$($docstring,)*])","highlight_start":1,"highlight_end":64},{"text":"                            $(.deprecated($deprecated))*","highlight_start":1,"highlight_end":57},{"text":"                            $(.argument(","highlight_start":1,"highlight_end":41},{"text":"                                $crate::__juniper_create_arg!(","highlight_start":1,"highlight_end":63},{"text":"                                    registry = registry,","highlight_start":1,"highlight_end":57},{"text":"                                    info = info,","highlight_start":1,"highlight_end":49},{"text":"                                    arg_ty = $arg_ty,","highlight_start":1,"highlight_end":54},{"text":"                                    arg_name = $arg_name,","highlight_start":1,"highlight_end":58},{"text":"                                    $(default = $arg_default,)*","highlight_start":1,"highlight_end":64},{"text":"                                    $(description = $arg_description,)*","highlight_start":1,"highlight_end":72},{"text":"                                    $(docstring = $arg_docstring,)*","highlight_start":1,"highlight_end":68},{"text":"                                )","highlight_start":1,"highlight_end":34},{"text":"                            ))*,","highlight_start":1,"highlight_end":33},{"text":"                    )*];","highlight_start":1,"highlight_end":25},{"text":"                    registry.build_object_type::<$name>(","highlight_start":1,"highlight_end":57},{"text":"                        info, fields","highlight_start":1,"highlight_end":37},{"text":"                    )","highlight_start":1,"highlight_end":22},{"text":"                        $(.description($desciption))*","highlight_start":1,"highlight_end":54},{"text":"                        $($(.interfaces(&[","highlight_start":1,"highlight_end":43},{"text":"                           $(registry.get_type::<$interface>(&()),)*","highlight_start":1,"highlight_end":69},{"text":"                        ]))*)*","highlight_start":1,"highlight_end":31},{"text":"                        .into_meta()","highlight_start":1,"highlight_end":37},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn concrete_type_name(&self, _: &Self::Context, _: &Self::TypeInfo) -> String {","highlight_start":1,"highlight_end":96},{"text":"                    $($outname)*.to_owned()","highlight_start":1,"highlight_end":44},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[allow(unused_variables)]","highlight_start":1,"highlight_end":43},{"text":"                fn resolve_field(","highlight_start":1,"highlight_end":34},{"text":"                    &$main_self,","highlight_start":1,"highlight_end":33},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    field: &str,","highlight_start":1,"highlight_end":33},{"text":"                    args: &$crate::Arguments<$crate::__juniper_insert_generic!($($scalar)+)>,","highlight_start":1,"highlight_end":94},{"text":"                    executor: &$crate::Executor<Self::Context, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":111},{"text":"                ) -> $crate::ExecutionResult<$crate::__juniper_insert_generic!($($scalar)+)> {","highlight_start":1,"highlight_end":95},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        if field == &$crate::to_camel_case(stringify!($fn_name)) {","highlight_start":1,"highlight_end":83},{"text":"                            let result: $return_ty = (|| {","highlight_start":1,"highlight_end":59},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $arg_name: $arg_ty = args.get(&$crate::to_camel_case(stringify!($arg_name)))","highlight_start":1,"highlight_end":117},{"text":"                                        .expect(concat!(","highlight_start":1,"highlight_end":57},{"text":"                                            \"Argument \",","highlight_start":1,"highlight_end":57},{"text":"                                            stringify!($arg_name),","highlight_start":1,"highlight_end":67},{"text":"                                            \" missing - validation must have failed\"","highlight_start":1,"highlight_end":85},{"text":"                                        ));","highlight_start":1,"highlight_end":44},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $executor = &executor;","highlight_start":1,"highlight_end":63},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $body","highlight_start":1,"highlight_end":38},{"text":"                            })();","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                            return $crate::IntoResolvable::into(result, executor.context())","highlight_start":1,"highlight_end":92},{"text":"                                .and_then(|res| {","highlight_start":1,"highlight_end":50},{"text":"                                    match res {","highlight_start":1,"highlight_end":48},{"text":"                                        Some((ctx, r)) => {","highlight_start":1,"highlight_end":60},{"text":"                                            executor.replaced_context(ctx)","highlight_start":1,"highlight_end":75},{"text":"                                                .resolve_with_ctx(&(), &r)","highlight_start":1,"highlight_end":75},{"text":"                                        }","highlight_start":1,"highlight_end":42},{"text":"                                        None => Ok($crate::Value::null())","highlight_start":1,"highlight_end":74},{"text":"                                    }","highlight_start":1,"highlight_end":38},{"text":"                                });","highlight_start":1,"highlight_end":36},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    panic!(\"Field {} not found on type {}\", field, $($outname)*);","highlight_start":1,"highlight_end":82},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetime:tt,)*],","highlight_start":1,"highlight_end":45},{"text":"            name = $name:ty,","highlight_start":1,"highlight_end":29},{"text":"            ctx = $ctxt: ty,","highlight_start":1,"highlight_end":29},{"text":"            main_self = $mainself: ident,","highlight_start":1,"highlight_end":42},{"text":"            outname = {$($outname:tt)*},","highlight_start":1,"highlight_end":41},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: tt,)*","highlight_start":1,"highlight_end":47},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($_interface:ty,)*],)*","highlight_start":1,"highlight_end":56},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = [$($interface: ty),+]  $($rest:tt)*","highlight_start":1,"highlight_end":51},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                ctx = $ctxt,","highlight_start":1,"highlight_end":29},{"text":"                main_self = $mainself,","highlight_start":1,"highlight_end":39},{"text":"                outname = {$($outname)*},","highlight_start":1,"highlight_end":42},{"text":"                scalar = {$($scalar)*},","highlight_start":1,"highlight_end":40},{"text":"                $(description = $desciption,)*","highlight_start":1,"highlight_end":47},{"text":"                additional = {","highlight_start":1,"highlight_end":31},{"text":"                        interfaces = [$($interface,)*],","highlight_start":1,"highlight_end":56},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)* },","highlight_start":1,"highlight_end":33},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = interfaces: $($rest:tt)*","highlight_start":1,"highlight_end":40},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::graphql_object!(","highlight_start":1,"highlight_end":33},{"text":"            @parse_interfaces,","highlight_start":1,"highlight_end":31},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = { $($meta)* },","highlight_start":1,"highlight_end":34},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse,","highlight_start":1,"highlight_end":16},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = graphql_object,","highlight_start":1,"highlight_end":47},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = graphql_object,","highlight_start":1,"highlight_end":43},{"text":"                header = {@parse_interfaces,},","highlight_start":1,"highlight_end":47},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [],","highlight_start":1,"highlight_end":24},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@$($stuff:tt)*) => {","highlight_start":1,"highlight_end":26},{"text":"        compile_error!(\"Invalid syntax for `graphql_object!`\");","highlight_start":1,"highlight_end":64},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $($rest:tt)*","highlight_start":1,"highlight_end":21},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_object_header!(","highlight_start":1,"highlight_end":48},{"text":"            callback = graphql_object,","highlight_start":1,"highlight_end":39},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following implementations were found:\n  <Result<(&'a <T as GraphQLType<S>>::Context, T), FieldError<S>> as IntoResolvable<'a, S, T, C>>\n  <Result<T, E> as IntoResolvable<'a, S, T, C>>\n  <Result<std::option::Option<(&'a <T as GraphQLType<S>>::Context, T)>, FieldError<S>> as IntoResolvable<'a, S, std::option::Option<T>, C>>","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Result<Vec<u8>, FieldError>: IntoResolvable<'_, _, _, _>` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/schema.rs:20:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mgraphql_object!(UartRX: Context as \"UartRX\" |&self| {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    description: \"Read from UART\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    field uart_rx() -> FieldResult<Vec<u8>> as \"Reading of subsystem uart\" {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Ok(self.uart_rx())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m});\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|__^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `IntoResolvable<'_, _, _, _>` is not implemented for `Result<Vec<u8>, FieldError>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following implementations were found:\u001b[0m\n\u001b[0m             <Result<(&'a <T as GraphQLType<S>>::Context, T), FieldError<S>> as IntoResolvable<'a, S, T, C>>\u001b[0m\n\u001b[0m             <Result<T, E> as IntoResolvable<'a, S, T, C>>\u001b[0m\n\u001b[0m             <Result<std::option::Option<(&'a <T as GraphQLType<S>>::Context, T)>, FieldError<S>> as IntoResolvable<'a, S, std::option::Option<T>, C>>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::graphql_object` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Result<TxSuccess, FieldError>: IntoResolvable<'_, DefaultScalarValue, _, kubos_service::Context<Subsystem>>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":10639,"byte_end":10652,"line_start":363,"line_end":363,"column_start":34,"column_end":47,"is_primary":true,"text":[{"text":"                        registry.field_convert::<$return_ty, _, Self::Context>(","highlight_start":34,"highlight_end":47}],"label":"the trait `IntoResolvable<'_, DefaultScalarValue, _, kubos_service::Context<Subsystem>>` is not implemented for `Result<TxSuccess, FieldError>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":8610,"byte_end":8743,"line_start":324,"line_end":328,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::$success_callback!(","highlight_start":9,"highlight_end":36},{"text":"            @generate,","highlight_start":1,"highlight_end":23},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":15306,"byte_end":16046,"line_start":515,"line_end":535,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":9,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":16217,"byte_end":16534,"line_start":504,"line_end":513,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":9,"highlight_end":45},{"text":"            success_callback = graphql_object,","highlight_start":1,"highlight_end":47},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = graphql_object,","highlight_start":1,"highlight_end":43},{"text":"                header = {@parse_interfaces,},","highlight_start":1,"highlight_end":47},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [],","highlight_start":1,"highlight_end":24},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":4424,"byte_end":4764,"line_start":168,"line_end":179,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::$callback!(","highlight_start":9,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":16688,"byte_end":16805,"line_start":523,"line_end":526,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__juniper_parse_object_header!(","highlight_start":9,"highlight_end":48},{"text":"            callback = graphql_object,","highlight_start":1,"highlight_end":39},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/schema.rs","byte_start":1218,"byte_end":1547,"line_start":52,"line_end":62,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"graphql_object!(MutationRoot : Context as \"Mutation\" |&self| {","highlight_start":1,"highlight_end":63},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // Each field represents functionality available","highlight_start":1,"highlight_end":53},{"text":"    // through the GraphQL mutations","highlight_start":1,"highlight_end":37},{"text":"    field uart_tx(&executor, data : String) -> FieldResult<TxSuccess>","highlight_start":1,"highlight_end":70},{"text":"        as \"Transmit UART data\"","highlight_start":1,"highlight_end":32},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"        Ok(executor.context().subsystem().uart_tx(data)?)","highlight_start":1,"highlight_end":58},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"});","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"graphql_object!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":8678,"byte_end":16815,"line_start":314,"line_end":529,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! graphql_object {","highlight_start":1,"highlight_end":30},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @generate,","highlight_start":1,"highlight_end":19},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetimes:tt,)*],","highlight_start":1,"highlight_end":46},{"text":"            name = $name: ty,","highlight_start":1,"highlight_end":30},{"text":"            ctx = $ctx: ty,","highlight_start":1,"highlight_end":28},{"text":"            main_self = $main_self: ident,","highlight_start":1,"highlight_end":43},{"text":"            outname = {$($outname: tt)*},","highlight_start":1,"highlight_end":42},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: expr,)*","highlight_start":1,"highlight_end":49},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($interface:ty,)*],)*","highlight_start":1,"highlight_end":55},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({","highlight_start":1,"highlight_end":21},{"text":"            name = $fn_name: ident,","highlight_start":1,"highlight_end":36},{"text":"            body = $body: block,","highlight_start":1,"highlight_end":33},{"text":"            return_ty = $return_ty: ty,","highlight_start":1,"highlight_end":40},{"text":"            args = [$({","highlight_start":1,"highlight_end":24},{"text":"                arg_name = $arg_name : ident,","highlight_start":1,"highlight_end":46},{"text":"                arg_ty = $arg_ty: ty,","highlight_start":1,"highlight_end":38},{"text":"                $(arg_default = $arg_default: expr,)*","highlight_start":1,"highlight_end":54},{"text":"                $(arg_description = $arg_description: expr,)*","highlight_start":1,"highlight_end":62},{"text":"                $(arg_docstring = $arg_docstring: expr,)*","highlight_start":1,"highlight_end":58},{"text":"            },)*],","highlight_start":1,"highlight_end":19},{"text":"            $(decs = $fn_description: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(docstring = $docstring: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(deprecated = $deprecated: expr,)*","highlight_start":1,"highlight_end":48},{"text":"            $(executor_var = $executor: ident,)*","highlight_start":1,"highlight_end":49},{"text":"        },)*],","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_impl_trait!(","highlight_start":1,"highlight_end":39},{"text":"            impl<$($scalar)* $(, $lifetimes)* > GraphQLType for $name {","highlight_start":1,"highlight_end":72},{"text":"                type Context = $ctx;","highlight_start":1,"highlight_end":37},{"text":"                type TypeInfo = ();","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn name(_ : &Self::TypeInfo) -> Option<&str> {","highlight_start":1,"highlight_end":63},{"text":"                    Some($($outname)*)","highlight_start":1,"highlight_end":39},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn meta<'r>(","highlight_start":1,"highlight_end":29},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    registry: &mut $crate::Registry<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":104},{"text":"                ) -> $crate::meta::MetaType<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":96},{"text":"                where for<'__b> &'__b $crate::__juniper_insert_generic!($($scalar)+): $crate::ScalarRefValue<'__b>,","highlight_start":1,"highlight_end":116},{"text":"                    $crate::__juniper_insert_generic!($($scalar)+): 'r","highlight_start":1,"highlight_end":71},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    let fields = &[$(","highlight_start":1,"highlight_end":38},{"text":"                        registry.field_convert::<$return_ty, _, Self::Context>(","highlight_start":1,"highlight_end":80},{"text":"                            &$crate::to_camel_case(stringify!($fn_name)),","highlight_start":1,"highlight_end":74},{"text":"                            info","highlight_start":1,"highlight_end":33},{"text":"                        )","highlight_start":1,"highlight_end":26},{"text":"                            $(.description($fn_description))*","highlight_start":1,"highlight_end":62},{"text":"                            .push_docstring(&[$($docstring,)*])","highlight_start":1,"highlight_end":64},{"text":"                            $(.deprecated($deprecated))*","highlight_start":1,"highlight_end":57},{"text":"                            $(.argument(","highlight_start":1,"highlight_end":41},{"text":"                                $crate::__juniper_create_arg!(","highlight_start":1,"highlight_end":63},{"text":"                                    registry = registry,","highlight_start":1,"highlight_end":57},{"text":"                                    info = info,","highlight_start":1,"highlight_end":49},{"text":"                                    arg_ty = $arg_ty,","highlight_start":1,"highlight_end":54},{"text":"                                    arg_name = $arg_name,","highlight_start":1,"highlight_end":58},{"text":"                                    $(default = $arg_default,)*","highlight_start":1,"highlight_end":64},{"text":"                                    $(description = $arg_description,)*","highlight_start":1,"highlight_end":72},{"text":"                                    $(docstring = $arg_docstring,)*","highlight_start":1,"highlight_end":68},{"text":"                                )","highlight_start":1,"highlight_end":34},{"text":"                            ))*,","highlight_start":1,"highlight_end":33},{"text":"                    )*];","highlight_start":1,"highlight_end":25},{"text":"                    registry.build_object_type::<$name>(","highlight_start":1,"highlight_end":57},{"text":"                        info, fields","highlight_start":1,"highlight_end":37},{"text":"                    )","highlight_start":1,"highlight_end":22},{"text":"                        $(.description($desciption))*","highlight_start":1,"highlight_end":54},{"text":"                        $($(.interfaces(&[","highlight_start":1,"highlight_end":43},{"text":"                           $(registry.get_type::<$interface>(&()),)*","highlight_start":1,"highlight_end":69},{"text":"                        ]))*)*","highlight_start":1,"highlight_end":31},{"text":"                        .into_meta()","highlight_start":1,"highlight_end":37},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn concrete_type_name(&self, _: &Self::Context, _: &Self::TypeInfo) -> String {","highlight_start":1,"highlight_end":96},{"text":"                    $($outname)*.to_owned()","highlight_start":1,"highlight_end":44},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[allow(unused_variables)]","highlight_start":1,"highlight_end":43},{"text":"                fn resolve_field(","highlight_start":1,"highlight_end":34},{"text":"                    &$main_self,","highlight_start":1,"highlight_end":33},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    field: &str,","highlight_start":1,"highlight_end":33},{"text":"                    args: &$crate::Arguments<$crate::__juniper_insert_generic!($($scalar)+)>,","highlight_start":1,"highlight_end":94},{"text":"                    executor: &$crate::Executor<Self::Context, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":111},{"text":"                ) -> $crate::ExecutionResult<$crate::__juniper_insert_generic!($($scalar)+)> {","highlight_start":1,"highlight_end":95},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        if field == &$crate::to_camel_case(stringify!($fn_name)) {","highlight_start":1,"highlight_end":83},{"text":"                            let result: $return_ty = (|| {","highlight_start":1,"highlight_end":59},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $arg_name: $arg_ty = args.get(&$crate::to_camel_case(stringify!($arg_name)))","highlight_start":1,"highlight_end":117},{"text":"                                        .expect(concat!(","highlight_start":1,"highlight_end":57},{"text":"                                            \"Argument \",","highlight_start":1,"highlight_end":57},{"text":"                                            stringify!($arg_name),","highlight_start":1,"highlight_end":67},{"text":"                                            \" missing - validation must have failed\"","highlight_start":1,"highlight_end":85},{"text":"                                        ));","highlight_start":1,"highlight_end":44},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $executor = &executor;","highlight_start":1,"highlight_end":63},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $body","highlight_start":1,"highlight_end":38},{"text":"                            })();","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                            return $crate::IntoResolvable::into(result, executor.context())","highlight_start":1,"highlight_end":92},{"text":"                                .and_then(|res| {","highlight_start":1,"highlight_end":50},{"text":"                                    match res {","highlight_start":1,"highlight_end":48},{"text":"                                        Some((ctx, r)) => {","highlight_start":1,"highlight_end":60},{"text":"                                            executor.replaced_context(ctx)","highlight_start":1,"highlight_end":75},{"text":"                                                .resolve_with_ctx(&(), &r)","highlight_start":1,"highlight_end":75},{"text":"                                        }","highlight_start":1,"highlight_end":42},{"text":"                                        None => Ok($crate::Value::null())","highlight_start":1,"highlight_end":74},{"text":"                                    }","highlight_start":1,"highlight_end":38},{"text":"                                });","highlight_start":1,"highlight_end":36},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    panic!(\"Field {} not found on type {}\", field, $($outname)*);","highlight_start":1,"highlight_end":82},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetime:tt,)*],","highlight_start":1,"highlight_end":45},{"text":"            name = $name:ty,","highlight_start":1,"highlight_end":29},{"text":"            ctx = $ctxt: ty,","highlight_start":1,"highlight_end":29},{"text":"            main_self = $mainself: ident,","highlight_start":1,"highlight_end":42},{"text":"            outname = {$($outname:tt)*},","highlight_start":1,"highlight_end":41},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: tt,)*","highlight_start":1,"highlight_end":47},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($_interface:ty,)*],)*","highlight_start":1,"highlight_end":56},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = [$($interface: ty),+]  $($rest:tt)*","highlight_start":1,"highlight_end":51},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                ctx = $ctxt,","highlight_start":1,"highlight_end":29},{"text":"                main_self = $mainself,","highlight_start":1,"highlight_end":39},{"text":"                outname = {$($outname)*},","highlight_start":1,"highlight_end":42},{"text":"                scalar = {$($scalar)*},","highlight_start":1,"highlight_end":40},{"text":"                $(description = $desciption,)*","highlight_start":1,"highlight_end":47},{"text":"                additional = {","highlight_start":1,"highlight_end":31},{"text":"                        interfaces = [$($interface,)*],","highlight_start":1,"highlight_end":56},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)* },","highlight_start":1,"highlight_end":33},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = interfaces: $($rest:tt)*","highlight_start":1,"highlight_end":40},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::graphql_object!(","highlight_start":1,"highlight_end":33},{"text":"            @parse_interfaces,","highlight_start":1,"highlight_end":31},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = { $($meta)* },","highlight_start":1,"highlight_end":34},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse,","highlight_start":1,"highlight_end":16},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = graphql_object,","highlight_start":1,"highlight_end":47},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = graphql_object,","highlight_start":1,"highlight_end":43},{"text":"                header = {@parse_interfaces,},","highlight_start":1,"highlight_end":47},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [],","highlight_start":1,"highlight_end":24},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@$($stuff:tt)*) => {","highlight_start":1,"highlight_end":26},{"text":"        compile_error!(\"Invalid syntax for `graphql_object!`\");","highlight_start":1,"highlight_end":64},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $($rest:tt)*","highlight_start":1,"highlight_end":21},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_object_header!(","highlight_start":1,"highlight_end":48},{"text":"            callback = graphql_object,","highlight_start":1,"highlight_end":39},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__juniper_parse_object_header!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":1275,"byte_end":8320,"line_start":56,"line_end":312,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! __juniper_parse_object_header {","highlight_start":1,"highlight_end":45},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback:ident,","highlight_start":1,"highlight_end":36},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)* as $outname: tt","highlight_start":1,"highlight_end":77},{"text":"        where Scalar = <$generic:tt $(: $bound:tt)*> $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":80},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<$generic $(: $bound)*>},","highlight_start":1,"highlight_end":52},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback:ident,","highlight_start":1,"highlight_end":36},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)* as $outname: tt","highlight_start":1,"highlight_end":77},{"text":"        where Scalar = $scalar: ty $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":62},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {$scalar},","highlight_start":1,"highlight_end":36},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)* as $outname: tt $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":104},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* as $outname: tt","highlight_start":1,"highlight_end":57},{"text":"        where Scalar = <$generic:tt $(: $bound:tt)*> $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":80},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<$generic $(:$bound)*>},","highlight_start":1,"highlight_end":51},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* as $outname: tt","highlight_start":1,"highlight_end":57},{"text":"        where Scalar = $scalar: ty $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":62},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {$scalar},","highlight_start":1,"highlight_end":36},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* as $outname: tt $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":84},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)*","highlight_start":1,"highlight_end":61},{"text":"        where Scalar = <$generic:tt $(: $bound:tt)*> $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":80},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {<$generic $(:$bounds)*>},","highlight_start":1,"highlight_end":52},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)*","highlight_start":1,"highlight_end":61},{"text":"        where Scalar = $scalar: ty $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":62},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {$scalar},","highlight_start":1,"highlight_end":36},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)* $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":88},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)*","highlight_start":1,"highlight_end":41},{"text":"        where Scalar = <$generic:tt $(: $bound:tt)*> $(| &$mainself:ident |)*","highlight_start":1,"highlight_end":78},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {<$generic $(: $bound)*>},","highlight_start":1,"highlight_end":52},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* where Scalar = $scalar: ty $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":95},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {$scalar},","highlight_start":1,"highlight_end":36},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":68},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        compile_error!(\"Invalid syntax\");","highlight_start":1,"highlight_end":42},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::graphql_object!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":8678,"byte_end":16815,"line_start":314,"line_end":529,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! graphql_object {","highlight_start":1,"highlight_end":30},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @generate,","highlight_start":1,"highlight_end":19},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetimes:tt,)*],","highlight_start":1,"highlight_end":46},{"text":"            name = $name: ty,","highlight_start":1,"highlight_end":30},{"text":"            ctx = $ctx: ty,","highlight_start":1,"highlight_end":28},{"text":"            main_self = $main_self: ident,","highlight_start":1,"highlight_end":43},{"text":"            outname = {$($outname: tt)*},","highlight_start":1,"highlight_end":42},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: expr,)*","highlight_start":1,"highlight_end":49},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($interface:ty,)*],)*","highlight_start":1,"highlight_end":55},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({","highlight_start":1,"highlight_end":21},{"text":"            name = $fn_name: ident,","highlight_start":1,"highlight_end":36},{"text":"            body = $body: block,","highlight_start":1,"highlight_end":33},{"text":"            return_ty = $return_ty: ty,","highlight_start":1,"highlight_end":40},{"text":"            args = [$({","highlight_start":1,"highlight_end":24},{"text":"                arg_name = $arg_name : ident,","highlight_start":1,"highlight_end":46},{"text":"                arg_ty = $arg_ty: ty,","highlight_start":1,"highlight_end":38},{"text":"                $(arg_default = $arg_default: expr,)*","highlight_start":1,"highlight_end":54},{"text":"                $(arg_description = $arg_description: expr,)*","highlight_start":1,"highlight_end":62},{"text":"                $(arg_docstring = $arg_docstring: expr,)*","highlight_start":1,"highlight_end":58},{"text":"            },)*],","highlight_start":1,"highlight_end":19},{"text":"            $(decs = $fn_description: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(docstring = $docstring: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(deprecated = $deprecated: expr,)*","highlight_start":1,"highlight_end":48},{"text":"            $(executor_var = $executor: ident,)*","highlight_start":1,"highlight_end":49},{"text":"        },)*],","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_impl_trait!(","highlight_start":1,"highlight_end":39},{"text":"            impl<$($scalar)* $(, $lifetimes)* > GraphQLType for $name {","highlight_start":1,"highlight_end":72},{"text":"                type Context = $ctx;","highlight_start":1,"highlight_end":37},{"text":"                type TypeInfo = ();","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn name(_ : &Self::TypeInfo) -> Option<&str> {","highlight_start":1,"highlight_end":63},{"text":"                    Some($($outname)*)","highlight_start":1,"highlight_end":39},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn meta<'r>(","highlight_start":1,"highlight_end":29},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    registry: &mut $crate::Registry<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":104},{"text":"                ) -> $crate::meta::MetaType<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":96},{"text":"                where for<'__b> &'__b $crate::__juniper_insert_generic!($($scalar)+): $crate::ScalarRefValue<'__b>,","highlight_start":1,"highlight_end":116},{"text":"                    $crate::__juniper_insert_generic!($($scalar)+): 'r","highlight_start":1,"highlight_end":71},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    let fields = &[$(","highlight_start":1,"highlight_end":38},{"text":"                        registry.field_convert::<$return_ty, _, Self::Context>(","highlight_start":1,"highlight_end":80},{"text":"                            &$crate::to_camel_case(stringify!($fn_name)),","highlight_start":1,"highlight_end":74},{"text":"                            info","highlight_start":1,"highlight_end":33},{"text":"                        )","highlight_start":1,"highlight_end":26},{"text":"                            $(.description($fn_description))*","highlight_start":1,"highlight_end":62},{"text":"                            .push_docstring(&[$($docstring,)*])","highlight_start":1,"highlight_end":64},{"text":"                            $(.deprecated($deprecated))*","highlight_start":1,"highlight_end":57},{"text":"                            $(.argument(","highlight_start":1,"highlight_end":41},{"text":"                                $crate::__juniper_create_arg!(","highlight_start":1,"highlight_end":63},{"text":"                                    registry = registry,","highlight_start":1,"highlight_end":57},{"text":"                                    info = info,","highlight_start":1,"highlight_end":49},{"text":"                                    arg_ty = $arg_ty,","highlight_start":1,"highlight_end":54},{"text":"                                    arg_name = $arg_name,","highlight_start":1,"highlight_end":58},{"text":"                                    $(default = $arg_default,)*","highlight_start":1,"highlight_end":64},{"text":"                                    $(description = $arg_description,)*","highlight_start":1,"highlight_end":72},{"text":"                                    $(docstring = $arg_docstring,)*","highlight_start":1,"highlight_end":68},{"text":"                                )","highlight_start":1,"highlight_end":34},{"text":"                            ))*,","highlight_start":1,"highlight_end":33},{"text":"                    )*];","highlight_start":1,"highlight_end":25},{"text":"                    registry.build_object_type::<$name>(","highlight_start":1,"highlight_end":57},{"text":"                        info, fields","highlight_start":1,"highlight_end":37},{"text":"                    )","highlight_start":1,"highlight_end":22},{"text":"                        $(.description($desciption))*","highlight_start":1,"highlight_end":54},{"text":"                        $($(.interfaces(&[","highlight_start":1,"highlight_end":43},{"text":"                           $(registry.get_type::<$interface>(&()),)*","highlight_start":1,"highlight_end":69},{"text":"                        ]))*)*","highlight_start":1,"highlight_end":31},{"text":"                        .into_meta()","highlight_start":1,"highlight_end":37},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn concrete_type_name(&self, _: &Self::Context, _: &Self::TypeInfo) -> String {","highlight_start":1,"highlight_end":96},{"text":"                    $($outname)*.to_owned()","highlight_start":1,"highlight_end":44},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[allow(unused_variables)]","highlight_start":1,"highlight_end":43},{"text":"                fn resolve_field(","highlight_start":1,"highlight_end":34},{"text":"                    &$main_self,","highlight_start":1,"highlight_end":33},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    field: &str,","highlight_start":1,"highlight_end":33},{"text":"                    args: &$crate::Arguments<$crate::__juniper_insert_generic!($($scalar)+)>,","highlight_start":1,"highlight_end":94},{"text":"                    executor: &$crate::Executor<Self::Context, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":111},{"text":"                ) -> $crate::ExecutionResult<$crate::__juniper_insert_generic!($($scalar)+)> {","highlight_start":1,"highlight_end":95},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        if field == &$crate::to_camel_case(stringify!($fn_name)) {","highlight_start":1,"highlight_end":83},{"text":"                            let result: $return_ty = (|| {","highlight_start":1,"highlight_end":59},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $arg_name: $arg_ty = args.get(&$crate::to_camel_case(stringify!($arg_name)))","highlight_start":1,"highlight_end":117},{"text":"                                        .expect(concat!(","highlight_start":1,"highlight_end":57},{"text":"                                            \"Argument \",","highlight_start":1,"highlight_end":57},{"text":"                                            stringify!($arg_name),","highlight_start":1,"highlight_end":67},{"text":"                                            \" missing - validation must have failed\"","highlight_start":1,"highlight_end":85},{"text":"                                        ));","highlight_start":1,"highlight_end":44},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $executor = &executor;","highlight_start":1,"highlight_end":63},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $body","highlight_start":1,"highlight_end":38},{"text":"                            })();","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                            return $crate::IntoResolvable::into(result, executor.context())","highlight_start":1,"highlight_end":92},{"text":"                                .and_then(|res| {","highlight_start":1,"highlight_end":50},{"text":"                                    match res {","highlight_start":1,"highlight_end":48},{"text":"                                        Some((ctx, r)) => {","highlight_start":1,"highlight_end":60},{"text":"                                            executor.replaced_context(ctx)","highlight_start":1,"highlight_end":75},{"text":"                                                .resolve_with_ctx(&(), &r)","highlight_start":1,"highlight_end":75},{"text":"                                        }","highlight_start":1,"highlight_end":42},{"text":"                                        None => Ok($crate::Value::null())","highlight_start":1,"highlight_end":74},{"text":"                                    }","highlight_start":1,"highlight_end":38},{"text":"                                });","highlight_start":1,"highlight_end":36},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    panic!(\"Field {} not found on type {}\", field, $($outname)*);","highlight_start":1,"highlight_end":82},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetime:tt,)*],","highlight_start":1,"highlight_end":45},{"text":"            name = $name:ty,","highlight_start":1,"highlight_end":29},{"text":"            ctx = $ctxt: ty,","highlight_start":1,"highlight_end":29},{"text":"            main_self = $mainself: ident,","highlight_start":1,"highlight_end":42},{"text":"            outname = {$($outname:tt)*},","highlight_start":1,"highlight_end":41},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: tt,)*","highlight_start":1,"highlight_end":47},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($_interface:ty,)*],)*","highlight_start":1,"highlight_end":56},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = [$($interface: ty),+]  $($rest:tt)*","highlight_start":1,"highlight_end":51},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                ctx = $ctxt,","highlight_start":1,"highlight_end":29},{"text":"                main_self = $mainself,","highlight_start":1,"highlight_end":39},{"text":"                outname = {$($outname)*},","highlight_start":1,"highlight_end":42},{"text":"                scalar = {$($scalar)*},","highlight_start":1,"highlight_end":40},{"text":"                $(description = $desciption,)*","highlight_start":1,"highlight_end":47},{"text":"                additional = {","highlight_start":1,"highlight_end":31},{"text":"                        interfaces = [$($interface,)*],","highlight_start":1,"highlight_end":56},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)* },","highlight_start":1,"highlight_end":33},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = interfaces: $($rest:tt)*","highlight_start":1,"highlight_end":40},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::graphql_object!(","highlight_start":1,"highlight_end":33},{"text":"            @parse_interfaces,","highlight_start":1,"highlight_end":31},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = { $($meta)* },","highlight_start":1,"highlight_end":34},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse,","highlight_start":1,"highlight_end":16},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = graphql_object,","highlight_start":1,"highlight_end":47},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = graphql_object,","highlight_start":1,"highlight_end":43},{"text":"                header = {@parse_interfaces,},","highlight_start":1,"highlight_end":47},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [],","highlight_start":1,"highlight_end":24},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@$($stuff:tt)*) => {","highlight_start":1,"highlight_end":26},{"text":"        compile_error!(\"Invalid syntax for `graphql_object!`\");","highlight_start":1,"highlight_end":64},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $($rest:tt)*","highlight_start":1,"highlight_end":21},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_object_header!(","highlight_start":1,"highlight_end":48},{"text":"            callback = graphql_object,","highlight_start":1,"highlight_end":39},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__juniper_parse_field_list!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":8353,"byte_end":16697,"line_start":316,"line_end":561,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! __juniper_parse_field_list {","highlight_start":1,"highlight_end":42},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest =","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$success_callback!(","highlight_start":1,"highlight_end":36},{"text":"            @generate,","highlight_start":1,"highlight_end":23},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = , $($rest: tt)*","highlight_start":1,"highlight_end":31},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_description,","highlight_start":1,"highlight_end":28},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            $(lifetimes = [$($lifetime:tt,)*],)*","highlight_start":1,"highlight_end":49},{"text":"            $(name = $name:ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(ctx = $ctxt: ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(main_self = $mainself: ident,)*","highlight_start":1,"highlight_end":46},{"text":"            $(outname = {$($outname:tt)*},)*","highlight_start":1,"highlight_end":45},{"text":"            $(scalar = {$($scalar:tt)*},)*","highlight_start":1,"highlight_end":43},{"text":"            $(description = $_desciption: tt,)*","highlight_start":1,"highlight_end":48},{"text":"            $(additional = {$($other: tt)*},)*","highlight_start":1,"highlight_end":47},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $desc: tt  $($rest:tt)*","highlight_start":1,"highlight_end":39},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                $(lifetimes = [$($lifetime,)*],)*","highlight_start":1,"highlight_end":50},{"text":"                $(name = $name,)*","highlight_start":1,"highlight_end":34},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                $(outname = {$($outname)*},)*","highlight_start":1,"highlight_end":46},{"text":"                $(scalar = {$($scalar)*},)*","highlight_start":1,"highlight_end":44},{"text":"                description = $desc,","highlight_start":1,"highlight_end":37},{"text":"                $(additional = {$($other)*},)*","highlight_start":1,"highlight_end":47},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)*},","highlight_start":1,"highlight_end":32},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = description:  $($rest:tt)*","highlight_start":1,"highlight_end":42},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            @parse_description,","highlight_start":1,"highlight_end":32},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        #[deprecated $(( $(since = $since: tt,)* note = $reason: tt ))* ]","highlight_start":1,"highlight_end":74},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                deprecated = None$(.unwrap_or(Some($reason)))*,","highlight_start":1,"highlight_end":64},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field deprecated $reason:tt $name: ident (","highlight_start":1,"highlight_end":58},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                deprecated = Some($reason),","highlight_start":1,"highlight_end":44},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field $name: ident (","highlight_start":1,"highlight_end":36},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {","highlight_start":1,"highlight_end":30},{"text":"            callback = $callback: ident,","highlight_start":1,"highlight_end":41},{"text":"            header = {$($header:tt)*},","highlight_start":1,"highlight_end":39},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            $($header)*","highlight_start":1,"highlight_end":24},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = $callback,","highlight_start":1,"highlight_end":38},{"text":"                header = {$($header)*},","highlight_start":1,"highlight_end":40},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__juniper_parse_field_list!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":8353,"byte_end":16697,"line_start":316,"line_end":561,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! __juniper_parse_field_list {","highlight_start":1,"highlight_end":42},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest =","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$success_callback!(","highlight_start":1,"highlight_end":36},{"text":"            @generate,","highlight_start":1,"highlight_end":23},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = , $($rest: tt)*","highlight_start":1,"highlight_end":31},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_description,","highlight_start":1,"highlight_end":28},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            $(lifetimes = [$($lifetime:tt,)*],)*","highlight_start":1,"highlight_end":49},{"text":"            $(name = $name:ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(ctx = $ctxt: ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(main_self = $mainself: ident,)*","highlight_start":1,"highlight_end":46},{"text":"            $(outname = {$($outname:tt)*},)*","highlight_start":1,"highlight_end":45},{"text":"            $(scalar = {$($scalar:tt)*},)*","highlight_start":1,"highlight_end":43},{"text":"            $(description = $_desciption: tt,)*","highlight_start":1,"highlight_end":48},{"text":"            $(additional = {$($other: tt)*},)*","highlight_start":1,"highlight_end":47},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $desc: tt  $($rest:tt)*","highlight_start":1,"highlight_end":39},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                $(lifetimes = [$($lifetime,)*],)*","highlight_start":1,"highlight_end":50},{"text":"                $(name = $name,)*","highlight_start":1,"highlight_end":34},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                $(outname = {$($outname)*},)*","highlight_start":1,"highlight_end":46},{"text":"                $(scalar = {$($scalar)*},)*","highlight_start":1,"highlight_end":44},{"text":"                description = $desc,","highlight_start":1,"highlight_end":37},{"text":"                $(additional = {$($other)*},)*","highlight_start":1,"highlight_end":47},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)*},","highlight_start":1,"highlight_end":32},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = description:  $($rest:tt)*","highlight_start":1,"highlight_end":42},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            @parse_description,","highlight_start":1,"highlight_end":32},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        #[deprecated $(( $(since = $since: tt,)* note = $reason: tt ))* ]","highlight_start":1,"highlight_end":74},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                deprecated = None$(.unwrap_or(Some($reason)))*,","highlight_start":1,"highlight_end":64},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field deprecated $reason:tt $name: ident (","highlight_start":1,"highlight_end":58},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                deprecated = Some($reason),","highlight_start":1,"highlight_end":44},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field $name: ident (","highlight_start":1,"highlight_end":36},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {","highlight_start":1,"highlight_end":30},{"text":"            callback = $callback: ident,","highlight_start":1,"highlight_end":41},{"text":"            header = {$($header:tt)*},","highlight_start":1,"highlight_end":39},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            $($header)*","highlight_start":1,"highlight_end":24},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = $callback,","highlight_start":1,"highlight_end":38},{"text":"                header = {$($header)*},","highlight_start":1,"highlight_end":40},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::graphql_object!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":8678,"byte_end":16815,"line_start":314,"line_end":529,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! graphql_object {","highlight_start":1,"highlight_end":30},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @generate,","highlight_start":1,"highlight_end":19},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetimes:tt,)*],","highlight_start":1,"highlight_end":46},{"text":"            name = $name: ty,","highlight_start":1,"highlight_end":30},{"text":"            ctx = $ctx: ty,","highlight_start":1,"highlight_end":28},{"text":"            main_self = $main_self: ident,","highlight_start":1,"highlight_end":43},{"text":"            outname = {$($outname: tt)*},","highlight_start":1,"highlight_end":42},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: expr,)*","highlight_start":1,"highlight_end":49},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($interface:ty,)*],)*","highlight_start":1,"highlight_end":55},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({","highlight_start":1,"highlight_end":21},{"text":"            name = $fn_name: ident,","highlight_start":1,"highlight_end":36},{"text":"            body = $body: block,","highlight_start":1,"highlight_end":33},{"text":"            return_ty = $return_ty: ty,","highlight_start":1,"highlight_end":40},{"text":"            args = [$({","highlight_start":1,"highlight_end":24},{"text":"                arg_name = $arg_name : ident,","highlight_start":1,"highlight_end":46},{"text":"                arg_ty = $arg_ty: ty,","highlight_start":1,"highlight_end":38},{"text":"                $(arg_default = $arg_default: expr,)*","highlight_start":1,"highlight_end":54},{"text":"                $(arg_description = $arg_description: expr,)*","highlight_start":1,"highlight_end":62},{"text":"                $(arg_docstring = $arg_docstring: expr,)*","highlight_start":1,"highlight_end":58},{"text":"            },)*],","highlight_start":1,"highlight_end":19},{"text":"            $(decs = $fn_description: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(docstring = $docstring: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(deprecated = $deprecated: expr,)*","highlight_start":1,"highlight_end":48},{"text":"            $(executor_var = $executor: ident,)*","highlight_start":1,"highlight_end":49},{"text":"        },)*],","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_impl_trait!(","highlight_start":1,"highlight_end":39},{"text":"            impl<$($scalar)* $(, $lifetimes)* > GraphQLType for $name {","highlight_start":1,"highlight_end":72},{"text":"                type Context = $ctx;","highlight_start":1,"highlight_end":37},{"text":"                type TypeInfo = ();","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn name(_ : &Self::TypeInfo) -> Option<&str> {","highlight_start":1,"highlight_end":63},{"text":"                    Some($($outname)*)","highlight_start":1,"highlight_end":39},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn meta<'r>(","highlight_start":1,"highlight_end":29},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    registry: &mut $crate::Registry<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":104},{"text":"                ) -> $crate::meta::MetaType<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":96},{"text":"                where for<'__b> &'__b $crate::__juniper_insert_generic!($($scalar)+): $crate::ScalarRefValue<'__b>,","highlight_start":1,"highlight_end":116},{"text":"                    $crate::__juniper_insert_generic!($($scalar)+): 'r","highlight_start":1,"highlight_end":71},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    let fields = &[$(","highlight_start":1,"highlight_end":38},{"text":"                        registry.field_convert::<$return_ty, _, Self::Context>(","highlight_start":1,"highlight_end":80},{"text":"                            &$crate::to_camel_case(stringify!($fn_name)),","highlight_start":1,"highlight_end":74},{"text":"                            info","highlight_start":1,"highlight_end":33},{"text":"                        )","highlight_start":1,"highlight_end":26},{"text":"                            $(.description($fn_description))*","highlight_start":1,"highlight_end":62},{"text":"                            .push_docstring(&[$($docstring,)*])","highlight_start":1,"highlight_end":64},{"text":"                            $(.deprecated($deprecated))*","highlight_start":1,"highlight_end":57},{"text":"                            $(.argument(","highlight_start":1,"highlight_end":41},{"text":"                                $crate::__juniper_create_arg!(","highlight_start":1,"highlight_end":63},{"text":"                                    registry = registry,","highlight_start":1,"highlight_end":57},{"text":"                                    info = info,","highlight_start":1,"highlight_end":49},{"text":"                                    arg_ty = $arg_ty,","highlight_start":1,"highlight_end":54},{"text":"                                    arg_name = $arg_name,","highlight_start":1,"highlight_end":58},{"text":"                                    $(default = $arg_default,)*","highlight_start":1,"highlight_end":64},{"text":"                                    $(description = $arg_description,)*","highlight_start":1,"highlight_end":72},{"text":"                                    $(docstring = $arg_docstring,)*","highlight_start":1,"highlight_end":68},{"text":"                                )","highlight_start":1,"highlight_end":34},{"text":"                            ))*,","highlight_start":1,"highlight_end":33},{"text":"                    )*];","highlight_start":1,"highlight_end":25},{"text":"                    registry.build_object_type::<$name>(","highlight_start":1,"highlight_end":57},{"text":"                        info, fields","highlight_start":1,"highlight_end":37},{"text":"                    )","highlight_start":1,"highlight_end":22},{"text":"                        $(.description($desciption))*","highlight_start":1,"highlight_end":54},{"text":"                        $($(.interfaces(&[","highlight_start":1,"highlight_end":43},{"text":"                           $(registry.get_type::<$interface>(&()),)*","highlight_start":1,"highlight_end":69},{"text":"                        ]))*)*","highlight_start":1,"highlight_end":31},{"text":"                        .into_meta()","highlight_start":1,"highlight_end":37},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn concrete_type_name(&self, _: &Self::Context, _: &Self::TypeInfo) -> String {","highlight_start":1,"highlight_end":96},{"text":"                    $($outname)*.to_owned()","highlight_start":1,"highlight_end":44},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[allow(unused_variables)]","highlight_start":1,"highlight_end":43},{"text":"                fn resolve_field(","highlight_start":1,"highlight_end":34},{"text":"                    &$main_self,","highlight_start":1,"highlight_end":33},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    field: &str,","highlight_start":1,"highlight_end":33},{"text":"                    args: &$crate::Arguments<$crate::__juniper_insert_generic!($($scalar)+)>,","highlight_start":1,"highlight_end":94},{"text":"                    executor: &$crate::Executor<Self::Context, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":111},{"text":"                ) -> $crate::ExecutionResult<$crate::__juniper_insert_generic!($($scalar)+)> {","highlight_start":1,"highlight_end":95},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        if field == &$crate::to_camel_case(stringify!($fn_name)) {","highlight_start":1,"highlight_end":83},{"text":"                            let result: $return_ty = (|| {","highlight_start":1,"highlight_end":59},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $arg_name: $arg_ty = args.get(&$crate::to_camel_case(stringify!($arg_name)))","highlight_start":1,"highlight_end":117},{"text":"                                        .expect(concat!(","highlight_start":1,"highlight_end":57},{"text":"                                            \"Argument \",","highlight_start":1,"highlight_end":57},{"text":"                                            stringify!($arg_name),","highlight_start":1,"highlight_end":67},{"text":"                                            \" missing - validation must have failed\"","highlight_start":1,"highlight_end":85},{"text":"                                        ));","highlight_start":1,"highlight_end":44},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $executor = &executor;","highlight_start":1,"highlight_end":63},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $body","highlight_start":1,"highlight_end":38},{"text":"                            })();","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                            return $crate::IntoResolvable::into(result, executor.context())","highlight_start":1,"highlight_end":92},{"text":"                                .and_then(|res| {","highlight_start":1,"highlight_end":50},{"text":"                                    match res {","highlight_start":1,"highlight_end":48},{"text":"                                        Some((ctx, r)) => {","highlight_start":1,"highlight_end":60},{"text":"                                            executor.replaced_context(ctx)","highlight_start":1,"highlight_end":75},{"text":"                                                .resolve_with_ctx(&(), &r)","highlight_start":1,"highlight_end":75},{"text":"                                        }","highlight_start":1,"highlight_end":42},{"text":"                                        None => Ok($crate::Value::null())","highlight_start":1,"highlight_end":74},{"text":"                                    }","highlight_start":1,"highlight_end":38},{"text":"                                });","highlight_start":1,"highlight_end":36},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    panic!(\"Field {} not found on type {}\", field, $($outname)*);","highlight_start":1,"highlight_end":82},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetime:tt,)*],","highlight_start":1,"highlight_end":45},{"text":"            name = $name:ty,","highlight_start":1,"highlight_end":29},{"text":"            ctx = $ctxt: ty,","highlight_start":1,"highlight_end":29},{"text":"            main_self = $mainself: ident,","highlight_start":1,"highlight_end":42},{"text":"            outname = {$($outname:tt)*},","highlight_start":1,"highlight_end":41},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: tt,)*","highlight_start":1,"highlight_end":47},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($_interface:ty,)*],)*","highlight_start":1,"highlight_end":56},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = [$($interface: ty),+]  $($rest:tt)*","highlight_start":1,"highlight_end":51},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                ctx = $ctxt,","highlight_start":1,"highlight_end":29},{"text":"                main_self = $mainself,","highlight_start":1,"highlight_end":39},{"text":"                outname = {$($outname)*},","highlight_start":1,"highlight_end":42},{"text":"                scalar = {$($scalar)*},","highlight_start":1,"highlight_end":40},{"text":"                $(description = $desciption,)*","highlight_start":1,"highlight_end":47},{"text":"                additional = {","highlight_start":1,"highlight_end":31},{"text":"                        interfaces = [$($interface,)*],","highlight_start":1,"highlight_end":56},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)* },","highlight_start":1,"highlight_end":33},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = interfaces: $($rest:tt)*","highlight_start":1,"highlight_end":40},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::graphql_object!(","highlight_start":1,"highlight_end":33},{"text":"            @parse_interfaces,","highlight_start":1,"highlight_end":31},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = { $($meta)* },","highlight_start":1,"highlight_end":34},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse,","highlight_start":1,"highlight_end":16},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = graphql_object,","highlight_start":1,"highlight_end":47},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = graphql_object,","highlight_start":1,"highlight_end":43},{"text":"                header = {@parse_interfaces,},","highlight_start":1,"highlight_end":47},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [],","highlight_start":1,"highlight_end":24},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@$($stuff:tt)*) => {","highlight_start":1,"highlight_end":26},{"text":"        compile_error!(\"Invalid syntax for `graphql_object!`\");","highlight_start":1,"highlight_end":64},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $($rest:tt)*","highlight_start":1,"highlight_end":21},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_object_header!(","highlight_start":1,"highlight_end":48},{"text":"            callback = graphql_object,","highlight_start":1,"highlight_end":39},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following implementations were found:\n  <Result<(&'a <T as GraphQLType<S>>::Context, T), FieldError<S>> as IntoResolvable<'a, S, T, C>>\n  <Result<T, E> as IntoResolvable<'a, S, T, C>>\n  <Result<std::option::Option<(&'a <T as GraphQLType<S>>::Context, T)>, FieldError<S>> as IntoResolvable<'a, S, std::option::Option<T>, C>>","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `Registry::<'r, S>::field_convert`","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/executor/mod.rs","byte_start":22294,"byte_end":22321,"line_start":737,"line_end":737,"column_start":33,"column_end":60,"is_primary":true,"text":[{"text":"    pub fn field_convert<'a, T: IntoResolvable<'a, S, I, C>, I, C>(","highlight_start":33,"highlight_end":60}],"label":"required by this bound in `Registry::<'r, S>::field_convert`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Result<TxSuccess, FieldError>: IntoResolvable<'_, DefaultScalarValue, _, kubos_service::Context<Subsystem>>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/schema.rs:52:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mgraphql_object!(MutationRoot : Context as \"Mutation\" |&self| {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // Each field represents functionality available\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // through the GraphQL mutations\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m});\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|__^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `IntoResolvable<'_, DefaultScalarValue, _, kubos_service::Context<Subsystem>>` is not implemented for `Result<TxSuccess, FieldError>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following implementations were found:\u001b[0m\n\u001b[0m              <Result<(&'a <T as GraphQLType<S>>::Context, T), FieldError<S>> as IntoResolvable<'a, S, T, C>>\u001b[0m\n\u001b[0m              <Result<T, E> as IntoResolvable<'a, S, T, C>>\u001b[0m\n\u001b[0m              <Result<std::option::Option<(&'a <T as GraphQLType<S>>::Context, T)>, FieldError<S>> as IntoResolvable<'a, S, std::option::Option<T>, C>>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `Registry::<'r, S>::field_convert`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/executor/mod.rs:737:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m737\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn field_convert<'a, T: IntoResolvable<'a, S, I, C>, I, C>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Registry::<'r, S>::field_convert`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::graphql_object` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Result<TxSuccess, FieldError>: IntoResolvable<'_, _, _, _>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":13537,"byte_end":13565,"line_start":421,"line_end":421,"column_start":36,"column_end":64,"is_primary":true,"text":[{"text":"                            return $crate::IntoResolvable::into(result, executor.context())","highlight_start":36,"highlight_end":64}],"label":"the trait `IntoResolvable<'_, _, _, _>` is not implemented for `Result<TxSuccess, FieldError>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":8610,"byte_end":8743,"line_start":324,"line_end":328,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::$success_callback!(","highlight_start":9,"highlight_end":36},{"text":"            @generate,","highlight_start":1,"highlight_end":23},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":15306,"byte_end":16046,"line_start":515,"line_end":535,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":9,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":16217,"byte_end":16534,"line_start":504,"line_end":513,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":9,"highlight_end":45},{"text":"            success_callback = graphql_object,","highlight_start":1,"highlight_end":47},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = graphql_object,","highlight_start":1,"highlight_end":43},{"text":"                header = {@parse_interfaces,},","highlight_start":1,"highlight_end":47},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [],","highlight_start":1,"highlight_end":24},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":4424,"byte_end":4764,"line_start":168,"line_end":179,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::$callback!(","highlight_start":9,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":16688,"byte_end":16805,"line_start":523,"line_end":526,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__juniper_parse_object_header!(","highlight_start":9,"highlight_end":48},{"text":"            callback = graphql_object,","highlight_start":1,"highlight_end":39},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/schema.rs","byte_start":1218,"byte_end":1547,"line_start":52,"line_end":62,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"graphql_object!(MutationRoot : Context as \"Mutation\" |&self| {","highlight_start":1,"highlight_end":63},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // Each field represents functionality available","highlight_start":1,"highlight_end":53},{"text":"    // through the GraphQL mutations","highlight_start":1,"highlight_end":37},{"text":"    field uart_tx(&executor, data : String) -> FieldResult<TxSuccess>","highlight_start":1,"highlight_end":70},{"text":"        as \"Transmit UART data\"","highlight_start":1,"highlight_end":32},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"        Ok(executor.context().subsystem().uart_tx(data)?)","highlight_start":1,"highlight_end":58},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"});","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"graphql_object!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":8678,"byte_end":16815,"line_start":314,"line_end":529,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! graphql_object {","highlight_start":1,"highlight_end":30},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @generate,","highlight_start":1,"highlight_end":19},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetimes:tt,)*],","highlight_start":1,"highlight_end":46},{"text":"            name = $name: ty,","highlight_start":1,"highlight_end":30},{"text":"            ctx = $ctx: ty,","highlight_start":1,"highlight_end":28},{"text":"            main_self = $main_self: ident,","highlight_start":1,"highlight_end":43},{"text":"            outname = {$($outname: tt)*},","highlight_start":1,"highlight_end":42},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: expr,)*","highlight_start":1,"highlight_end":49},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($interface:ty,)*],)*","highlight_start":1,"highlight_end":55},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({","highlight_start":1,"highlight_end":21},{"text":"            name = $fn_name: ident,","highlight_start":1,"highlight_end":36},{"text":"            body = $body: block,","highlight_start":1,"highlight_end":33},{"text":"            return_ty = $return_ty: ty,","highlight_start":1,"highlight_end":40},{"text":"            args = [$({","highlight_start":1,"highlight_end":24},{"text":"                arg_name = $arg_name : ident,","highlight_start":1,"highlight_end":46},{"text":"                arg_ty = $arg_ty: ty,","highlight_start":1,"highlight_end":38},{"text":"                $(arg_default = $arg_default: expr,)*","highlight_start":1,"highlight_end":54},{"text":"                $(arg_description = $arg_description: expr,)*","highlight_start":1,"highlight_end":62},{"text":"                $(arg_docstring = $arg_docstring: expr,)*","highlight_start":1,"highlight_end":58},{"text":"            },)*],","highlight_start":1,"highlight_end":19},{"text":"            $(decs = $fn_description: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(docstring = $docstring: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(deprecated = $deprecated: expr,)*","highlight_start":1,"highlight_end":48},{"text":"            $(executor_var = $executor: ident,)*","highlight_start":1,"highlight_end":49},{"text":"        },)*],","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_impl_trait!(","highlight_start":1,"highlight_end":39},{"text":"            impl<$($scalar)* $(, $lifetimes)* > GraphQLType for $name {","highlight_start":1,"highlight_end":72},{"text":"                type Context = $ctx;","highlight_start":1,"highlight_end":37},{"text":"                type TypeInfo = ();","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn name(_ : &Self::TypeInfo) -> Option<&str> {","highlight_start":1,"highlight_end":63},{"text":"                    Some($($outname)*)","highlight_start":1,"highlight_end":39},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn meta<'r>(","highlight_start":1,"highlight_end":29},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    registry: &mut $crate::Registry<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":104},{"text":"                ) -> $crate::meta::MetaType<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":96},{"text":"                where for<'__b> &'__b $crate::__juniper_insert_generic!($($scalar)+): $crate::ScalarRefValue<'__b>,","highlight_start":1,"highlight_end":116},{"text":"                    $crate::__juniper_insert_generic!($($scalar)+): 'r","highlight_start":1,"highlight_end":71},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    let fields = &[$(","highlight_start":1,"highlight_end":38},{"text":"                        registry.field_convert::<$return_ty, _, Self::Context>(","highlight_start":1,"highlight_end":80},{"text":"                            &$crate::to_camel_case(stringify!($fn_name)),","highlight_start":1,"highlight_end":74},{"text":"                            info","highlight_start":1,"highlight_end":33},{"text":"                        )","highlight_start":1,"highlight_end":26},{"text":"                            $(.description($fn_description))*","highlight_start":1,"highlight_end":62},{"text":"                            .push_docstring(&[$($docstring,)*])","highlight_start":1,"highlight_end":64},{"text":"                            $(.deprecated($deprecated))*","highlight_start":1,"highlight_end":57},{"text":"                            $(.argument(","highlight_start":1,"highlight_end":41},{"text":"                                $crate::__juniper_create_arg!(","highlight_start":1,"highlight_end":63},{"text":"                                    registry = registry,","highlight_start":1,"highlight_end":57},{"text":"                                    info = info,","highlight_start":1,"highlight_end":49},{"text":"                                    arg_ty = $arg_ty,","highlight_start":1,"highlight_end":54},{"text":"                                    arg_name = $arg_name,","highlight_start":1,"highlight_end":58},{"text":"                                    $(default = $arg_default,)*","highlight_start":1,"highlight_end":64},{"text":"                                    $(description = $arg_description,)*","highlight_start":1,"highlight_end":72},{"text":"                                    $(docstring = $arg_docstring,)*","highlight_start":1,"highlight_end":68},{"text":"                                )","highlight_start":1,"highlight_end":34},{"text":"                            ))*,","highlight_start":1,"highlight_end":33},{"text":"                    )*];","highlight_start":1,"highlight_end":25},{"text":"                    registry.build_object_type::<$name>(","highlight_start":1,"highlight_end":57},{"text":"                        info, fields","highlight_start":1,"highlight_end":37},{"text":"                    )","highlight_start":1,"highlight_end":22},{"text":"                        $(.description($desciption))*","highlight_start":1,"highlight_end":54},{"text":"                        $($(.interfaces(&[","highlight_start":1,"highlight_end":43},{"text":"                           $(registry.get_type::<$interface>(&()),)*","highlight_start":1,"highlight_end":69},{"text":"                        ]))*)*","highlight_start":1,"highlight_end":31},{"text":"                        .into_meta()","highlight_start":1,"highlight_end":37},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn concrete_type_name(&self, _: &Self::Context, _: &Self::TypeInfo) -> String {","highlight_start":1,"highlight_end":96},{"text":"                    $($outname)*.to_owned()","highlight_start":1,"highlight_end":44},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[allow(unused_variables)]","highlight_start":1,"highlight_end":43},{"text":"                fn resolve_field(","highlight_start":1,"highlight_end":34},{"text":"                    &$main_self,","highlight_start":1,"highlight_end":33},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    field: &str,","highlight_start":1,"highlight_end":33},{"text":"                    args: &$crate::Arguments<$crate::__juniper_insert_generic!($($scalar)+)>,","highlight_start":1,"highlight_end":94},{"text":"                    executor: &$crate::Executor<Self::Context, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":111},{"text":"                ) -> $crate::ExecutionResult<$crate::__juniper_insert_generic!($($scalar)+)> {","highlight_start":1,"highlight_end":95},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        if field == &$crate::to_camel_case(stringify!($fn_name)) {","highlight_start":1,"highlight_end":83},{"text":"                            let result: $return_ty = (|| {","highlight_start":1,"highlight_end":59},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $arg_name: $arg_ty = args.get(&$crate::to_camel_case(stringify!($arg_name)))","highlight_start":1,"highlight_end":117},{"text":"                                        .expect(concat!(","highlight_start":1,"highlight_end":57},{"text":"                                            \"Argument \",","highlight_start":1,"highlight_end":57},{"text":"                                            stringify!($arg_name),","highlight_start":1,"highlight_end":67},{"text":"                                            \" missing - validation must have failed\"","highlight_start":1,"highlight_end":85},{"text":"                                        ));","highlight_start":1,"highlight_end":44},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $executor = &executor;","highlight_start":1,"highlight_end":63},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $body","highlight_start":1,"highlight_end":38},{"text":"                            })();","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                            return $crate::IntoResolvable::into(result, executor.context())","highlight_start":1,"highlight_end":92},{"text":"                                .and_then(|res| {","highlight_start":1,"highlight_end":50},{"text":"                                    match res {","highlight_start":1,"highlight_end":48},{"text":"                                        Some((ctx, r)) => {","highlight_start":1,"highlight_end":60},{"text":"                                            executor.replaced_context(ctx)","highlight_start":1,"highlight_end":75},{"text":"                                                .resolve_with_ctx(&(), &r)","highlight_start":1,"highlight_end":75},{"text":"                                        }","highlight_start":1,"highlight_end":42},{"text":"                                        None => Ok($crate::Value::null())","highlight_start":1,"highlight_end":74},{"text":"                                    }","highlight_start":1,"highlight_end":38},{"text":"                                });","highlight_start":1,"highlight_end":36},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    panic!(\"Field {} not found on type {}\", field, $($outname)*);","highlight_start":1,"highlight_end":82},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetime:tt,)*],","highlight_start":1,"highlight_end":45},{"text":"            name = $name:ty,","highlight_start":1,"highlight_end":29},{"text":"            ctx = $ctxt: ty,","highlight_start":1,"highlight_end":29},{"text":"            main_self = $mainself: ident,","highlight_start":1,"highlight_end":42},{"text":"            outname = {$($outname:tt)*},","highlight_start":1,"highlight_end":41},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: tt,)*","highlight_start":1,"highlight_end":47},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($_interface:ty,)*],)*","highlight_start":1,"highlight_end":56},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = [$($interface: ty),+]  $($rest:tt)*","highlight_start":1,"highlight_end":51},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                ctx = $ctxt,","highlight_start":1,"highlight_end":29},{"text":"                main_self = $mainself,","highlight_start":1,"highlight_end":39},{"text":"                outname = {$($outname)*},","highlight_start":1,"highlight_end":42},{"text":"                scalar = {$($scalar)*},","highlight_start":1,"highlight_end":40},{"text":"                $(description = $desciption,)*","highlight_start":1,"highlight_end":47},{"text":"                additional = {","highlight_start":1,"highlight_end":31},{"text":"                        interfaces = [$($interface,)*],","highlight_start":1,"highlight_end":56},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)* },","highlight_start":1,"highlight_end":33},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = interfaces: $($rest:tt)*","highlight_start":1,"highlight_end":40},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::graphql_object!(","highlight_start":1,"highlight_end":33},{"text":"            @parse_interfaces,","highlight_start":1,"highlight_end":31},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = { $($meta)* },","highlight_start":1,"highlight_end":34},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse,","highlight_start":1,"highlight_end":16},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = graphql_object,","highlight_start":1,"highlight_end":47},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = graphql_object,","highlight_start":1,"highlight_end":43},{"text":"                header = {@parse_interfaces,},","highlight_start":1,"highlight_end":47},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [],","highlight_start":1,"highlight_end":24},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@$($stuff:tt)*) => {","highlight_start":1,"highlight_end":26},{"text":"        compile_error!(\"Invalid syntax for `graphql_object!`\");","highlight_start":1,"highlight_end":64},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $($rest:tt)*","highlight_start":1,"highlight_end":21},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_object_header!(","highlight_start":1,"highlight_end":48},{"text":"            callback = graphql_object,","highlight_start":1,"highlight_end":39},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__juniper_parse_object_header!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":1275,"byte_end":8320,"line_start":56,"line_end":312,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! __juniper_parse_object_header {","highlight_start":1,"highlight_end":45},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback:ident,","highlight_start":1,"highlight_end":36},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)* as $outname: tt","highlight_start":1,"highlight_end":77},{"text":"        where Scalar = <$generic:tt $(: $bound:tt)*> $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":80},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<$generic $(: $bound)*>},","highlight_start":1,"highlight_end":52},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback:ident,","highlight_start":1,"highlight_end":36},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)* as $outname: tt","highlight_start":1,"highlight_end":77},{"text":"        where Scalar = $scalar: ty $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":62},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {$scalar},","highlight_start":1,"highlight_end":36},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)* as $outname: tt $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":104},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* as $outname: tt","highlight_start":1,"highlight_end":57},{"text":"        where Scalar = <$generic:tt $(: $bound:tt)*> $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":80},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<$generic $(:$bound)*>},","highlight_start":1,"highlight_end":51},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* as $outname: tt","highlight_start":1,"highlight_end":57},{"text":"        where Scalar = $scalar: ty $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":62},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {$scalar},","highlight_start":1,"highlight_end":36},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* as $outname: tt $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":84},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {$outname},","highlight_start":1,"highlight_end":38},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)*","highlight_start":1,"highlight_end":61},{"text":"        where Scalar = <$generic:tt $(: $bound:tt)*> $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":80},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {<$generic $(:$bounds)*>},","highlight_start":1,"highlight_end":52},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)*","highlight_start":1,"highlight_end":61},{"text":"        where Scalar = $scalar: ty $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":62},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {$scalar},","highlight_start":1,"highlight_end":36},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = <$($lifetime:tt),*> $name: ty $(: $ctxt: ty)* $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":88},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)*","highlight_start":1,"highlight_end":41},{"text":"        where Scalar = <$generic:tt $(: $bound:tt)*> $(| &$mainself:ident |)*","highlight_start":1,"highlight_end":78},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {<$generic $(: $bound)*>},","highlight_start":1,"highlight_end":52},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* where Scalar = $scalar: ty $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":95},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {$scalar},","highlight_start":1,"highlight_end":36},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $name: ty $(: $ctxt: ty)* $(| &$mainself:ident |)* {","highlight_start":1,"highlight_end":68},{"text":"            $($items: tt)*","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            @parse,","highlight_start":1,"highlight_end":20},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [],","highlight_start":1,"highlight_end":32},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                outname = {stringify!($name)},","highlight_start":1,"highlight_end":47},{"text":"                scalar = {<DefaultScalarValue>},","highlight_start":1,"highlight_end":49},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            rest = $($items)*","highlight_start":1,"highlight_end":30},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        callback = $callback: ident,","highlight_start":1,"highlight_end":37},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        compile_error!(\"Invalid syntax\");","highlight_start":1,"highlight_end":42},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::graphql_object!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":8678,"byte_end":16815,"line_start":314,"line_end":529,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! graphql_object {","highlight_start":1,"highlight_end":30},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @generate,","highlight_start":1,"highlight_end":19},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetimes:tt,)*],","highlight_start":1,"highlight_end":46},{"text":"            name = $name: ty,","highlight_start":1,"highlight_end":30},{"text":"            ctx = $ctx: ty,","highlight_start":1,"highlight_end":28},{"text":"            main_self = $main_self: ident,","highlight_start":1,"highlight_end":43},{"text":"            outname = {$($outname: tt)*},","highlight_start":1,"highlight_end":42},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: expr,)*","highlight_start":1,"highlight_end":49},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($interface:ty,)*],)*","highlight_start":1,"highlight_end":55},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({","highlight_start":1,"highlight_end":21},{"text":"            name = $fn_name: ident,","highlight_start":1,"highlight_end":36},{"text":"            body = $body: block,","highlight_start":1,"highlight_end":33},{"text":"            return_ty = $return_ty: ty,","highlight_start":1,"highlight_end":40},{"text":"            args = [$({","highlight_start":1,"highlight_end":24},{"text":"                arg_name = $arg_name : ident,","highlight_start":1,"highlight_end":46},{"text":"                arg_ty = $arg_ty: ty,","highlight_start":1,"highlight_end":38},{"text":"                $(arg_default = $arg_default: expr,)*","highlight_start":1,"highlight_end":54},{"text":"                $(arg_description = $arg_description: expr,)*","highlight_start":1,"highlight_end":62},{"text":"                $(arg_docstring = $arg_docstring: expr,)*","highlight_start":1,"highlight_end":58},{"text":"            },)*],","highlight_start":1,"highlight_end":19},{"text":"            $(decs = $fn_description: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(docstring = $docstring: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(deprecated = $deprecated: expr,)*","highlight_start":1,"highlight_end":48},{"text":"            $(executor_var = $executor: ident,)*","highlight_start":1,"highlight_end":49},{"text":"        },)*],","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_impl_trait!(","highlight_start":1,"highlight_end":39},{"text":"            impl<$($scalar)* $(, $lifetimes)* > GraphQLType for $name {","highlight_start":1,"highlight_end":72},{"text":"                type Context = $ctx;","highlight_start":1,"highlight_end":37},{"text":"                type TypeInfo = ();","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn name(_ : &Self::TypeInfo) -> Option<&str> {","highlight_start":1,"highlight_end":63},{"text":"                    Some($($outname)*)","highlight_start":1,"highlight_end":39},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn meta<'r>(","highlight_start":1,"highlight_end":29},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    registry: &mut $crate::Registry<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":104},{"text":"                ) -> $crate::meta::MetaType<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":96},{"text":"                where for<'__b> &'__b $crate::__juniper_insert_generic!($($scalar)+): $crate::ScalarRefValue<'__b>,","highlight_start":1,"highlight_end":116},{"text":"                    $crate::__juniper_insert_generic!($($scalar)+): 'r","highlight_start":1,"highlight_end":71},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    let fields = &[$(","highlight_start":1,"highlight_end":38},{"text":"                        registry.field_convert::<$return_ty, _, Self::Context>(","highlight_start":1,"highlight_end":80},{"text":"                            &$crate::to_camel_case(stringify!($fn_name)),","highlight_start":1,"highlight_end":74},{"text":"                            info","highlight_start":1,"highlight_end":33},{"text":"                        )","highlight_start":1,"highlight_end":26},{"text":"                            $(.description($fn_description))*","highlight_start":1,"highlight_end":62},{"text":"                            .push_docstring(&[$($docstring,)*])","highlight_start":1,"highlight_end":64},{"text":"                            $(.deprecated($deprecated))*","highlight_start":1,"highlight_end":57},{"text":"                            $(.argument(","highlight_start":1,"highlight_end":41},{"text":"                                $crate::__juniper_create_arg!(","highlight_start":1,"highlight_end":63},{"text":"                                    registry = registry,","highlight_start":1,"highlight_end":57},{"text":"                                    info = info,","highlight_start":1,"highlight_end":49},{"text":"                                    arg_ty = $arg_ty,","highlight_start":1,"highlight_end":54},{"text":"                                    arg_name = $arg_name,","highlight_start":1,"highlight_end":58},{"text":"                                    $(default = $arg_default,)*","highlight_start":1,"highlight_end":64},{"text":"                                    $(description = $arg_description,)*","highlight_start":1,"highlight_end":72},{"text":"                                    $(docstring = $arg_docstring,)*","highlight_start":1,"highlight_end":68},{"text":"                                )","highlight_start":1,"highlight_end":34},{"text":"                            ))*,","highlight_start":1,"highlight_end":33},{"text":"                    )*];","highlight_start":1,"highlight_end":25},{"text":"                    registry.build_object_type::<$name>(","highlight_start":1,"highlight_end":57},{"text":"                        info, fields","highlight_start":1,"highlight_end":37},{"text":"                    )","highlight_start":1,"highlight_end":22},{"text":"                        $(.description($desciption))*","highlight_start":1,"highlight_end":54},{"text":"                        $($(.interfaces(&[","highlight_start":1,"highlight_end":43},{"text":"                           $(registry.get_type::<$interface>(&()),)*","highlight_start":1,"highlight_end":69},{"text":"                        ]))*)*","highlight_start":1,"highlight_end":31},{"text":"                        .into_meta()","highlight_start":1,"highlight_end":37},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn concrete_type_name(&self, _: &Self::Context, _: &Self::TypeInfo) -> String {","highlight_start":1,"highlight_end":96},{"text":"                    $($outname)*.to_owned()","highlight_start":1,"highlight_end":44},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[allow(unused_variables)]","highlight_start":1,"highlight_end":43},{"text":"                fn resolve_field(","highlight_start":1,"highlight_end":34},{"text":"                    &$main_self,","highlight_start":1,"highlight_end":33},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    field: &str,","highlight_start":1,"highlight_end":33},{"text":"                    args: &$crate::Arguments<$crate::__juniper_insert_generic!($($scalar)+)>,","highlight_start":1,"highlight_end":94},{"text":"                    executor: &$crate::Executor<Self::Context, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":111},{"text":"                ) -> $crate::ExecutionResult<$crate::__juniper_insert_generic!($($scalar)+)> {","highlight_start":1,"highlight_end":95},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        if field == &$crate::to_camel_case(stringify!($fn_name)) {","highlight_start":1,"highlight_end":83},{"text":"                            let result: $return_ty = (|| {","highlight_start":1,"highlight_end":59},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $arg_name: $arg_ty = args.get(&$crate::to_camel_case(stringify!($arg_name)))","highlight_start":1,"highlight_end":117},{"text":"                                        .expect(concat!(","highlight_start":1,"highlight_end":57},{"text":"                                            \"Argument \",","highlight_start":1,"highlight_end":57},{"text":"                                            stringify!($arg_name),","highlight_start":1,"highlight_end":67},{"text":"                                            \" missing - validation must have failed\"","highlight_start":1,"highlight_end":85},{"text":"                                        ));","highlight_start":1,"highlight_end":44},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $executor = &executor;","highlight_start":1,"highlight_end":63},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $body","highlight_start":1,"highlight_end":38},{"text":"                            })();","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                            return $crate::IntoResolvable::into(result, executor.context())","highlight_start":1,"highlight_end":92},{"text":"                                .and_then(|res| {","highlight_start":1,"highlight_end":50},{"text":"                                    match res {","highlight_start":1,"highlight_end":48},{"text":"                                        Some((ctx, r)) => {","highlight_start":1,"highlight_end":60},{"text":"                                            executor.replaced_context(ctx)","highlight_start":1,"highlight_end":75},{"text":"                                                .resolve_with_ctx(&(), &r)","highlight_start":1,"highlight_end":75},{"text":"                                        }","highlight_start":1,"highlight_end":42},{"text":"                                        None => Ok($crate::Value::null())","highlight_start":1,"highlight_end":74},{"text":"                                    }","highlight_start":1,"highlight_end":38},{"text":"                                });","highlight_start":1,"highlight_end":36},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    panic!(\"Field {} not found on type {}\", field, $($outname)*);","highlight_start":1,"highlight_end":82},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetime:tt,)*],","highlight_start":1,"highlight_end":45},{"text":"            name = $name:ty,","highlight_start":1,"highlight_end":29},{"text":"            ctx = $ctxt: ty,","highlight_start":1,"highlight_end":29},{"text":"            main_self = $mainself: ident,","highlight_start":1,"highlight_end":42},{"text":"            outname = {$($outname:tt)*},","highlight_start":1,"highlight_end":41},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: tt,)*","highlight_start":1,"highlight_end":47},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($_interface:ty,)*],)*","highlight_start":1,"highlight_end":56},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = [$($interface: ty),+]  $($rest:tt)*","highlight_start":1,"highlight_end":51},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                ctx = $ctxt,","highlight_start":1,"highlight_end":29},{"text":"                main_self = $mainself,","highlight_start":1,"highlight_end":39},{"text":"                outname = {$($outname)*},","highlight_start":1,"highlight_end":42},{"text":"                scalar = {$($scalar)*},","highlight_start":1,"highlight_end":40},{"text":"                $(description = $desciption,)*","highlight_start":1,"highlight_end":47},{"text":"                additional = {","highlight_start":1,"highlight_end":31},{"text":"                        interfaces = [$($interface,)*],","highlight_start":1,"highlight_end":56},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)* },","highlight_start":1,"highlight_end":33},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = interfaces: $($rest:tt)*","highlight_start":1,"highlight_end":40},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::graphql_object!(","highlight_start":1,"highlight_end":33},{"text":"            @parse_interfaces,","highlight_start":1,"highlight_end":31},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = { $($meta)* },","highlight_start":1,"highlight_end":34},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse,","highlight_start":1,"highlight_end":16},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = graphql_object,","highlight_start":1,"highlight_end":47},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = graphql_object,","highlight_start":1,"highlight_end":43},{"text":"                header = {@parse_interfaces,},","highlight_start":1,"highlight_end":47},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [],","highlight_start":1,"highlight_end":24},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@$($stuff:tt)*) => {","highlight_start":1,"highlight_end":26},{"text":"        compile_error!(\"Invalid syntax for `graphql_object!`\");","highlight_start":1,"highlight_end":64},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $($rest:tt)*","highlight_start":1,"highlight_end":21},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_object_header!(","highlight_start":1,"highlight_end":48},{"text":"            callback = graphql_object,","highlight_start":1,"highlight_end":39},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__juniper_parse_field_list!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":8353,"byte_end":16697,"line_start":316,"line_end":561,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! __juniper_parse_field_list {","highlight_start":1,"highlight_end":42},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest =","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$success_callback!(","highlight_start":1,"highlight_end":36},{"text":"            @generate,","highlight_start":1,"highlight_end":23},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = , $($rest: tt)*","highlight_start":1,"highlight_end":31},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_description,","highlight_start":1,"highlight_end":28},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            $(lifetimes = [$($lifetime:tt,)*],)*","highlight_start":1,"highlight_end":49},{"text":"            $(name = $name:ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(ctx = $ctxt: ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(main_self = $mainself: ident,)*","highlight_start":1,"highlight_end":46},{"text":"            $(outname = {$($outname:tt)*},)*","highlight_start":1,"highlight_end":45},{"text":"            $(scalar = {$($scalar:tt)*},)*","highlight_start":1,"highlight_end":43},{"text":"            $(description = $_desciption: tt,)*","highlight_start":1,"highlight_end":48},{"text":"            $(additional = {$($other: tt)*},)*","highlight_start":1,"highlight_end":47},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $desc: tt  $($rest:tt)*","highlight_start":1,"highlight_end":39},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                $(lifetimes = [$($lifetime,)*],)*","highlight_start":1,"highlight_end":50},{"text":"                $(name = $name,)*","highlight_start":1,"highlight_end":34},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                $(outname = {$($outname)*},)*","highlight_start":1,"highlight_end":46},{"text":"                $(scalar = {$($scalar)*},)*","highlight_start":1,"highlight_end":44},{"text":"                description = $desc,","highlight_start":1,"highlight_end":37},{"text":"                $(additional = {$($other)*},)*","highlight_start":1,"highlight_end":47},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)*},","highlight_start":1,"highlight_end":32},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = description:  $($rest:tt)*","highlight_start":1,"highlight_end":42},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            @parse_description,","highlight_start":1,"highlight_end":32},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        #[deprecated $(( $(since = $since: tt,)* note = $reason: tt ))* ]","highlight_start":1,"highlight_end":74},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                deprecated = None$(.unwrap_or(Some($reason)))*,","highlight_start":1,"highlight_end":64},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field deprecated $reason:tt $name: ident (","highlight_start":1,"highlight_end":58},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                deprecated = Some($reason),","highlight_start":1,"highlight_end":44},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field $name: ident (","highlight_start":1,"highlight_end":36},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {","highlight_start":1,"highlight_end":30},{"text":"            callback = $callback: ident,","highlight_start":1,"highlight_end":41},{"text":"            header = {$($header:tt)*},","highlight_start":1,"highlight_end":39},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            $($header)*","highlight_start":1,"highlight_end":24},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = $callback,","highlight_start":1,"highlight_end":38},{"text":"                header = {$($header)*},","highlight_start":1,"highlight_end":40},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__juniper_parse_field_list!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/common.rs","byte_start":8353,"byte_end":16697,"line_start":316,"line_end":561,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! __juniper_parse_field_list {","highlight_start":1,"highlight_end":42},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest =","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$success_callback!(","highlight_start":1,"highlight_end":36},{"text":"            @generate,","highlight_start":1,"highlight_end":23},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = , $($rest: tt)*","highlight_start":1,"highlight_end":31},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_description,","highlight_start":1,"highlight_end":28},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            $(lifetimes = [$($lifetime:tt,)*],)*","highlight_start":1,"highlight_end":49},{"text":"            $(name = $name:ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(ctx = $ctxt: ty,)*","highlight_start":1,"highlight_end":33},{"text":"            $(main_self = $mainself: ident,)*","highlight_start":1,"highlight_end":46},{"text":"            $(outname = {$($outname:tt)*},)*","highlight_start":1,"highlight_end":45},{"text":"            $(scalar = {$($scalar:tt)*},)*","highlight_start":1,"highlight_end":43},{"text":"            $(description = $_desciption: tt,)*","highlight_start":1,"highlight_end":48},{"text":"            $(additional = {$($other: tt)*},)*","highlight_start":1,"highlight_end":47},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $desc: tt  $($rest:tt)*","highlight_start":1,"highlight_end":39},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                $(lifetimes = [$($lifetime,)*],)*","highlight_start":1,"highlight_end":50},{"text":"                $(name = $name,)*","highlight_start":1,"highlight_end":34},{"text":"                $(ctx = $ctxt,)*","highlight_start":1,"highlight_end":33},{"text":"                $(main_self = $mainself,)*","highlight_start":1,"highlight_end":43},{"text":"                $(outname = {$($outname)*},)*","highlight_start":1,"highlight_end":46},{"text":"                $(scalar = {$($scalar)*},)*","highlight_start":1,"highlight_end":44},{"text":"                description = $desc,","highlight_start":1,"highlight_end":37},{"text":"                $(additional = {$($other)*},)*","highlight_start":1,"highlight_end":47},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)*},","highlight_start":1,"highlight_end":32},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = description:  $($rest:tt)*","highlight_start":1,"highlight_end":42},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            @parse_description,","highlight_start":1,"highlight_end":32},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        #[deprecated $(( $(since = $since: tt,)* note = $reason: tt ))* ]","highlight_start":1,"highlight_end":74},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                deprecated = None$(.unwrap_or(Some($reason)))*,","highlight_start":1,"highlight_end":64},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $(#[doc = $desc: tt])*","highlight_start":1,"highlight_end":38},{"text":"        field $name: ident (","highlight_start":1,"highlight_end":29},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($(#[doc = $arg_desc: expr])* $arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty),* $(,)*","highlight_start":1,"highlight_end":105},{"text":"        ) -> $return_ty: ty $body: block","highlight_start":1,"highlight_end":41},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_docstring = $arg_desc,)*","highlight_start":1,"highlight_end":55},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(docstring = $desc,)*","highlight_start":1,"highlight_end":39},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field deprecated $reason:tt $name: ident (","highlight_start":1,"highlight_end":58},{"text":"            $(&$executor: tt)* $(,)*","highlight_start":1,"highlight_end":37},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                deprecated = Some($reason),","highlight_start":1,"highlight_end":44},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = field $name: ident (","highlight_start":1,"highlight_end":36},{"text":"            $(&$executor: ident)* $(,)*","highlight_start":1,"highlight_end":40},{"text":"            $($arg_name:ident $(= $arg_default: tt)* : $arg_ty: ty $(as $arg_desc: expr)*),* $(,)*","highlight_start":1,"highlight_end":99},{"text":"        ) -> $return_ty: ty $(as $desc: tt)* $body: block","highlight_start":1,"highlight_end":58},{"text":"            $($rest:tt)*","highlight_start":1,"highlight_end":25},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)* {","highlight_start":1,"highlight_end":41},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                body = $body,","highlight_start":1,"highlight_end":30},{"text":"                return_ty = $return_ty,","highlight_start":1,"highlight_end":40},{"text":"                args = [","highlight_start":1,"highlight_end":25},{"text":"                    $({","highlight_start":1,"highlight_end":24},{"text":"                        arg_name = $arg_name,","highlight_start":1,"highlight_end":46},{"text":"                        arg_ty = $arg_ty,","highlight_start":1,"highlight_end":42},{"text":"                        $(arg_default = $arg_default,)*","highlight_start":1,"highlight_end":56},{"text":"                        $(arg_description = $arg_desc,)*","highlight_start":1,"highlight_end":57},{"text":"                    },)*","highlight_start":1,"highlight_end":25},{"text":"                ],","highlight_start":1,"highlight_end":19},{"text":"                $(decs = $desc,)*","highlight_start":1,"highlight_end":34},{"text":"                $(executor_var = $executor,)*","highlight_start":1,"highlight_end":46},{"text":"            },],","highlight_start":1,"highlight_end":17},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {","highlight_start":1,"highlight_end":30},{"text":"            callback = $callback: ident,","highlight_start":1,"highlight_end":41},{"text":"            header = {$($header:tt)*},","highlight_start":1,"highlight_end":39},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::$callback!(","highlight_start":1,"highlight_end":28},{"text":"            $($header)*","highlight_start":1,"highlight_end":24},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = $callback,","highlight_start":1,"highlight_end":38},{"text":"                header = {$($header)*},","highlight_start":1,"highlight_end":40},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::graphql_object!","def_site_span":{"file_name":"/home/dylan/.cargo/registry/src/github.com-1ecc6299db9ec823/juniper-0.11.1/src/macros/object.rs","byte_start":8678,"byte_end":16815,"line_start":314,"line_end":529,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! graphql_object {","highlight_start":1,"highlight_end":30},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @generate,","highlight_start":1,"highlight_end":19},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetimes:tt,)*],","highlight_start":1,"highlight_end":46},{"text":"            name = $name: ty,","highlight_start":1,"highlight_end":30},{"text":"            ctx = $ctx: ty,","highlight_start":1,"highlight_end":28},{"text":"            main_self = $main_self: ident,","highlight_start":1,"highlight_end":43},{"text":"            outname = {$($outname: tt)*},","highlight_start":1,"highlight_end":42},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: expr,)*","highlight_start":1,"highlight_end":49},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($interface:ty,)*],)*","highlight_start":1,"highlight_end":55},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({","highlight_start":1,"highlight_end":21},{"text":"            name = $fn_name: ident,","highlight_start":1,"highlight_end":36},{"text":"            body = $body: block,","highlight_start":1,"highlight_end":33},{"text":"            return_ty = $return_ty: ty,","highlight_start":1,"highlight_end":40},{"text":"            args = [$({","highlight_start":1,"highlight_end":24},{"text":"                arg_name = $arg_name : ident,","highlight_start":1,"highlight_end":46},{"text":"                arg_ty = $arg_ty: ty,","highlight_start":1,"highlight_end":38},{"text":"                $(arg_default = $arg_default: expr,)*","highlight_start":1,"highlight_end":54},{"text":"                $(arg_description = $arg_description: expr,)*","highlight_start":1,"highlight_end":62},{"text":"                $(arg_docstring = $arg_docstring: expr,)*","highlight_start":1,"highlight_end":58},{"text":"            },)*],","highlight_start":1,"highlight_end":19},{"text":"            $(decs = $fn_description: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(docstring = $docstring: expr,)*","highlight_start":1,"highlight_end":46},{"text":"            $(deprecated = $deprecated: expr,)*","highlight_start":1,"highlight_end":48},{"text":"            $(executor_var = $executor: ident,)*","highlight_start":1,"highlight_end":49},{"text":"        },)*],","highlight_start":1,"highlight_end":15},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_impl_trait!(","highlight_start":1,"highlight_end":39},{"text":"            impl<$($scalar)* $(, $lifetimes)* > GraphQLType for $name {","highlight_start":1,"highlight_end":72},{"text":"                type Context = $ctx;","highlight_start":1,"highlight_end":37},{"text":"                type TypeInfo = ();","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn name(_ : &Self::TypeInfo) -> Option<&str> {","highlight_start":1,"highlight_end":63},{"text":"                    Some($($outname)*)","highlight_start":1,"highlight_end":39},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn meta<'r>(","highlight_start":1,"highlight_end":29},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    registry: &mut $crate::Registry<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":104},{"text":"                ) -> $crate::meta::MetaType<'r, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":96},{"text":"                where for<'__b> &'__b $crate::__juniper_insert_generic!($($scalar)+): $crate::ScalarRefValue<'__b>,","highlight_start":1,"highlight_end":116},{"text":"                    $crate::__juniper_insert_generic!($($scalar)+): 'r","highlight_start":1,"highlight_end":71},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    let fields = &[$(","highlight_start":1,"highlight_end":38},{"text":"                        registry.field_convert::<$return_ty, _, Self::Context>(","highlight_start":1,"highlight_end":80},{"text":"                            &$crate::to_camel_case(stringify!($fn_name)),","highlight_start":1,"highlight_end":74},{"text":"                            info","highlight_start":1,"highlight_end":33},{"text":"                        )","highlight_start":1,"highlight_end":26},{"text":"                            $(.description($fn_description))*","highlight_start":1,"highlight_end":62},{"text":"                            .push_docstring(&[$($docstring,)*])","highlight_start":1,"highlight_end":64},{"text":"                            $(.deprecated($deprecated))*","highlight_start":1,"highlight_end":57},{"text":"                            $(.argument(","highlight_start":1,"highlight_end":41},{"text":"                                $crate::__juniper_create_arg!(","highlight_start":1,"highlight_end":63},{"text":"                                    registry = registry,","highlight_start":1,"highlight_end":57},{"text":"                                    info = info,","highlight_start":1,"highlight_end":49},{"text":"                                    arg_ty = $arg_ty,","highlight_start":1,"highlight_end":54},{"text":"                                    arg_name = $arg_name,","highlight_start":1,"highlight_end":58},{"text":"                                    $(default = $arg_default,)*","highlight_start":1,"highlight_end":64},{"text":"                                    $(description = $arg_description,)*","highlight_start":1,"highlight_end":72},{"text":"                                    $(docstring = $arg_docstring,)*","highlight_start":1,"highlight_end":68},{"text":"                                )","highlight_start":1,"highlight_end":34},{"text":"                            ))*,","highlight_start":1,"highlight_end":33},{"text":"                    )*];","highlight_start":1,"highlight_end":25},{"text":"                    registry.build_object_type::<$name>(","highlight_start":1,"highlight_end":57},{"text":"                        info, fields","highlight_start":1,"highlight_end":37},{"text":"                    )","highlight_start":1,"highlight_end":22},{"text":"                        $(.description($desciption))*","highlight_start":1,"highlight_end":54},{"text":"                        $($(.interfaces(&[","highlight_start":1,"highlight_end":43},{"text":"                           $(registry.get_type::<$interface>(&()),)*","highlight_start":1,"highlight_end":69},{"text":"                        ]))*)*","highlight_start":1,"highlight_end":31},{"text":"                        .into_meta()","highlight_start":1,"highlight_end":37},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn concrete_type_name(&self, _: &Self::Context, _: &Self::TypeInfo) -> String {","highlight_start":1,"highlight_end":96},{"text":"                    $($outname)*.to_owned()","highlight_start":1,"highlight_end":44},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                #[allow(unused_variables)]","highlight_start":1,"highlight_end":43},{"text":"                fn resolve_field(","highlight_start":1,"highlight_end":34},{"text":"                    &$main_self,","highlight_start":1,"highlight_end":33},{"text":"                    info: &Self::TypeInfo,","highlight_start":1,"highlight_end":43},{"text":"                    field: &str,","highlight_start":1,"highlight_end":33},{"text":"                    args: &$crate::Arguments<$crate::__juniper_insert_generic!($($scalar)+)>,","highlight_start":1,"highlight_end":94},{"text":"                    executor: &$crate::Executor<Self::Context, $crate::__juniper_insert_generic!($($scalar)+)>","highlight_start":1,"highlight_end":111},{"text":"                ) -> $crate::ExecutionResult<$crate::__juniper_insert_generic!($($scalar)+)> {","highlight_start":1,"highlight_end":95},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        if field == &$crate::to_camel_case(stringify!($fn_name)) {","highlight_start":1,"highlight_end":83},{"text":"                            let result: $return_ty = (|| {","highlight_start":1,"highlight_end":59},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $arg_name: $arg_ty = args.get(&$crate::to_camel_case(stringify!($arg_name)))","highlight_start":1,"highlight_end":117},{"text":"                                        .expect(concat!(","highlight_start":1,"highlight_end":57},{"text":"                                            \"Argument \",","highlight_start":1,"highlight_end":57},{"text":"                                            stringify!($arg_name),","highlight_start":1,"highlight_end":67},{"text":"                                            \" missing - validation must have failed\"","highlight_start":1,"highlight_end":85},{"text":"                                        ));","highlight_start":1,"highlight_end":44},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $(","highlight_start":1,"highlight_end":35},{"text":"                                    let $executor = &executor;","highlight_start":1,"highlight_end":63},{"text":"                                )*","highlight_start":1,"highlight_end":35},{"text":"                                $body","highlight_start":1,"highlight_end":38},{"text":"                            })();","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                            return $crate::IntoResolvable::into(result, executor.context())","highlight_start":1,"highlight_end":92},{"text":"                                .and_then(|res| {","highlight_start":1,"highlight_end":50},{"text":"                                    match res {","highlight_start":1,"highlight_end":48},{"text":"                                        Some((ctx, r)) => {","highlight_start":1,"highlight_end":60},{"text":"                                            executor.replaced_context(ctx)","highlight_start":1,"highlight_end":75},{"text":"                                                .resolve_with_ctx(&(), &r)","highlight_start":1,"highlight_end":75},{"text":"                                        }","highlight_start":1,"highlight_end":42},{"text":"                                        None => Ok($crate::Value::null())","highlight_start":1,"highlight_end":74},{"text":"                                    }","highlight_start":1,"highlight_end":38},{"text":"                                });","highlight_start":1,"highlight_end":36},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    panic!(\"Field {} not found on type {}\", field, $($outname)*);","highlight_start":1,"highlight_end":82},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = {","highlight_start":1,"highlight_end":17},{"text":"            lifetimes = [$($lifetime:tt,)*],","highlight_start":1,"highlight_end":45},{"text":"            name = $name:ty,","highlight_start":1,"highlight_end":29},{"text":"            ctx = $ctxt: ty,","highlight_start":1,"highlight_end":29},{"text":"            main_self = $mainself: ident,","highlight_start":1,"highlight_end":42},{"text":"            outname = {$($outname:tt)*},","highlight_start":1,"highlight_end":41},{"text":"            scalar = {$($scalar:tt)*},","highlight_start":1,"highlight_end":39},{"text":"            $(description = $desciption: tt,)*","highlight_start":1,"highlight_end":47},{"text":"            $(additional = {","highlight_start":1,"highlight_end":29},{"text":"                $(interfaces = [$($_interface:ty,)*],)*","highlight_start":1,"highlight_end":56},{"text":"            },)*","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = [$($interface: ty),+]  $($rest:tt)*","highlight_start":1,"highlight_end":51},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = {","highlight_start":1,"highlight_end":21},{"text":"                lifetimes = [$($lifetime,)*],","highlight_start":1,"highlight_end":46},{"text":"                name = $name,","highlight_start":1,"highlight_end":30},{"text":"                ctx = $ctxt,","highlight_start":1,"highlight_end":29},{"text":"                main_self = $mainself,","highlight_start":1,"highlight_end":39},{"text":"                outname = {$($outname)*},","highlight_start":1,"highlight_end":42},{"text":"                scalar = {$($scalar)*},","highlight_start":1,"highlight_end":40},{"text":"                $(description = $desciption,)*","highlight_start":1,"highlight_end":47},{"text":"                additional = {","highlight_start":1,"highlight_end":31},{"text":"                        interfaces = [$($interface,)*],","highlight_start":1,"highlight_end":56},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse_interfaces,","highlight_start":1,"highlight_end":27},{"text":"        success_callback = $success_callback: ident,","highlight_start":1,"highlight_end":53},{"text":"        additional_parser = {$($additional:tt)*},","highlight_start":1,"highlight_end":50},{"text":"        meta = { $($meta:tt)* },","highlight_start":1,"highlight_end":33},{"text":"        items = [$({$($items: tt)*},)*],","highlight_start":1,"highlight_end":41},{"text":"        rest = interfaces: $($rest:tt)*","highlight_start":1,"highlight_end":40},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::graphql_object!(","highlight_start":1,"highlight_end":33},{"text":"            @parse_interfaces,","highlight_start":1,"highlight_end":31},{"text":"            success_callback = $success_callback,","highlight_start":1,"highlight_end":50},{"text":"            additional_parser = {$($additional)*},","highlight_start":1,"highlight_end":51},{"text":"            meta = { $($meta)* },","highlight_start":1,"highlight_end":34},{"text":"            items = [$({$($items)*},)*],","highlight_start":1,"highlight_end":41},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        @parse,","highlight_start":1,"highlight_end":16},{"text":"        meta = {$($meta:tt)*},","highlight_start":1,"highlight_end":31},{"text":"        rest = $($rest:tt)*","highlight_start":1,"highlight_end":28},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_field_list!(","highlight_start":1,"highlight_end":45},{"text":"            success_callback = graphql_object,","highlight_start":1,"highlight_end":47},{"text":"            additional_parser = {","highlight_start":1,"highlight_end":34},{"text":"                callback = graphql_object,","highlight_start":1,"highlight_end":43},{"text":"                header = {@parse_interfaces,},","highlight_start":1,"highlight_end":47},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            meta = {$($meta)*},","highlight_start":1,"highlight_end":32},{"text":"            items = [],","highlight_start":1,"highlight_end":24},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@$($stuff:tt)*) => {","highlight_start":1,"highlight_end":26},{"text":"        compile_error!(\"Invalid syntax for `graphql_object!`\");","highlight_start":1,"highlight_end":64},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (","highlight_start":1,"highlight_end":6},{"text":"        $($rest:tt)*","highlight_start":1,"highlight_end":21},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $crate::__juniper_parse_object_header!(","highlight_start":1,"highlight_end":48},{"text":"            callback = graphql_object,","highlight_start":1,"highlight_end":39},{"text":"            rest = $($rest)*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following implementations were found:\n  <Result<(&'a <T as GraphQLType<S>>::Context, T), FieldError<S>> as IntoResolvable<'a, S, T, C>>\n  <Result<T, E> as IntoResolvable<'a, S, T, C>>\n  <Result<std::option::Option<(&'a <T as GraphQLType<S>>::Context, T)>, FieldError<S>> as IntoResolvable<'a, S, std::option::Option<T>, C>>","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Result<TxSuccess, FieldError>: IntoResolvable<'_, _, _, _>` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/schema.rs:52:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mgraphql_object!(MutationRoot : Context as \"Mutation\" |&self| {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // Each field represents functionality available\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // through the GraphQL mutations\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m});\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|__^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `IntoResolvable<'_, _, _, _>` is not implemented for `Result<TxSuccess, FieldError>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following implementations were found:\u001b[0m\n\u001b[0m             <Result<(&'a <T as GraphQLType<S>>::Context, T), FieldError<S>> as IntoResolvable<'a, S, T, C>>\u001b[0m\n\u001b[0m             <Result<T, E> as IntoResolvable<'a, S, T, C>>\u001b[0m\n\u001b[0m             <Result<std::option::Option<(&'a <T as GraphQLType<S>>::Context, T)>, FieldError<S>> as IntoResolvable<'a, S, std::option::Option<T>, C>>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::graphql_object` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to 14 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 14 previous errors\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0061, E0277, E0412, E0425, E0432.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0061, E0277, E0412, E0425, E0432.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0061`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0061`.\u001b[0m\n"}
